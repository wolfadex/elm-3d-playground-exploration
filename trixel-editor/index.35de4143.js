!function(){var n={};!function(n){function e(n,e,r){return r.a=n,r.f=e,r}function r(n){return e(2,n,(function(e){return function(r){return n(e,r)}}))}function t(n){return e(3,n,(function(e){return function(r){return function(t){return n(e,r,t)}}}))}function o(n){return e(4,n,(function(e){return function(r){return function(t){return function(o){return n(e,r,t,o)}}}}))}function a(n){return e(5,n,(function(e){return function(r){return function(t){return function(o){return function(a){return n(e,r,t,o,a)}}}}}))}function i(n){return e(6,n,(function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return n(e,r,t,o,a,i)}}}}}}))}function c(n){return e(7,n,(function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return n(e,r,t,o,a,i,c)}}}}}}}))}function l(n){return e(8,n,(function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return n(e,r,t,o,a,i,c,l)}}}}}}}}))}function u(n,e,r){return 2===n.a?n.f(e,r):n(e)(r)}function f(n,e,r,t){return 3===n.a?n.f(e,r,t):n(e)(r)(t)}function s(n,e,r,t,o){return 4===n.a?n.f(e,r,t,o):n(e)(r)(t)(o)}function d(n,e,r,t,o,a){return 5===n.a?n.f(e,r,t,o,a):n(e)(r)(t)(o)(a)}function v(n,e,r,t,o,a,i){return 6===n.a?n.f(e,r,t,o,a,i):n(e)(r)(t)(o)(a)(i)}function m(n,e,r,t,o,a,i,c){return 7===n.a?n.f(e,r,t,o,a,i,c):n(e)(r)(t)(o)(a)(i)(c)}function b(n,e,r,t,o,a,i,c,l){return 8===n.a?n.f(e,r,t,o,a,i,c,l):n(e)(r)(t)(o)(a)(i)(c)(l)}var p=t((function(n,e,r){for(var t=Array(n),o=0;n>o;o++)t[o]=r(e+o);return t})),g=r((function(n,e){for(var r=Array(n),t=0;n>t&&e.b;t++)r[t]=e.a,e=e.b;return r.length=t,w(r,e)})),h=r((function(n,e){return e[n]})),x=t((function(n,e,r){for(var t=r.length-1;t>=0;t--)e=u(n,r[t],e);return e}));function C(n){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+n+".md")}function P(n,e){for(var r,t=[],o=M(n,e,0,t);o&&(r=t.pop());o=M(r.a,r.b,0,t));return o}function M(n,e,r,t){if(n===e)return!0;if("object"!=typeof n||null===n||null===e)return"function"==typeof n&&C(5),!1;if(r>100)return t.push(w(n,e)),!0;for(var o in 0>n.$&&(n=Nr(n),e=Nr(e)),n)if(!M(n[o],e[o],r+1,t))return!1;return!0}function y(n,e,r){if("object"!=typeof n)return n===e?0:e>n?-1:1;if(void 0===n.$)return(r=y(n.a,e.a))||(r=y(n.b,e.b))?r:y(n.c,e.c);for(;n.b&&e.b&&!(r=y(n.a,e.a));n=n.b,e=e.b);return r||(n.b?1:e.b?-1:0)}var T=r((function(n,e){var r=y(n,e);return 0>r?zr:r?Dr:$r}));function w(n,e){return{a:n,b:e}}function L(n,e,r){return{a:n,b:e,c:r}}function S(n,e){var r={};for(var t in n)r[t]=n[t];for(var t in e)r[t]=e[t];return r}function N(n,e){if("string"==typeof n)return n+e;if(!n.b)return e;var r=D(n.a,e);n=n.b;for(var t=r;n.b;n=n.b)t=t.b=D(n.a,e);return r}var $={$:0};function D(n,e){return{$:1,a:n,b:e}}var z=r(D);function A(n){for(var e=$,r=n.length;r--;)e=D(n[r],e);return e}function _(n){for(var e=[];n.b;n=n.b)e.push(n.a);return e}var B=t((function(n,e,r){for(var t=[];e.b&&r.b;e=e.b,r=r.b)t.push(u(n,e.a,r.a));return A(t)})),R=r((function(n,e){return n*e})),V=r(Math.pow),F=r((function(n,e){var r=e%n;return 0===n?C(11):r>0&&0>n||0>r&&n>0?r+n:r})),k=Math.cos,j=Math.sin,E=Math.tan,W=Math.ceil,I=Math.floor,H=Math.round,U=Math.sqrt,O=Math.log,G=isNaN,q=r((function(n,e){return n+e})),Y=t((function(n,e,r){for(var t=r.length;t--;){var o=r[t],a=r.charCodeAt(t);56320>a||a>57343||(o=r[--t]+o),e=u(n,o,e)}return e})),K=r((function(n,e){return e.split(n)})),X=r((function(n,e){return e.join(n)})),Z=t((function(n,e,r){return r.slice(n,e)})),J=r((function(n,e){return 0===e.indexOf(n)}));function Q(n){return n+""}function nn(n){return{$:2,b:n}}var en=nn((function(n){return"number"!=typeof n?hn("an INT",n):n>-2147483647&&2147483647>n&&(0|n)===n?Vr(n):!isFinite(n)||n%1?hn("an INT",n):Vr(n)})),rn=nn((function(n){return"boolean"==typeof n?Vr(n):hn("a BOOL",n)})),tn=nn((function(n){return"number"==typeof n?Vr(n):hn("a FLOAT",n)})),on=(nn((function(n){return Vr(n)})),nn((function(n){return"string"==typeof n?Vr(n):n instanceof String?Vr(n+""):hn("a STRING",n)}))),an=r((function(n,e){return{$:6,d:n,b:e}}));function cn(n,e){return{$:9,f:n,g:e}}var ln=r((function(n,e){return{$:10,b:e,h:n}})),un=r((function(n,e){return cn(n,[e])})),fn=t((function(n,e,r){return cn(n,[e,r])})),sn=o((function(n,e,r,t){return cn(n,[e,r,t])})),dn=r((function(n,e){try{return mn(n,JSON.parse(e))}catch(n){return Ar(u(_r,"This is not valid JSON! "+n.message,e))}})),vn=r((function(n,e){return mn(n,e)}));function mn(n,e){switch(n.$){case 2:return n.b(e);case 5:return null===e?Vr(n.c):hn("null",e);case 3:return pn(e)?bn(n.b,e,A):hn("a LIST",e);case 4:return pn(e)?bn(n.b,e,gn):hn("an ARRAY",e);case 6:var r=n.d;if("object"!=typeof e||null===e||!(r in e))return hn("an OBJECT with a field named `"+r+"`",e);var t=mn(n.b,e[r]);return xt(t)?t:Ar(u(Br,r,t.a));case 7:var o=n.e;return pn(e)?e.length>o?(t=mn(n.b,e[o]),xt(t)?t:Ar(u(Rr,o,t.a))):hn("a LONGER array. Need index "+o+" but only see "+e.length+" entries",e):hn("an ARRAY",e);case 8:if("object"!=typeof e||null===e||pn(e))return hn("an OBJECT",e);var a=$;for(var i in e)if(e.hasOwnProperty(i)){if(t=mn(n.b,e[i]),!xt(t))return Ar(u(Br,i,t.a));a=D(w(i,t.a),a)}return Vr(Zr(a));case 9:for(var c=n.f,l=n.g,f=0;l.length>f;f++){if(t=mn(l[f],e),!xt(t))return t;c=c(t.a)}return Vr(c);case 10:return t=mn(n.b,e),xt(t)?mn(n.h(t.a),e):t;case 11:for(var s=$,d=n.g;d.b;d=d.b){if(t=mn(d.a,e),xt(t))return t;s=D(t.a,s)}return Ar(Fr(Zr(s)));case 1:return Ar(u(_r,n.a,e));case 0:return Vr(n.a)}}function bn(n,e,r){for(var t=e.length,o=Array(t),a=0;t>a;a++){var i=mn(n,e[a]);if(!xt(i))return Ar(u(Rr,a,i.a));o[a]=i.a}return Vr(r(o))}function pn(n){return Array.isArray(n)||"undefined"!=typeof FileList&&n instanceof FileList}function gn(n){return u(ht,n.length,(function(e){return n[e]}))}function hn(n,e){return Ar(u(_r,"Expecting "+n,e))}function xn(n,e){if(n===e)return!0;if(n.$!==e.$)return!1;switch(n.$){case 0:case 1:return n.a===e.a;case 2:return n.b===e.b;case 5:return n.c===e.c;case 3:case 4:case 8:return xn(n.b,e.b);case 6:return n.d===e.d&&xn(n.b,e.b);case 7:return n.e===e.e&&xn(n.b,e.b);case 9:return n.f===e.f&&Cn(n.g,e.g);case 10:return n.h===e.h&&xn(n.b,e.b);case 11:return Cn(n.g,e.g)}}function Cn(n,e){var r=n.length;if(r!==e.length)return!1;for(var t=0;r>t;t++)if(!xn(n[t],e[t]))return!1;return!0}var Pn=r((function(n,e){return JSON.stringify(e,null,n)+""}));function Mn(n){return n}var yn=t((function(n,e,r){return r[n]=e,r}));function Tn(n){return{$:0,a:n}}function wn(n){return{$:2,b:n,c:null}}var Ln=r((function(n,e){return{$:3,b:n,d:e}})),Sn=0;function Nn(n){var e={$:0,e:Sn++,f:n,g:null,h:[]};return Bn(e),e}function $n(n){return wn((function(e){e(Tn(Nn(n)))}))}function Dn(n,e){n.h.push(e),Bn(n)}var zn=r((function(n,e){return wn((function(r){Dn(n,e),r(Tn(0))}))})),An=!1,_n=[];function Bn(n){if(_n.push(n),!An){for(An=!0;n=_n.shift();)Rn(n);An=!1}}function Rn(n){for(;n.f;){var e=n.f.$;if(0===e||1===e){for(;n.g&&n.g.$!==e;)n.g=n.g.i;if(!n.g)return;n.f=n.g.b(n.f.a),n.g=n.g.i}else{if(2===e)return void(n.f.c=n.f.b((function(e){n.f=e,Bn(n)})));if(5===e){if(0===n.h.length)return;n.f=n.f.b(n.h.shift())}else n.g={$:3===e?0:1,b:n.f.b,i:n.g},n.f=n.f.d}}}var Vn={};function Fn(n,e,r,t,o){return{b:n,c:e,d:r,e:t,f:o}}function kn(n,e){var r={g:e,h:void 0},t=n.c,o=n.d,a=n.e,i=n.f;return r.h=Nn(u(Ln,(function n(e){return u(Ln,n,{$:5,b:function(n){var c=n.a;return 0===n.$?f(o,r,c,e):a&&i?s(t,r,c.i,c.j,e):f(t,r,a?c.i:c.j,e)}})}),n.b))}var jn=r((function(n,e){return wn((function(r){n.g(e),r(Tn(0))}))})),En=r((function(n,e){return u(zn,n.h,{$:0,a:e})}));function Wn(n){return function(e){return{$:1,k:n,l:e}}}function In(n){return{$:2,m:n}}var Hn=r((function(n,e){return{$:3,n:n,o:e}})),Un=[],On=!1;function Gn(n,e,r){if(Un.push({p:n,q:e,r:r}),!On){On=!0;for(var t;t=Un.shift();)qn(t.p,t.q,t.r);On=!1}}function qn(n,e,r){var t={};for(var o in Yn(!0,e,t,null),Yn(!1,r,t,null),n)Dn(n[o],{$:"fx",a:t[o]||{i:$,j:$}})}function Yn(n,e,r,t){switch(e.$){case 1:var o=e.k,a=function(n,e,r,t){return u(n?Vn[e].e:Vn[e].f,(function(n){for(var e=r;e;e=e.t)n=e.s(n);return n}),t)}(n,o,t,e.l);return void(r[o]=function(n,e,r){return r=r||{i:$,j:$},n?r.i=D(e,r.i):r.j=D(e,r.j),r}(n,a,r[o]));case 2:for(var i=e.m;i.b;i=i.b)Yn(n,i.a,r,t);return;case 3:return void Yn(n,e.o,r,{s:e.n,t:t})}}function Kn(n,e){return function(n){Vn[n]&&C(3)}(n),Vn[n]={f:Xn,u:e,a:Zn},Wn(n)}var Xn=r((function(n,e){return function(r){return n(e(r))}}));function Zn(n,e){var r=$,o=Vn[n].u,a=Tn(null);return Vn[n].b=a,Vn[n].c=t((function(n,e){return r=e,a})),{send:function(n){var t=u(vn,o,n);xt(t)||C(4);for(var a=t.a,i=r;i.b;i=i.b)e(i.a(a))}}}var Jn="undefined"!=typeof document?document:{};function Qn(n,e){n.appendChild(e)}function ne(n){return{$:0,a:n}}var ee,re=r((function(n,e){return r((function(r,t){for(var o=[],a=0;t.b;t=t.b){var i=t.a;a+=i.b||0,o.push(i)}return a+=o.length,{$:1,c:e,d:ue(r),e:o,f:n,b:a}}))}))(void 0),te=r((function(n,e){return r((function(r,t){for(var o=[],a=0;t.b;t=t.b){var i=t.a;a+=i.b.b||0,o.push(i)}return a+=o.length,{$:2,c:e,d:ue(r),e:o,f:n,b:a}}))}))(void 0),oe=r((function(n,e){return{$:4,j:n,k:e,b:1+(e.b||0)}})),ae=r((function(n,e){return{$:"a0",n:n,o:e}})),ie=r((function(n,e){return{$:"a1",n:n,o:e}})),ce=r((function(n,e){return{$:"a2",n:n,o:e}})),le=r((function(n,e){return{$:"a3",n:n,o:e}}));function ue(n){for(var e={};n.b;n=n.b){var r=n.a,t=r.$,o=r.n,a=r.o;if("a2"!==t){var i=e[t]||(e[t]={});"a3"===t&&"class"===o?fe(i,o,a):i[o]=a}else"className"===o?fe(e,o,a):e[o]=a}return e}function fe(n,e,r){var t=n[e];n[e]=t?t+" "+r:r}function se(n,e){var r=n.$;if(5===r)return se(n.k||(n.k=n.m()),e);if(0===r)return Jn.createTextNode(n.a);if(4===r){for(var t=n.k,o=n.j;4===t.$;)"object"!=typeof o?o=[o,t.j]:o.push(t.j),t=t.k;var a={j:o,p:e};return(i=se(t,a)).elm_event_node_ref=a,i}if(3===r)return de(i=n.h(n.g),e,n.d),i;var i=n.f?Jn.createElementNS(n.f,n.c):Jn.createElement(n.c);de(i,e,n.d);for(var c=n.e,l=0;c.length>l;l++)Qn(i,se(1===r?c[l]:c[l].b,e));return i}function de(n,e,r){for(var t in r){var o=r[t];"a1"===t?ve(n,o):"a0"===t?pe(n,e,o):"a3"===t?me(n,o):"a4"===t?be(n,o):("value"!==t&&"checked"!==t||n[t]!==o)&&(n[t]=o)}}function ve(n,e){var r=n.style;for(var t in e)r[t]=e[t]}function me(n,e){for(var r in e){var t=e[r];void 0!==t?n.setAttribute(r,t):n.removeAttribute(r)}}function be(n,e){for(var r in e){var t=e[r],o=t.f,a=t.o;void 0!==a?n.setAttributeNS(o,r,a):n.removeAttributeNS(o,r)}}function pe(n,e,r){var t=n.elmFs||(n.elmFs={});for(var o in r){var a=r[o],i=t[o];if(a){if(i){if(i.q.$===a.$){i.q=a;continue}n.removeEventListener(o,i)}i=ge(e,a),n.addEventListener(o,i,ee&&{passive:2>Dt(a)}),t[o]=i}else n.removeEventListener(o,i),t[o]=void 0}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){ee=!0}}))}catch(n){}function ge(n,e){function r(e){var t=r.q,o=mn(t.a,e);if(xt(o)){for(var a,i=Dt(t),c=o.a,l=i?3>i?c.a:c.aH:c,u=1==i?c.b:3==i&&c.dJ,f=(u&&e.stopPropagation(),(2==i?c.b:3==i&&c.dv)&&e.preventDefault(),n);a=f.j;){if("function"==typeof a)l=a(l);else for(var s=a.length;s--;)l=a[s](l);f=f.p}f(l,u)}}return r.q=e,r}function he(n,e){return n.$==e.$&&xn(n.a,e.a)}function xe(n,e,r,t){var o={$:e,r:r,s:t,t:void 0,u:void 0};return n.push(o),o}function Ce(n,e,r,t){if(n!==e){var o=n.$,a=e.$;if(o!==a){if(1!==o||2!==a)return void xe(r,0,t,e);e=function(n){for(var e=n.e,r=e.length,t=Array(r),o=0;r>o;o++)t[o]=e[o].b;return{$:1,c:n.c,d:n.d,e:t,f:n.f,b:n.b}}(e),a=1}switch(a){case 5:for(var i=n.l,c=e.l,l=i.length,u=l===c.length;u&&l--;)u=i[l]===c[l];if(u)return void(e.k=n.k);e.k=e.m();var f=[];return Ce(n.k,e.k,f,0),void(f.length>0&&xe(r,1,t,f));case 4:for(var s=n.j,d=e.j,v=!1,m=n.k;4===m.$;)v=!0,"object"!=typeof s?s=[s,m.j]:s.push(m.j),m=m.k;for(var b=e.k;4===b.$;)v=!0,"object"!=typeof d?d=[d,b.j]:d.push(b.j),b=b.k;return v&&s.length!==d.length?void xe(r,0,t,e):((v?function(n,e){for(var r=0;n.length>r;r++)if(n[r]!==e[r])return!1;return!0}(s,d):s===d)||xe(r,2,t,d),void Ce(m,b,r,t+1));case 0:return void(n.a!==e.a&&xe(r,3,t,e.a));case 1:return void Pe(n,e,r,t,ye);case 2:return void Pe(n,e,r,t,Te);case 3:if(n.h!==e.h)return void xe(r,0,t,e);var p=Me(n.d,e.d);p&&xe(r,4,t,p);var g=e.i(n.g,e.g);return void(g&&xe(r,5,t,g))}}}function Pe(n,e,r,t,o){if(n.c===e.c&&n.f===e.f){var a=Me(n.d,e.d);a&&xe(r,4,t,a),o(n,e,r,t)}else xe(r,0,t,e)}function Me(n,e,r){var t;for(var o in n)if("a1"!==o&&"a0"!==o&&"a3"!==o&&"a4"!==o)if(o in e){var a=n[o],i=e[o];a===i&&"value"!==o&&"checked"!==o||"a0"===r&&he(a,i)||((t=t||{})[o]=i)}else(t=t||{})[o]=r?"a1"===r?"":"a0"===r||"a3"===r?void 0:{f:n[o].f,o:void 0}:"string"==typeof n[o]?"":null;else{var c=Me(n[o],e[o]||{},o);c&&((t=t||{})[o]=c)}for(var l in e)l in n||((t=t||{})[l]=e[l]);return t}function ye(n,e,r,t){var o=n.e,a=e.e,i=o.length,c=a.length;i>c?xe(r,6,t,{v:c,i:i-c}):c>i&&xe(r,7,t,{v:i,e:a});for(var l=c>i?i:c,u=0;l>u;u++){var f=o[u];Ce(f,a[u],r,++t),t+=f.b||0}}function Te(n,e,r,t){for(var o=[],a={},i=[],c=n.e,l=e.e,u=c.length,f=l.length,s=0,d=0,v=t;u>s&&f>d;){var m=(L=c[s]).a,b=(S=l[d]).a,p=L.b,g=S.b,h=void 0,x=void 0;if(m!==b){var C=c[s+1],P=l[d+1];if(C){var M=C.a,y=C.b;x=b===M}if(P){var T=P.a,w=P.b;h=m===T}if(h&&x)Ce(p,w,o,++v),Le(a,o,m,g,d,i),v+=p.b||0,Se(a,o,m,y,++v),v+=y.b||0,s+=2,d+=2;else if(h)v++,Le(a,o,b,g,d,i),Ce(p,w,o,v),v+=p.b||0,s+=1,d+=2;else if(x)Se(a,o,m,p,++v),v+=p.b||0,Ce(y,g,o,++v),v+=y.b||0,s+=2,d+=1;else{if(!C||M!==T)break;Se(a,o,m,p,++v),Le(a,o,b,g,d,i),v+=p.b||0,Ce(y,w,o,++v),v+=y.b||0,s+=2,d+=2}}else Ce(p,g,o,++v),v+=p.b||0,s++,d++}for(;u>s;){var L;v++,Se(a,o,(L=c[s]).a,p=L.b,v),v+=p.b||0,s++}for(;f>d;){var S,N=N||[];Le(a,o,(S=l[d]).a,S.b,void 0,N),d++}(o.length>0||i.length>0||N)&&xe(r,8,t,{w:o,x:i,y:N})}var we="_elmW6BL";function Le(n,e,r,t,o,a){var i=n[r];if(!i)return a.push({r:o,A:i={c:0,z:t,r:o,s:void 0}}),void(n[r]=i);if(1===i.c){a.push({r:o,A:i}),i.c=2;var c=[];return Ce(i.z,t,c,i.r),i.r=o,void(i.s.s={w:c,A:i})}Le(n,e,r+we,t,o,a)}function Se(n,e,r,t,o){var a=n[r];if(a){if(0===a.c){a.c=2;var i=[];return Ce(t,a.z,i,o),void xe(e,9,o,{w:i,A:a})}Se(n,e,r+we,t,o)}else{var c=xe(e,9,o,void 0);n[r]={c:1,z:t,r:o,s:c}}}function Ne(n,e,r,t){$e(n,e,r,0,0,e.b,t)}function $e(n,e,r,t,o,a,i){for(var c=r[t],l=c.r;l===o;){var u=c.$;if(1===u)Ne(n,e.k,c.s,i);else if(8===u)c.t=n,c.u=i,(f=c.s.w).length>0&&$e(n,e,f,0,o,a,i);else if(9===u){c.t=n,c.u=i;var f,s=c.s;s&&(s.A.s=n,(f=s.w).length>0&&$e(n,e,f,0,o,a,i))}else c.t=n,c.u=i;if(!(c=r[++t])||(l=c.r)>a)return t}var d=e.$;if(4===d){for(var v=e.k;4===v.$;)v=v.k;return $e(n,v,r,t,o+1,a,n.elm_event_node_ref)}for(var m=e.e,b=n.childNodes,p=0;m.length>p;p++){o++;var g=1===d?m[p]:m[p].b,h=o+(g.b||0);if(!(o>l||l>h||(c=r[t=$e(b[p],g,r,t,o,h,i)])&&(l=c.r)<=a))return t;o=h}return t}function De(n,e){for(var r=0;e.length>r;r++){var t=e[r],o=t.t,a=ze(o,t);o===n&&(n=a)}return n}function ze(n,e){switch(e.$){case 0:return function(n,e,r){var t=n.parentNode,o=se(e,r);return o.elm_event_node_ref||(o.elm_event_node_ref=n.elm_event_node_ref),t&&o!==n&&t.replaceChild(o,n),o}(n,e.s,e.u);case 4:return de(n,e.u,e.s),n;case 3:return n.replaceData(0,n.length,e.s),n;case 1:return De(n,e.s);case 2:return n.elm_event_node_ref?n.elm_event_node_ref.j=e.s:n.elm_event_node_ref={j:e.s,p:e.u},n;case 6:for(var r=e.s,t=0;r.i>t;t++)n.removeChild(n.childNodes[r.v]);return n;case 7:for(var o=(r=e.s).e,a=n.childNodes[t=r.v];o.length>t;t++)n.insertBefore(se(o[t],e.u),a);return n;case 9:if(!(r=e.s))return n.parentNode.removeChild(n),n;var i=r.A;return void 0!==i.r&&n.parentNode.removeChild(n),i.s=De(n,r.w),n;case 8:return function(n,e){var r=e.s,t=function(n,e){if(n){for(var r=Jn.createDocumentFragment(),t=0;n.length>t;t++){var o=n[t].A;Qn(r,2===o.c?o.s:se(o.z,e.u))}return r}}(r.y,e);n=De(n,r.w);for(var o=r.x,a=0;o.length>a;a++){var i=o[a],c=i.A,l=2===c.c?c.s:se(c.z,e.u);n.insertBefore(l,n.childNodes[i.r])}return t&&Qn(n,t),n}(n,e);case 5:return e.s(n);default:C(10)}}function Ae(n){if(3===n.nodeType)return ne(n.textContent);if(1!==n.nodeType)return ne("");for(var e=$,r=n.attributes,t=r.length;t--;){var o=r[t];e=D(u(le,o.name,o.value),e)}var a=n.tagName.toLowerCase(),i=$,c=n.childNodes;for(t=c.length;t--;)i=D(Ae(c[t]),i);return f(re,a,e,i)}var _e=o((function(n,e,r,t){return function(n,e,r,t,o,a){var i=u(vn,n,e?e.flags:void 0);xt(i)||C(2);var c={},l=r(i.a),f=l.a,s=a(v,f),d=function(n,e){var r;for(var t in Vn){var o=Vn[t];o.a&&((r=r||{})[t]=o.a(t,e)),n[t]=kn(o,e)}return r}(c,v);function v(n,e){var r=u(t,n,f);s(f=r.a,e),Gn(c,r.b,o(f))}return Gn(c,l.b,o(f)),d?{ports:d}:{}}(e,t,n.fO,n.gq,n.gi,(function(e,r){var o=n.gs,a=t.node,i=Ae(a);return function(n,e){e(n);var r=0;function t(){r=1===r?0:(Re(t),e(n),1)}return function(o,a){n=o,a?(e(n),2===r&&(r=1)):(0===r&&Re(t),r=2)}}(r,(function(n){var r=o(n),t=function(n,e){var r=[];return Ce(n,e,r,0),r}(i,r);a=function(n,e,r,t){return 0===r.length?n:(Ne(n,e,r,t),De(n,r))}(a,i,t,e),i=r}))}))})),Be="undefined"!=typeof cancelAnimationFrame?cancelAnimationFrame:function(n){clearTimeout(n)},Re="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){return setTimeout(n,1e3/60)},Ve={addEventListener:function(){},removeEventListener:function(){}},Fe="undefined"!=typeof document?document:Ve,ke="undefined"!=typeof window?window:Ve,je=t((function(n,e,r){return $n(wn((function(){function t(n){Nn(r(n))}return n.addEventListener(e,t,ee&&{passive:!0}),function(){n.removeEventListener(e,t)}})))})),Ee=r((function(n,e){var r=mn(n,e);return xt(r)?kr(r.a):jr})),We=r((function(n,e){var r="g";n.f$&&(r+="m"),n.fm&&(r+="i");try{return kr(RegExp(e,r))}catch(n){return jr}})),Ie=t((function(n,e,r){for(var t,o=[],a=0,i=r,c=e.lastIndex,l=-1;a++<n&&(t=e.exec(i))&&l!=e.lastIndex;){for(var u=t.length-1,f=Array(u);u>0;){var d=t[u];f[--u]=d?kr(d):jr}o.push(s(Ni,t[0],t.index,a,A(f))),l=e.lastIndex}return e.lastIndex=c,A(o)})),He=0;function Ue(n,e){for(;e.b;e=e.b)n(e.a)}function Oe(n){for(var e=0;n.b;n=n.b)e++;return e}var Ge="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){setTimeout(n,1e3/60)},qe=a((function(n,e,r,t,o){return{$:0,a:n,b:e,c:r,d:t,e:o}})),Ye=r((function(n,e){var r=n.blend;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.BLEND),r.enabled=!0),r.a===e.a&&r.d===e.d||(n.gl.blendEquationSeparate(e.a,e.d),r.a=e.a,r.d=e.d),r.b===e.b&&r.c===e.c&&r.e===e.e&&r.f===e.f||(n.gl.blendFuncSeparate(e.b,e.c,e.e,e.f),r.b=e.b,r.c=e.c,r.e=e.e,r.f=e.f),r.g===e.g&&r.h===e.h&&r.i===e.i&&r.j===e.j||(n.gl.blendColor(e.g,e.h,e.i,e.j),r.g=e.g,r.h=e.h,r.i=e.i,r.j=e.j)})),Ke=r((function(n,e){var r=n.depthTest;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.DEPTH_TEST),r.enabled=!0),r.a!==e.a&&(n.gl.depthFunc(e.a),r.a=e.a),r.b!==e.b&&(n.gl.depthMask(e.b),r.b=e.b),r.c===e.c&&r.d===e.d||(n.gl.depthRange(e.c,e.d),r.c=e.c,r.d=e.d)})),Xe=r((function(n,e){var r=n.stencilTest;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.STENCIL_TEST),r.enabled=!0),r.d===e.d&&r.a===e.a&&r.b===e.b||(n.gl.stencilFuncSeparate(n.gl.FRONT,e.d,e.a,e.b),r.d=e.d),r.e===e.e&&r.f===e.f&&r.g===e.g||(n.gl.stencilOpSeparate(n.gl.FRONT,e.e,e.f,e.g),r.e=e.e,r.f=e.f,r.g=e.g),r.c!==e.c&&(n.gl.stencilMask(e.c),r.c=e.c),r.h===e.h&&r.a===e.a&&r.b===e.b||(n.gl.stencilFuncSeparate(n.gl.BACK,e.h,e.a,e.b),r.h=e.h,r.a=e.a,r.b=e.b),r.i===e.i&&r.j===e.j&&r.k===e.k||(n.gl.stencilOpSeparate(n.gl.BACK,e.i,e.j,e.k),r.i=e.i,r.j=e.j,r.k=e.k)})),Ze=r((function(n,e){var r=n.scissor;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.SCISSOR_TEST),r.enabled=!0),r.a===e.a&&r.b===e.b&&r.c===e.c&&r.d===e.d||(n.gl.scissor(e.a,e.b,e.c,e.d),r.a=e.a,r.b=e.b,r.c=e.c,r.d=e.d)})),Je=r((function(n,e){var r=n.colorMask;r.toggle=n.toggle,r.enabled=!0,r.a===e.a&&r.b===e.b&&r.c===e.c&&r.d===e.d||(n.gl.colorMask(e.a,e.b,e.c,e.d),r.a=e.a,r.b=e.b,r.c=e.c,r.d=e.d)})),Qe=r((function(n,e){var r=n.cullFace;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.CULL_FACE),r.enabled=!0),r.a!==e.a&&(n.gl.cullFace(e.a),r.a=e.a)})),nr=r((function(n,e){var r=n.polygonOffset;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.POLYGON_OFFSET_FILL),r.enabled=!0),r.a===e.a&&r.b===e.b||(n.gl.polygonOffset(e.a,e.b),r.a=e.a,r.b=e.b)})),er=r((function(n,e){var r=n.sampleCoverage;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.SAMPLE_COVERAGE),r.enabled=!0),r.a===e.a&&r.b===e.b||(n.gl.sampleCoverage(e.a,e.b),r.a=e.a,r.b=e.b)})),rr=function(n){n.scissor.enabled&&(n.gl.disable(n.gl.SCISSOR_TEST),n.scissor.enabled=!1)},tr=function(n){var e=n.colorMask;e.a&&e.b&&e.c&&e.d||(n.gl.colorMask(!0,!0,!0,!0),e.a=!0,e.b=!0,e.c=!0,e.d=!0)},or=["blend","depthTest","stencilTest","scissor","colorMask","cullFace","polygonOffset","sampleCoverage","sampleAlphaToCoverage"],ar=[function(n){n.blend.enabled&&(n.gl.disable(n.gl.BLEND),n.blend.enabled=!1)},function(n){n.depthTest.enabled&&(n.gl.disable(n.gl.DEPTH_TEST),n.depthTest.enabled=!1)},function(n){n.stencilTest.enabled&&(n.gl.disable(n.gl.STENCIL_TEST),n.stencilTest.enabled=!1)},rr,tr,function(n){n.gl.disable(n.gl.CULL_FACE)},function(n){n.gl.disable(n.gl.POLYGON_OFFSET_FILL)},function(n){n.gl.disable(n.gl.SAMPLE_COVERAGE)},function(n){n.gl.disable(n.gl.SAMPLE_ALPHA_TO_COVERAGE)}];function ir(n,e,r){var t=n.createShader(r);return n.shaderSource(t,"#extension GL_OES_standard_derivatives : enable\n"+e),n.compileShader(t),t}function cr(n,e){switch(e){case n.FLOAT:return{size:1,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC2:return{size:2,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC3:return{size:3,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC4:return{size:4,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_MAT4:return{size:4,arraySize:4,type:Float32Array,baseType:n.FLOAT};case n.INT:return{size:1,arraySize:1,type:Int32Array,baseType:n.INT}}}function lr(n,e,r,t){for(var o=r.a.d6,a=[],i=0;o>i;i++)a.push(String.fromCharCode(97+i));var c=cr(n,e.type);if(void 0===c)throw Error("No info available for: "+e.type);var l=0,u=c.size*c.arraySize*o,f=new c.type(Oe(r.b)*u);Ue((function(n){!function(n,e,r,t,i){var c;if(1===o)for(c=0;e>c;c++)n[r++]=1===e?t[i]:t[i][c];else a.forEach((function(o){for(c=0;e>c;c++)n[r++]=1===e?t[o][i]:t[o][i][c]}))}(f,c.size*c.arraySize,l,n,t[e.name]||e.name),l+=u}),r.b);var s=n.createBuffer();return n.bindBuffer(n.ARRAY_BUFFER,s),n.bufferData(n.ARRAY_BUFFER,f,n.STATIC_DRAW),s}function ur(n,e){return n+"#"+e}var fr=r((function(n,e){var r=n.f,t=r.gl;return t?(t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),r.depthTest.b||(t.depthMask(!0),r.depthTest.b=!0),r.stencilTest.c!==r.STENCIL_WRITEMASK&&(t.stencilMask(r.STENCIL_WRITEMASK),r.stencilTest.c=r.STENCIL_WRITEMASK),rr(r),tr(r),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT|t.STENCIL_BUFFER_BIT),Ue((function(e){if(e.d.b.b){var o,a,i,c,l;if(e.b.id&&e.c.id&&(o=ur(e.b.id,e.c.id),a=r.programs[o]),!a){var u,f;e.b.id?u=r.shaders[e.b.id]:e.b.id=He++,u||(u=ir(t,e.b.src,t.VERTEX_SHADER),r.shaders[e.b.id]=u),e.c.id?f=r.shaders[e.c.id]:e.c.id=He++,f||(f=ir(t,e.c.src,t.FRAGMENT_SHADER),r.shaders[e.c.id]=f);var s=function(n,e,r){var t=n.createProgram();if(n.attachShader(t,e),n.attachShader(t,r),n.linkProgram(t),!n.getProgramParameter(t,n.LINK_STATUS))throw"Link failed: "+n.getProgramInfoLog(t)+"\nvs info-log: "+n.getShaderInfoLog(e)+"\nfs info-log: "+n.getShaderInfoLog(r);return t}(t,u,f);(a={glProgram:s,attributes:Object.assign({},e.b.attributes,e.c.attributes),currentUniforms:{},activeAttributes:[],activeAttributeLocations:[]}).uniformSetters=function(n,e,r,t){var o=r.glProgram,a=r.currentUniforms,i=0,c=e.f;function l(e,r){var t=r.name,o=n.getUniformLocation(e,t);switch(r.type){case n.INT:return function(e){a[t]!==e&&(n.uniform1i(o,e),a[t]=e)};case n.FLOAT:return function(e){a[t]!==e&&(n.uniform1f(o,e),a[t]=e)};case n.FLOAT_VEC2:return function(e){a[t]!==e&&(n.uniform2f(o,e[0],e[1]),a[t]=e)};case n.FLOAT_VEC3:return function(e){a[t]!==e&&(n.uniform3f(o,e[0],e[1],e[2]),a[t]=e)};case n.FLOAT_VEC4:return function(e){a[t]!==e&&(n.uniform4f(o,e[0],e[1],e[2],e[3]),a[t]=e)};case n.FLOAT_MAT4:return function(e){a[t]!==e&&(n.uniformMatrix4fv(o,!1,new Float32Array(e)),a[t]=e)};case n.SAMPLER_2D:var l=i++;return function(e){n.activeTexture(n.TEXTURE0+l);var r=c.textures.get(e);r||(r=e.fr(n),c.textures.set(e,r)),n.bindTexture(n.TEXTURE_2D,r),a[t]!==e&&(n.uniform1i(o,l),a[t]=e)};case n.BOOL:return function(e){a[t]!==e&&(n.uniform1i(o,e),a[t]=e)};default:return function(){}}}for(var u={},f=n.getProgramParameter(o,n.ACTIVE_UNIFORMS),s=0;f>s;s++){var d=n.getActiveUniform(o,s);u[t[d.name]||d.name]=l(o,d)}return u}(t,n,a,Object.assign({},e.b.uniforms,e.c.uniforms));var d=t.getProgramParameter(s,t.ACTIVE_ATTRIBUTES);for(i=0;d>i;i++){var v=t.getActiveAttrib(s,i),m=t.getAttribLocation(s,v.name);a.activeAttributes.push(v),a.activeAttributeLocations.push(m)}o=ur(e.b.id,e.c.id),r.programs[o]=a}r.lastProgId!==o&&(t.useProgram(a.glProgram),r.lastProgId=o),c=a.uniformSetters,Object.keys(l=e.e).forEach((function(n){var e=c[n];e&&e(l[n])}));var b=r.buffers.get(e.d);for(b||(b=function(n,e){if(e.a.ef>0){var r=n.createBuffer(),t=function(n,e){var r,t=new Uint32Array(Oe(n)*e),o=0;return Ue((function(n){if(1===e)t[o++]=n;else for(r=0;e>r;r++)t[o++]=n[String.fromCharCode(97+r)]}),n),t}(e.c,e.a.ef);return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW),{numIndices:t.length,indexBuffer:r,buffers:{}}}return{numIndices:e.a.d6*Oe(e.b),indexBuffer:null,buffers:{}}}(t,e.d),r.buffers.set(e.d,b)),i=0;a.activeAttributes.length>i;i++){m=a.activeAttributeLocations[i],void 0===b.buffers[(v=a.activeAttributes[i]).name]&&(b.buffers[v.name]=lr(t,v,e.d,a.attributes)),t.bindBuffer(t.ARRAY_BUFFER,b.buffers[v.name]);var p=cr(t,v.type);if(1===p.arraySize)t.enableVertexAttribArray(m),t.vertexAttribPointer(m,p.size,p.baseType,!1,0,0);else for(var g=4*p.size,h=g*p.arraySize,x=0;p.arraySize>x;x++)t.enableVertexAttribArray(m+x),t.vertexAttribPointer(m+x,p.size,p.baseType,!1,h,g*x)}for(r.toggle=!r.toggle,Ue(Bd(r),e.a),i=0;9>i;i++){var C=r[or[i]];C.toggle!==r.toggle&&C.enabled&&(ar[i](r),C.enabled=!1,C.toggle=r.toggle)}b.indexBuffer?(t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,b.indexBuffer),t.drawElements(e.d.a.eM,b.numIndices,t.UNSIGNED_INT,0)):t.drawArrays(e.d.a.eM,0,b.numIndices)}}),n.g),e):e})),sr=t((function(n,e,r){return function(n,e,r,t){return{$:3,d:ue(n),g:e,h:r,i:t}}(e,{g:r,f:{},h:n},hr,xr)})),dr=r((function(n,e){n.contextAttributes.alpha=!0,n.contextAttributes.premultipliedAlpha=e.a})),vr=r((function(n,e){n.contextAttributes.depth=!0,n.sceneSettings.push((function(n){n.clearDepth(e.a)}))})),mr=r((function(n,e){n.contextAttributes.stencil=!0,n.sceneSettings.push((function(n){n.clearStencil(e.a)}))})),br=r((function(n){n.contextAttributes.antialias=!0})),pr=r((function(n,e){n.sceneSettings.push((function(n){n.clearColor(e.a,e.b,e.c,e.d)}))})),gr=r((function(n){n.contextAttributes.preserveDrawingBuffer=!0}));function hr(n){var e={contextAttributes:{alpha:!1,depth:!1,stencil:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1},sceneSettings:[]};Ue((function(n){return u(_d,e,n)}),n.h);var r=Jn.createElement("canvas"),t=r.getContext&&(r.getContext("webgl",e.contextAttributes)||r.getContext("experimental-webgl",e.contextAttributes));return t&&"undefined"!=typeof WeakMap?(e.sceneSettings.forEach((function(n){n(t)})),t.getExtension("OES_standard_derivatives"),t.getExtension("OES_element_index_uint"),n.f.gl=t,n.f.toggle=!1,n.f.blend={enabled:!1,toggle:!1},n.f.depthTest={enabled:!1,toggle:!1},n.f.stencilTest={enabled:!1,toggle:!1},n.f.scissor={enabled:!1,toggle:!1},n.f.colorMask={enabled:!1,toggle:!1},n.f.cullFace={enabled:!1,toggle:!1},n.f.polygonOffset={enabled:!1,toggle:!1},n.f.sampleCoverage={enabled:!1,toggle:!1},n.f.sampleAlphaToCoverage={enabled:!1,toggle:!1},n.f.shaders=[],n.f.programs={},n.f.lastProgId=null,n.f.buffers=new WeakMap,n.f.textures=new WeakMap,n.f.STENCIL_WRITEMASK=t.getParameter(t.STENCIL_WRITEMASK),Ge((function(){return u(fr,n,r)}))):(r=Jn.createElement("div")).innerHTML='<a href="https://get.webgl.org/">Enable WebGL</a> to see this content!',r}function xr(n,e){return e.f=n.f,fr(e)}var Cr=r((function(n,e){return new Float64Array([n,e])}));new Float64Array(3),new Float64Array(3),new Float64Array(3);var Pr=t((function(n,e,r){return new Float64Array([n,e,r])})),Mr=r((function(n,e){return new Float64Array([e[0]*n,e[1]*n,e[2]*n])})),yr=o((function(n,e,r,t){return new Float64Array([n,e,r,t])}));new Float64Array(16),new Float64Array(16),new Float64Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);var Tr=z,wr=x,Lr=t((function(n,e,t){var o=t.c,a=t.d,i=r((function(e,r){return f(wr,e.$?n:i,r,e.a)}));return f(wr,i,f(wr,n,e,a),o)})),Sr=t((function(n,e,r){for(;;){if(-2===r.$)return e;var t=r.d,o=n,a=f(n,r.b,r.c,f(Sr,n,e,r.e));n=o,e=a,r=t}})),Nr=function(n){return f(Sr,t((function(n,e,r){return u(Tr,w(n,e),r)})),$,n)},$r=1,Dr=2,zr=0,Ar=function(n){return{$:1,a:n}},_r=r((function(n,e){return{$:3,a:n,b:e}})),Br=r((function(n,e){return{$:0,a:n,b:e}})),Rr=r((function(n,e){return{$:1,a:n,b:e}})),Vr=function(n){return{$:0,a:n}},Fr=function(n){return{$:2,a:n}},kr=function(n){return{$:0,a:n}},jr={$:1},Er=Pn,Wr=Q,Ir=r((function(n,e){return u(X,n,_(e))})),Hr=r((function(n,e){return A(u(K,n,e))})),Ur=t((function(n,e,r){for(;;){if(!r.b)return e;var t=r.b,o=n,a=u(n,r.a,e);n=o,e=a,r=t}})),Or=function(n){return f(Ur,r((function(n,e){return e+1})),0,n)},Gr=B,qr=t((function(n,e,r){for(;;){if(y(n,e)>=1)return r;var t=n,o=e-1,a=u(Tr,e,r);n=t,e=o,r=a}})),Yr=r((function(n,e){return f(qr,n,e,$)})),Kr=r((function(n,e){return f(Gr,n,u(Yr,0,Or(e)-1),e)})),Xr=function(n){var e=n.charCodeAt(0);return 55296>e||e>56319?e:1024*(e-55296)+n.charCodeAt(1)-56320+65536},Zr=function(n){return f(Ur,Tr,$,n)},Jr=function(n){var e=n.charCodeAt(0);return isNaN(e)?jr:kr(55296>e||e>56319?w(n[0],n.slice(1)):w(n[0]+n[1],n.slice(2)))},Qr=32,nt=o((function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}})),et=[],rt=W,tt=r((function(n,e){return O(e)/O(n)})),ot=function(n){return n},at=rt(u(tt,2,Qr)),it=s(nt,0,at,et,et),ct=p,lt=function(n){return{$:1,a:n}},ut=I,ft=function(n){return n.length},st=r((function(n,e){return y(n,e)>0?n:e})),dt=R,vt=g,mt=r((function(n,e){for(;;){var r=u(vt,Qr,n),t=r.b,o=u(Tr,{$:0,a:r.a},e);if(!t.b)return Zr(o);n=t,e=o}})),bt=r((function(n,e){for(;;){var r=rt(e/Qr);if(1===r)return u(vt,Qr,n).a;n=u(mt,n,$),e=r}})),pt=r((function(n,e){if(e.o){var r=e.o*Qr,t=ut(u(tt,Qr,r-1)),o=n?Zr(e.E):e.E,a=u(bt,o,e.o);return s(nt,ft(e.u)+r,u(st,5,t*at),a,e.u)}return s(nt,ft(e.u),at,et,e.u)})),gt=a((function(n,e,r,t,o){for(;;){if(0>e)return u(pt,!1,{E:t,o:r/Qr|0,u:o});var a=lt(f(ct,Qr,e,n));n=n,e-=Qr,r=r,t=u(Tr,a,t),o=o}})),ht=r((function(n,e){if(n>0){var r=n%Qr;return d(gt,e,n-r-Qr,n,$,f(ct,r,n-r,e))}return it})),xt=function(n){return!n.$},Ct=ln,Pt=an,Mt=tn,yt=function(n){return{$:1,a:n}},Tt=function(n){return{$:7,a:n}},wt=function(n){return{$:3,a:n}},Lt=t((function(n,e,r){return e(n(r))})),St=un,Nt=fn,$t=function(n){return{$:0,a:n}},Dt=function(n){switch(n.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},zt=function(n){return n},At=function(n){return n.length},_t=Z,Bt=r((function(n,e){return 1>n?e:f(_t,n,At(e),e)})),Rt=function(n){for(var e=0,r=n.charCodeAt(0),t=43==r||45==r?1:0,o=t;n.length>o;++o){var a=n.charCodeAt(o);if(48>a||a>57)return jr;e=10*e+a-48}return o==t?jr:kr(45==r?-e:e)},Vt=J,Ft=Tn,kt=Ft(0),jt=o((function(n,e,r,t){if(t.b){var o=t.a,a=t.b;if(a.b){var i=a.a,c=a.b;if(c.b){var l=c.a,d=c.b;if(d.b){var v=d.b;return u(n,o,u(n,i,u(n,l,u(n,d.a,r>500?f(Ur,n,e,Zr(v)):s(jt,n,e,r+1,v)))))}return u(n,o,u(n,i,u(n,l,e)))}return u(n,o,u(n,i,e))}return u(n,o,e)}return e})),Et=t((function(n,e,r){return s(jt,n,e,0,r)})),Wt=r((function(n,e){return f(Et,r((function(e,r){return u(Tr,n(e),r)})),$,e)})),It=Ln,Ht=r((function(n,e){return u(It,(function(e){return Ft(n(e))}),e)})),Ut=t((function(n,e,r){return u(It,(function(e){return u(It,(function(r){return Ft(u(n,e,r))}),r)}),e)})),Ot=function(n){return f(Et,Ut(Tr),Ft($),n)},Gt=jn,qt=r((function(n,e){var r=e;return $n(u(It,Gt(n),r))}));Vn.Task=Fn(kt,t((function(n,e){return u(Ht,(function(){return 0}),Ot(u(Wt,qt(n),e)))})),t((function(){return Ft(0)})),r((function(n,e){return u(Ht,n,e)})));var Yt=Wn("Task"),Kt=r((function(n,e){return Yt(u(Ht,n,e))})),Xt=_e,Zt=r((function(n,e){return{$:0,a:n,b:e}})),Jt=function(n){return{$:6,a:n}},Qt=r((function(n,e){return{$:4,a:n,b:e}})),no=r((function(n,e){return{$:2,a:n,b:e}})),eo=In,ro=Hn,to=function(n){return{$:1,a:n}},oo=t((function(n,e,r){return{di:r,eZ:e,e2:n}})),ao=Ft(f(oo,$,jr,0)),io=function(n){return wn((function(e){var r=n.f;2===r.$&&r.c&&r.c(),n.f=null,e(Tn(0))}))},co=wn((function(n){n(Tn(Date.now()))})),lo=wn((function(n){var e=Re((function(){n(Tn(Date.now()))}));return function(){Be(e)}})),uo=En,fo=$n,so=t((function(n,e,r){var t=r.eZ,o=r.di,a=w(t,e);return 1===a.a.$?a.b.b?u(It,(function(n){return u(It,(function(r){return Ft(f(oo,e,kr(n),r))}),co)}),fo(u(It,uo(n),lo))):ao:a.b.b?Ft(f(oo,e,t,o)):u(It,(function(){return ao}),io(a.a.a))})),vo=zt,mo=t((function(n,e,r){var t=r.e2,o=r.di,a=function(r){return u(Gt,n,(0,r.a)(r.$?e-o:vo(e)))};return u(It,(function(n){return u(It,(function(){return Ft(f(oo,t,kr(n),e))}),Ot(u(Wt,a,t)))}),fo(u(It,uo(n),lo)))})),bo=t((function(n,e,r){return n(e(r))}));Vn["Browser.AnimationManager"]=Fn(ao,so,mo,0,r((function(n,e){return e.$?to(u(bo,n,e.a)):{$:0,a:u(bo,n,e.a)}})));var po=Wn("Browser.AnimationManager"),go=t((function(n,e,r){return{$:0,a:n,b:e,c:r}})),ho=r((function(n,e){return{eR:e,e2:n}})),xo={$:-2},Co=xo,Po=Ft(u(ho,$,Co)),Mo=function(n){return w(N(n.a?"w_":"d_",n.b),n)},yo=a((function(n,e,r,t,o){return{$:-1,a:n,b:e,c:r,d:t,e:o}})),To=a((function(n,e,r,t,o){if(-1!==o.$||o.a){if(-1!==t.$||t.a||-1!==t.d.$||t.d.a)return d(yo,n,e,r,t,o);var a=t.d;return i=t.e,d(yo,0,t.b,t.c,d(yo,1,a.b,a.c,a.d,a.e),d(yo,1,e,r,i,o))}var i,c=o.b,l=o.c,u=o.d,f=o.e;return-1!==t.$||t.a?d(yo,n,c,l,d(yo,0,e,r,t,u),f):d(yo,0,e,r,d(yo,1,t.b,t.c,t.d,i=t.e),d(yo,1,c,l,u,f))})),wo=T,Lo=t((function(n,e,r){if(-2===r.$)return d(yo,0,n,e,xo,xo);var t=r.a,o=r.b,a=r.c,i=r.d,c=r.e;switch(u(wo,n,o)){case 0:return d(To,t,o,a,f(Lo,n,e,i),c);case 1:return d(yo,t,o,e,i,c);default:return d(To,t,o,a,i,f(Lo,n,e,c))}})),So=t((function(n,e,r){var t=f(Lo,n,e,r);return-1!==t.$||t.a?t:d(yo,1,t.b,t.c,t.d,t.e)})),No=function(n){return f(Ur,r((function(n,e){return f(So,n.a,n.b,e)})),Co,n)},$o=t((function(n,e,r){for(;;){if(-2===r.$)return e;var t=r.e,o=n,a=f(n,r.b,r.c,f($o,n,e,r.d));n=o,e=a,r=t}})),Do=i((function(n,e,o,a,i,c){var l=f($o,t((function(r,t,a){n:for(;;){var i=a.a,c=a.b;if(i.b){var l=i.a,u=l.a,d=l.b,v=i.b;if(0>y(u,r)){r=r,t=t,a=w(v,f(n,u,d,c));continue n}return y(u,r)>0?w(i,f(o,r,t,c)):w(v,s(e,u,d,t,c))}return w(i,f(o,r,t,c))}})),w(Nr(a),c),i),u=l.a,d=l.b;return f(Ur,r((function(e,r){return f(n,e.a,e.b,r)})),d,u)})),zo=r((function(n,e){return{ea:e,eh:n}})),Ao=t((function(n,e,r){return u(Ht,(function(n){return w(e,n)}),f(je,r.a?ke:Fe,r.b,(function(r){return u(uo,n,u(zo,e,r))})))})),_o=r((function(n,e){return f($o,So,e,n)})),Bo=t((function(n,e,r){var a=t((function(e,r,t){var o=t.c;return L(t.a,t.b,u(Tr,f(Ao,n,e,r),o))})),i=t((function(n,e,r){var t=r.b,o=r.c;return L(u(Tr,e,r.a),t,o)})),c=o((function(n,e,r,t){var o=t.c;return L(t.a,f(So,n,e,t.b),o)})),l=u(Wt,Mo,e),s=v(Do,i,c,a,r.eR,No(l),L($,Co,$)),d=s.b,m=s.c;return u(It,(function(n){return Ft(u(ho,l,u(_o,d,No(n))))}),u(It,(function(){return Ot(m)}),Ot(u(Wt,io,s.a))))})),Ro=t((function(n,e,r){var t=n(e);return t.$?r:u(Tr,t.a,r)})),Vo=r((function(n,e){return f(Et,Ro(n),$,e)}));Vn["Browser.Events"]=Fn(Po,Bo,t((function(n,e,r){var t=e.eh,o=e.ea,a=u(Vo,(function(n){var e=n.b.c;return P(n.a,t)?u(Ee,e,o):jr}),r.e2);return u(It,(function(){return Ft(r)}),Ot(u(Wt,Gt(n),a)))})),0,r((function(n,e){return f(go,e.a,e.b,u(St,n,e.c))})));var Fo,ko,jo,Eo,Wo,Io,Ho,Uo,Oo,Go,qo,Yo,Ko,Xo,Zo,Jo,Qo,na,ea,ra,ta,oa,aa,ia,ca,la,ua,fa,sa,da,va,ma,ba,pa,ga,ha,xa,Ca,Pa=Wn("Browser.Events"),Ma=t((function(n,e,r){return Pa(f(go,n,e,r))})),ya=u(Ma,0,"click"),Ta=u(Ma,0,"keydown"),wa=u(Ma,0,"keyup"),La=u(Ma,0,"mousedown"),Sa=u(Ma,0,"mousemove"),Na=u(Ma,0,"mouseup"),$a=en,Da=rn,za=r((function(n,e){return n(e?1:0)})),Aa=function(n){var e=void 0!==Jn.hidden?{fK:"hidden",fp:"visibilitychange"}:void 0!==Jn.mozHidden?{fK:"mozHidden",fp:"mozvisibilitychange"}:void 0!==Jn.msHidden?{fK:"msHidden",fp:"msvisibilitychange"}:void 0!==Jn.webkitHidden?{fK:"webkitHidden",fp:"webkitvisibilitychange"}:{fK:"hidden",fp:"visibilitychange"};return f(Ma,0,e.fp,u(St,za(n),u(Pt,"target",u(Pt,e.fK,Da))))},_a=on,Ba=function(n){return{$:3,b:n}},Ra=Kn("touchCancel",Ba(u(Ct,(function(n){return u(Ct,(function(e){return u(Ct,(function(r){return $t({bH:r,dk:e,dl:n})}),u(Pt,"identifier",$a))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),Va=Kn("touchEnd",Ba(u(Ct,(function(n){return u(Ct,(function(e){return u(Ct,(function(r){return $t({bH:r,dk:e,dl:n})}),u(Pt,"identifier",$a))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),Fa=Kn("touchMove",Ba(u(Ct,(function(n){return u(Ct,(function(e){return u(Ct,(function(r){return $t({bH:r,dk:e,dl:n})}),u(Pt,"identifier",$a))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),ka=Kn("touchStart",Ba(u(Ct,(function(n){return u(Ct,(function(e){return u(Ct,(function(r){return $t({bH:r,dk:e,dl:n})}),u(Pt,"identifier",$a))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),ja=eo(u(Tr,(Ca=u(Lt,dt(.001),(function(n){return{$:6,a:n}})),po(to(Ca))),u(Wt,ro(Tt),A([(Fo=no,f(Ma,1,"resize",u(Pt,"target",f(Nt,Fo,u(Pt,"innerWidth",$a),u(Pt,"innerHeight",$a))))),wa(u(St,Zt(!1),u(Pt,"key",_a))),Ta(u(St,Zt(!0),u(Pt,"key",_a))),Aa(wt),ya($t({$:5})),La($t(Jt(!0))),Na($t(Jt(!1))),Sa(f(Nt,Qt,u(Pt,"pageX",Mt),u(Pt,"pageY",Mt))),ka((function(n){return{$:7,a:n}})),Fa((function(n){return{$:8,a:n}})),Va((function(n){return{$:9,a:n}})),Ra((function(n){return{$:10,a:n}}))])))),Ea={$:1},Wa=function(n){return{$:2,a:n}},Ia=r((function(n,e){return{$:0,a:n,b:e}})),Ha=function(n){return n.b.r.a},Ua=function(n){var e=n.b.I;return e.b?kr(u(Ia,n.a,{r:e.a,I:e.b,t:N(n.b.t,A([n.b.r]))})):jr},Oa=r((function(n,e){return S(e,{cR:n})})),Ga=r((function(n,e){return S(e,e.N.cR?{N:u(Oa,!1,e.N),bo:e.bo+n}:{bo:e.bo+n})})),qa=r((function(n,e){return e.$?n:e.a})),Ya=t((function(n,e,r){var t=r.a,o=r.b;switch(t.$){case 1:return r;case 2:var a=t.a.dL;return(y(a+e,Ha(r).bo)>0?u(Lt,Ua,qa(u(Ia,Ea,o))):zt)(u(Ia,Wa({dL:a+e}),o));default:var i=o.r,c=i.b,l=u(Ga,e,i.a);return u(Ia,t,{r:w(l,u(n,l,c)),I:$,t:N(o.t,A([o.r]))})}})),Ka=r((function(n,e){n:for(;;){if(n>0){if(e.b){n-=1,e=e.b;continue n}return e}return e}})),Xa=t((function(n,e,r){n:for(;;){if(n>0){if(e.b){var t=e.a;n-=1,e=e.b,r=u(Tr,t,r);continue n}return r}return r}})),Za=r((function(n,e){return Zr(f(Xa,n,e,$))})),Ja=t((function(n,e,r){if(e>0){var t=w(e,r);n:for(;;){e:for(;;){if(!t.b.b)return r;if(!t.b.b.b){if(1===t.a)break n;break e}switch(t.a){case 1:break n;case 2:var o=t.b;return A([o.a,o.b.a]);case 3:if(t.b.b.b.b){var a=t.b,i=a.b;return A([a.a,i.a,i.b.a])}break e;default:if(t.b.b.b.b&&t.b.b.b.b.b){var c=t.b,l=c.b,s=l.b,d=s.b,v=d.b;return u(Tr,c.a,u(Tr,l.a,u(Tr,s.a,u(Tr,d.a,n>1e3?u(Za,e-4,v):f(Ja,n+1,e-4,v)))))}break e}}return r}return A([t.b.a])}return $})),Qa=r((function(n,e){return f(Ja,0,n,e)})),ni=r((function(n,e){var r=e.b.I,t=N(e.b.t,N(A([e.b.r]),r)),o=u(Qa,n,t),a=u(Ka,n,t);if(a.b)return u(Ia,Ea,{r:a.a,I:a.b,t:o});var i=Zr(o);return i.b?u(Ia,Ea,{r:i.a,I:$,t:Zr(i.b)}):e})),ei={$:0},ri=r((function(n,e){switch(n.$){case 1:return function(n){var e=n.b.t,r=n.b.I;return e.b?u(Ia,Ea,{r:e.a,I:N(e.b,N(A([n.b.r]),r)),t:$}):n}(e);case 2:return u(qa,e,function(n){var e=n.b.r,r=n.b.I,t=Zr(n.b.t);if(t.b){var o=t.b;return kr(u(Ia,Ea,{r:t.a,I:u(Tr,e,r),t:Zr(o)}))}return jr}(e));case 3:return u(Ia,Ea,e.b);case 4:return function(n){return u(Ia,ei,n.b)}(e);case 5:return function(n){var e=n.b;return u(Ia,Wa({dL:Ha(n).bo}),e)}(e);case 6:return u(qa,e,Ua(e));case 7:return function(n){var e=n.b.t,r=n.b.r,t=Zr(n.b.I);if(t.b){var o=t.b;return u(Ia,Ea,{r:t.a,I:$,t:N(e,N(A([r]),Zr(o)))})}return n}(e);default:return u(ni,n.a,e)}})),ti=r((function(n,e){var r=e.b;return w(n(e.a),r)})),oi=o((function(n,e,r,t){return{cR:t,a7:r,b4:n,b5:e}})),ai=Co,ii={cJ:!1,a7:!1,cY:!1,T:ai,as:!1,bj:!1,dG:!1,dH:!1,cE:!1},ci=r((function(n,e){return S(e,{a7:n})})),li=t((function(n,e,r){return S(r,{b4:n,b5:e})})),ui=function(n){if(-1===n.$&&-1===n.d.$&&-1===n.e.$){if(-1!==n.e.d.$||n.e.d.a){var e=n.d,r=n.e;return i=r.b,c=r.c,t=r.d,f=r.e,d(yo,1,n.b,n.c,d(yo,0,e.b,e.c,e.d,e.e),d(yo,0,i,c,t,f))}var t,o=n.d,a=n.e,i=a.b,c=a.c,l=(t=a.d).d,u=t.e,f=a.e;return d(yo,0,t.b,t.c,d(yo,1,n.b,n.c,d(yo,0,o.b,o.c,o.d,o.e),l),d(yo,1,i,c,u,f))}return n},fi=function(n){if(-1===n.$&&-1===n.d.$&&-1===n.e.$){if(-1!==n.d.d.$||n.d.d.a){var e=n.d,r=n.e;return u=r.b,f=r.c,s=r.d,v=r.e,d(yo,1,t=n.b,o=n.c,d(yo,0,e.b,e.c,e.d,c=e.e),d(yo,0,u,f,s,v))}var t=n.b,o=n.c,a=n.d,i=a.d,c=a.e,l=n.e,u=l.b,f=l.c,s=l.d,v=l.e;return d(yo,0,a.b,a.c,d(yo,1,i.b,i.c,i.d,i.e),d(yo,1,t,o,c,d(yo,0,u,f,s,v)))}return n},si=c((function(n,e,r,t,o,a,i){if(-1!==a.$||a.a){n:for(;;){if(-1===i.$&&1===i.a){if(-1===i.d.$){if(1===i.d.a)return fi(e);break n}return fi(e)}break n}return e}return d(yo,r,a.b,a.c,a.d,d(yo,0,t,o,a.e,i))})),di=function(n){if(-1===n.$&&-1===n.d.$){var e=n.a,r=n.b,t=n.c,o=n.d,a=o.d,i=n.e;if(1===o.a){if(-1!==a.$||a.a){var c=ui(n);if(-1===c.$){var l=c.e;return d(To,c.a,c.b,c.c,di(c.d),l)}return xo}return d(yo,e,r,t,di(o),i)}return d(yo,e,r,t,di(o),i)}return xo},vi=r((function(n,e){if(-2===e.$)return xo;var r=e.a,t=e.b,o=e.c,a=e.d,i=e.e;if(0>y(n,t)){if(-1===a.$&&1===a.a){var c=a.d;if(-1!==c.$||c.a){var l=ui(e);if(-1===l.$){var f=l.e;return d(To,l.a,l.b,l.c,u(vi,n,l.d),f)}return xo}return d(yo,r,t,o,u(vi,n,a),i)}return d(yo,r,t,o,u(vi,n,a),i)}return u(mi,n,m(si,n,e,r,t,o,a,i))})),mi=r((function(n,e){if(-1===e.$){var r=e.a,t=e.b,o=e.c,a=e.d,i=e.e;if(P(n,t)){var c=function(n){for(;;){if(-1!==n.$||-1!==n.d.$)return n;n=n.d}}(i);return-1===c.$?d(To,r,c.b,c.c,a,di(i)):xo}return d(To,r,t,o,a,u(vi,n,i))}return xo})),bi=r((function(n,e){var r=u(vi,n,e);return-1!==r.$||r.a?r:d(yo,1,r.b,r.c,r.d,r.e)})),pi=r((function(n,e){return{d$:-e/2,c$:e,as:-n/2,bj:n/2,b_:e/2,dT:n}})),gi=r((function(n,e){return{X:e,ab:n}})),hi=f(Nt,r((function(n,e){return w(n,e)})),u(Pt,"A1",_a),u(Pt,"A2",_a)),xi=sn,Ci=s(xi,t((function(n,e,r){return L(n,e,r)})),u(Pt,"A1",Mt),u(Pt,"A2",Mt),u(Pt,"A3",Mt)),Pi=f(Nt,r((function(n,e){return w(n,e)})),u(Pt,"A1",_a),u(Pt,"A2",Ci)),Mi=f(Nt,gi,u(Pt,"floats",Ba(Pi)),u(Pt,"colors",Ba(hi))),yi=dn,Ti=r((function(n,e){return{X:e,aT:"",ab:n,aF:""}})),wi=u(Ti,$,$),Li=r((function(n,e){return e.$?jr:n(e.a)})),Si=r((function(n,e){return e.$?Ar(e.a):n(e.a)})),Ni=o((function(n,e,r,t){return{fN:e,fZ:n,f3:r,gh:t}})),$i=Ie,Di=r((function(n,e){return e.$?Ar(n):Vr(e.a)})),zi=We,Ai=function(n){return n.b?kr(n.a):jr},_i=r((function(n,e){return e.$?jr:kr(n(e.a))})),Bi=r((function(n,e){return e.$?Ar(e.a):Vr(n(e.a))})),Ri=r((function(n,e){return Xr(e)-Xr(n)})),Vi=t((function(n,e,r){var t=Xr(r);return 1>y(Xr(n),t)&&1>y(t,Xr(e))})),Fi=r((function(n,e){var r=f(Vi,"0","9",e)?Vr(u(Ri,"0",e)):f(Vi,"a","z",e)?Vr(10+u(Ri,"a",e)):f(Vi,"A","Z",e)?Vr(10+u(Ri,"A",e)):Ar({$:0,a:e});return u(Si,(function(r){return 0>y(r,n)?Vr(r):Ar({$:1,a:e})}),r)})),ki=r((function(n,e){var r=Jr(e);if(1===r.$)return Vr(0);var t=r.a,o=t.b;return u(Si,(function(e){return u(Si,(function(r){return Vr(e+r*n)}),u(ki,n,o))}),u(Fi,n,t.a))})),ji=function(n){for(var e=n.length,r=Array(e),t=0;e>t;){var o=n.charCodeAt(t);55296>o||o>56319?(r[e-t]=n[t],t++):(r[e-t]=n[t+1],r[e-++t]=n[t-1],t++)}return r.join("")},Ei=r((function(n,e){return 2>n||n>36?Ar({$:2,a:n}):u(ki,n,ji(e))})),Wi=Ei(16),Ii=o((function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}})),Hi=t((function(n,e,r){return s(Ii,n,e,r,1)})),Ui=o((function(n,e,r,t){return s(Ii,n,e,r,t)})),Oi=V,Gi=H,qi=r((function(n,e){var r=u(Oi,10,n);return Gi(e*r)/r})),Yi=Y,Ki=function(n){return f(Yi,Tr,$,n)},Xi=(ko=function(n){var e=Ki(n);if(e.b&&!e.b.b){var r=e.a;return _(A([r,r])).join("")}return n},u(Lt,(function(n){return n.toLowerCase()}),u(Lt,(function(n){return u(_i,(function(e){return f($i,1,e,n)}),u(zi,{fm:!1,f$:!1},"^#?(?:(?:([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2}))|(?:([a-f\\d])([a-f\\d])([a-f\\d]))|(?:([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2}))|(?:([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])))$"))}),u(Lt,Li(Ai),u(Lt,_i((function(n){return n.gh})),u(Lt,_i(Vo(zt)),u(Lt,Di("Parsing hex regex failed"),Si((function(n){var e=u(Wt,u(Lt,ko,u(Lt,Wi,Bi(ot))),n);n:for(;;){if(e.b&&!e.a.$&&e.b.b&&!e.b.a.$&&e.b.b.b&&!e.b.b.a.$){if(e.b.b.b.b){if(e.b.b.b.a.$||e.b.b.b.b.b)break n;var r=e.b,t=r.b;return Vr(s(Ui,e.a.a/255,r.a.a/255,t.a.a/255,u(qi,2,t.b.a.a/255)))}var o=e.b;return Vr(f(Hi,e.a.a/255,o.a.a/255,o.b.a.a/255))}break n}return Ar("Parsing ints from hex failed")}))))))))),Zi=r((function(n,e){return w(e.a,n(e.b))})),Ji=s(Ii,1,1,1,1),Qi=r((function(n,e){return e.$?n:e.a})),nc=u(Lt,yi(Mi),u(Lt,Bi((function(n){return{X:u(Wt,Zi(u(Lt,Xi,Qi(Ji))),n.X),aT:"",ab:n.ab,aF:""}})),Qi(wi))),ec=function(n){return f(Ur,r((function(n,e){return f(yn,n.a,n.b,e)})),{},n)},rc=Mn,tc=function(n){var e=n.b;return ec(A([w("A1",rc(n.a)),w("A2",rc(e))]))},oc=Mn,ac=function(n){var e=n.b,r=n.c;return ec(A([w("A1",oc(n.a)),w("A2",oc(e)),w("A3",oc(r))]))},ic=function(n){var e=n.b;return ec(A([w("A1",rc(n.a)),w("A2",ac(e))]))},cc=r((function(n,e){return f(Ur,function(n){return r((function(e,r){return r.push(n(e)),r}))}(n),[],e)})),lc=q,uc=function(n){return u(lc,n,"")},fc=t((function(n,e,r){return n>0?f(fc,n>>1,N(e,e),1&n?N(r,e):r):r})),sc=r((function(n,e){return f(fc,n,e,"")})),dc=t((function(n,e,r){return N(u(sc,n-At(r),uc(e)),r)})),vc=function(n){return 0>n||n>1114111?"�":n>65535?String.fromCharCode(Math.floor((n-=65536)/1024)+55296,n%1024+56320):String.fromCharCode(n)},mc=F,bc=function(n){var e=function(n){return 10>n?Wr(n):uc(vc(87+n))};return 16>n?e(n):N(bc(n/16|0),e(u(mc,16,n)))},pc=u(Lt,bc,u(dc,2,"0")),gc=function(n){return{a5:n.d,cO:n.c,c_:n.b,dz:n.a}},hc=function(n){var e=gc(n),r=e.dz,t=e.c_,o=e.cO;return u(Ir,"",u(Tr,"#",u(Wt,u(Lt,Gi,pc),A([255*r,255*t,255*o]))))},xc=u(Lt,(function(n){return{X:u(Wt,Zi(hc),n.X),ab:n.ab}}),u(Lt,(function(n){return ec(A([w("floats",u(cc,ic,n.ab)),w("colors",u(cc,tc,n.X))]))}),Er(0))),Cc=function(n){return 0>n?-n:n},Pc=function(n){if(0===n.length||/[\sxbo]/.test(n))return jr;var e=+n;return e==e?kr(e):jr},Mc=t((function(n,e,r){return u(qa,NaN,Pc(u(n,e,r)))})),yc=function(n){return!n},Tc=r((function(n,e){for(;;){if(!e.b)return!1;var r=e.b;if(n(e.a))return!0;n=n,e=r}})),wc=r((function(n,e){var r=u(Tc,(function(n){return"0"!==n&&"."!==n}),Ki(e));return N(n&&r?"-":"",e)})),Lc=Q,Sc=function(n){var e=n.a,r=n.b;if("9"===e){var t=Jr(r);return 1===t.$?"01":u(lc,"0",Sc(t.a))}var o=Xr(e);return o>=48&&57>o?u(lc,vc(o+1),r):"0"},Nc=function(n){return n===1/0||n===-1/0},$c=G,Dc=t((function(n,e,r){return N(r,u(sc,n-At(r),uc(e)))})),zc=function(n){var e=u(Hr,".",n);return e.b?w(e.a,e.b.b?e.b.a:"0"):w("0","0")},Ac=t((function(n,e,r){if(Nc(r)||$c(r))return Lc(r);var t=0>r,o=zc(function(n){var e=u(Hr,"e",Lc(Cc(n)));if(e.b){if(e.b.b){var r=e.a,t=e.b.a,o=u(qa,0,Rt(u(Vt,"+",t)?u(Bt,1,t):t)),a=zc(r),i=N(a.a,a.b),c=0>o?u(qa,"0",u(_i,(function(n){return n.a+"."+n.b}),u(_i,ti(uc),Jr(N(u(sc,Cc(o),"0"),i))))):f(Dc,o+1,"0",i);return N(0>n?"-":"",c)}return N(0>n?"-":"",r=e.a)}return""}(Cc(r))),a=o.a,i=o.b,c=At(a)+e,l=N(u(sc,1-c,"0"),f(Dc,c,"0",N(a,i))),s=At(l),d=u(st,1,c),v=u(n,t,f(_t,d,s,l)),m=f(_t,0,d,l),b=v?ji(u(qa,"1",u(_i,Sc,Jr(ji(m))))):m,p=At(b),g="0"===b?b:e>0?0>y(e,At(i))?f(_t,0,p-e,b)+"."+f(_t,p-e,p,b):N(a+".",f(Dc,e,"0",i)):N(b,u(sc,Cc(e),"0"));return u(wc,t,g)})),_c=Ac(r((function(n,e){var r,t=Jr(e);return 1!==t.$&&("5"===t.a.a?""!==t.a.b||!n:(r=Xr(t.a.a))>53&&n||r>=53&&!n)}))),Bc=Mc(_c),Rc=t((function(n,e,r){var t=u(tt,10,Cc(e-n));return u(Bc,0>t?3:1>t?2:2>t?1:0,r)})),Vc=r((function(n,e){switch(n.$){case 2:var r=nc(e.aF);return S(r,{aT:r.aT,aF:r.aF});case 3:return S(e,{aF:n.a});case 4:return S(e,{aT:xc(e)});case 0:var t=n.a,o=n.b;return S(e,{ab:u(Wt,(function(n){var e=n.a,r=n.b,a=r.a,i=r.c;return P(e,t)?w(e,L(a,f(Rc,a,i,o),i)):n}),e.ab)});default:return t=n.a,o=n.b,S(e,{X:u(Wt,(function(n){var e=n.a;return P(e,t)?w(e,o):n}),e.X)})}})),Fc=r((function(n,e){return f(So,n,0,e)})),kc=r((function(n,e){return u(bi,n,e)})),jc=t((function(n,e,r){var t=u(n?Fc:kc,e,r.T);switch(e){case" ":return S(r,{T:t,dH:n});case"Enter":return S(r,{cY:n,T:t});case"Shift":return S(r,{T:t,dG:n});case"Backspace":return S(r,{cJ:n,T:t});case"ArrowUp":return S(r,{T:t,cE:n});case"ArrowDown":return S(r,{a7:n,T:t});case"ArrowLeft":return S(r,{T:t,as:n});case"ArrowRight":return S(r,{T:t,bj:n});default:return S(r,{T:t})}})),Ec=r((function(n,e){switch(n.$){case 1:var r=n.a.gt;return S(e,{am:u(pi,r.dT,r.c$)});case 2:return S(e,{am:u(pi,n.a,n.b)});case 3:return S(e,{bI:ii,N:s(oi,e.N.b4,e.N.b5,!1,!1)});case 0:return S(e,{bI:f(jc,n.a,n.b,e.bI)});case 4:return S(e,{N:f(li,e.am.as+n.a,e.am.b_-n.b,e.N)});case 5:return S(e,{N:u(Oa,!0,e.N)});case 6:return S(e,{N:u(ci,n.a,e.N)});case 7:case 8:return S(e,{ao:f(Ur,(function(n){return u(So,n.bH,{b4:e.am.as+n.dk,b5:e.am.b_-n.dl})}),e.ao,n.a)});case 9:case 10:return S(e,{ao:f(Ur,(function(n){return bi(n.bH)}),e.ao,n.a)});default:return S(e,{a6:u(Vc,n.a,e.a6)})}})),Wc=r((function(n,e){var r=e.b;return u(Ia,e.a,S(r,{r:u(ti,Ec(n),r.r)}))})),Ic=t((function(n,e,r){var t=r.b,o=t.r;return u(Ia,r.a,S(t,{r:u(Zi,u(n,o.a,e),o)}))})),Hc=o((function(n,e,r,t){switch(r.$){case 0:return t;case 1:return S(t,{bs:r.a});case 2:return S(t,{bz:!1});case 3:return S(t,{bz:!0});case 4:return S(t,{W:f(Ic,e,r.a,t.W)});case 5:return S(t,{W:u(ri,r.a,t.W)});case 7:return S(t,{W:u(Wc,r.a,t.W)});default:return S(t,{W:f(Ya,n,r.a,t.W)})}})),Uc=(xa=function(){return{e$:(n=Fe.body,e=Fe.documentElement,{dT:Math.max(n.scrollWidth,n.offsetWidth,e.scrollWidth,e.offsetWidth,e.clientWidth),c$:Math.max(n.scrollHeight,n.offsetHeight,e.scrollHeight,e.offsetHeight,e.clientHeight)}),gt:{b4:ke.pageXOffset,b5:ke.pageYOffset,dT:Fe.documentElement.clientWidth,c$:Fe.documentElement.clientHeight}};var n,e},wn((function(n){Re((function(){n(Tn(xa()))}))}))),Oc=r((function(n,e){return{a6:e,cW:n.cW,bI:ii,N:s(oi,0,0,!1,!1),am:u(pi,600,600),bo:0,ao:Co}})),Gc=r((function(n,e){return u(Ia,ei,{r:w(n,e(n)),I:$,t:$})})),qc=In,Yc=qc($),Kc=function(n){return{$:11,a:n}},Xc=function(n){return{$:4,a:n}},Zc=function(n){return{$:5,a:n}},Jc={$:2},Qc={$:0},nl=function(n){return{$:1,a:n}},el={$:3},rl=r((function(n){return n})),tl=re("button"),ol=re("div"),al=function(n){return n?"Level Editor":"Configurations"},il=function(n){return u(qa,0,Ai(u(Vo,(function(e){return P(al(e),n)?kr(e):jr}),A([0,1]))))},cl=oe,ll=cl,ul=ae,fl=r((function(n,e){return u(ul,n,{$:0,a:e})})),sl=r((function(n,e){return f(Et,Pt,e,n)})),dl=u(sl,A(["target","value"]),_a),vl=function(n){return u(fl,"change",u(St,n,dl))},ml=function(n){return u(fl,"click",$t(n))},bl=re("option"),pl=re("select"),gl=ie,hl=gl,xl=ne,Cl=xl,Pl=r((function(n,e){return u(ce,n,rc(e))})),Ml=Pl("value"),yl=r((function(n,e){return{$:1,a:n,b:e}})),Tl=r((function(n,e){return{$:0,a:n,b:e}})),wl=s(Ii,0,0,0,1),Ll=u(tl,A([u(hl,"cursor","pointer"),ml({$:4})]),A([Cl("Export Configurations as json")])),Sl=re("h3"),Nl=re("p"),$l=Mn,Dl=r((function(n,e){return u(ce,n,$l(e))})),zl=Dl("readOnly"),Al=re("textarea"),_l=function(n){return u(ol,$,A([u(Al,A([zl(!0)]),A([Cl(n.aT)]))]))},Bl=function(n){return u(ol,$,A([u(Sl,$,A([Cl("Export Configurations")])),u(Nl,$,A([Ll])),u(Nl,$,A([_l(n)]))]))},Rl=Pl("htmlFor"),Vl=re("hr"),Fl=Pl("id"),kl=u(tl,A([u(hl,"cursor","pointer"),ml({$:2})]),A([Cl("Import Configurations")])),jl=function(n){return{$:3,a:n}},El=function(n){return w(n,!0)},Wl=r((function(n,e){return u(ul,n,{$:1,a:e})})),Il=function(n){return u(Wl,"input",u(St,El,u(St,n,dl)))},Hl=function(n){return u(ol,$,A([u(Al,A([Il(jl)]),A([Cl(n.aF)]))]))},Ul=function(n){return u(ol,$,A([u(Sl,$,A([Cl("Import Configurations")])),u(Nl,$,A([Hl(n)])),u(Nl,$,A([kl]))]))},Ol=re("input"),Gl=re("label"),ql=Pl("max"),Yl=Pl("min"),Kl=Pl("name"),Xl=re("span"),Zl=Pl("type"),Jl=function(n){return{$:0,a:n}},Ql=function(n){return Or(n.b.t)},nu=function(n){return u(Ol,A([u(hl,"position","absolute"),Zl("range"),u(hl,"width","100%"),Yl("0"),ql(Wr((e=n,r=e.b.I,Or(e.b.t)+1+Or(r)-1))),Ml(Wr(Ql(n))),Il(u(Lt,Rt,u(Lt,qa(0),Jl)))]),$);var e,r},eu=function(n){var e=n.b.r,r=n.b.I,t=u(qa,e,Ai(n.b.t)).a.bo,o=u(qa,e,Ai(Zr(r))).a.bo-t,a=ut(o/1);return u(ol,A([u(hl,"position","absolute"),u(hl,"width","100%"),u(hl,"height","20px")]),u(Wt,(function(n){return u(ol,A([u(hl,"position","absolute"),u(hl,"background-color","yellow"),u(hl,"width","1px"),u(hl,"height","20px"),u(hl,"left",Lc(100*n*1/o)+"%")]),$)}),u(Yr,0,a)))},ru={$:1},tu={$:7},ou={$:6},au={$:2},iu={$:3},cu={$:5},lu={$:4},uu=r((function(n,e){return u(tl,A([u(hl,"display","inline-block"),u(hl,"width","30px"),u(hl,"height","30px"),u(hl,"margin","2px"),u(hl,"padding","0px"),u(hl,"top","0px"),u(hl,"font-size","20px"),ml(n)]),A([Cl(e)]))})),fu=function(n){return u(ol,A([u(hl,"width","100%")]),A([(e=n,r=e.a,u(ol,$,A([u(uu,ru,"⏮️"),u(uu,au,"◀️"),1===r.$?u(uu,cu,"▶️"):u(uu,iu,"⏸️"),r.$?u(uu,lu,"⏺️"):u(uu,iu,"⏹"),u(uu,ou,"⏯️"),u(uu,tu,"⏭️")]))),u(ol,$,A([eu(n),nu(n)]))]));var e,r},su=t((function(n,e,t){var o,a,i,c=t.W.b.r.b,l=u(ol,A([u(hl,"margin-left","0px")]),A([u(pl,A([vl(u(Lt,il,nl)),Ml(al(t.bs)),u(hl,"width","200px"),u(hl,"height","40px"),u(hl,"font-size","20px")]),u(Wt,(function(n){return u(bl,A([Ml(al(n))]),A([Cl(al(n))]))}),A([0,1])))])),f=r((function(n,e){return u(tl,A([u(hl,"font-size","30px"),u(hl,"width","40px"),u(hl,"height","40px"),ml(n)]),A([Cl(e)]))})),s=Ha(t.W),d=t.bs?u(ll,Xc,u(e,s,c)):u(ol,$,A([u(ll,Zc,fu(t.W)),u(ll,u(Lt,Kc,Tt),(o=s.a6,a=function(n){var e=n.a,r=n.b,t=r.a,o=r.b,a=r.c;return u(ol,A([u(hl,"margin-top","15px")]),A([u(ol,$,A([u(Gl,A([Rl(e)]),A([Cl(e),Cl(": "),u(Xl,A([u(hl,"font-family","monospace"),u(hl,"font-weight","bold")]),A([Cl(Lc(o))]))]))])),u(Ol,A([Zl("range"),Fl(e),Kl(e),Yl(Lc(t)),ql(Lc(a)),Il((function(n){return u(Tl,e,u(qa,0,Pc(n)))})),u(Pl,"step","any"),u(hl,"width","200px"),Ml(Lc(o))]),$)]))},i=function(n){var e=n.a,r=n.b;return u(ol,A([u(hl,"margin-top","15px")]),A([u(ol,$,A([u(Gl,A([Rl(e)]),A([Cl(e)]))])),u(Ol,A([Zl("color"),u(hl,"width","200px"),u(hl,"height","30px"),Fl(e),Kl(e),Il((function(n){return u(yl,e,u(Qi,wl,Xi(n)))})),Ml(hc(r))]),$)]))},u(ol,A([u(hl,"margin-left","20px"),u(hl,"height","100%"),u(hl,"overflow","scroll")]),A([u(ol,$,u(Wt,a,o.ab)),u(ol,$,u(Wt,i,o.X)),u(Vl,$,$),Bl(o),Ul(o)]))))])),v=u(ol,A([u(hl,"position","fixed"),u(hl,"top","0px"),u(hl,"left","0px"),u(hl,"width",Lc(250)+"px"),u(hl,"height",Lc(s.am.c$)+"px"),u(hl,"font-family",'-apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif'),u(hl,"font-size","16px")]),A(t.bz?[u(ol,A([u(hl,"height","100px")]),A([u(f,Jc,"✕"),l])),u(ol,A([u(hl,"height",Lc(s.am.c$-100)+"px")]),A([d]))]:[u(f,el,"≡")])),m=u(ol,A([u(hl,"position","fixed"),u(hl,"top","0px"),u(hl,"left","0px"),u(hl,"width",Lc(s.am.dT)+"px"),u(hl,"height",Lc(s.am.c$)+"px"),u(hl,"font-size","16px")]),A([u(ll,rl(Qc),u(n,s,c))]));return u(ol,A([u(hl,"touch-action","none"),u(hl,"user-select","none")]),A([m,v]))})),du=i((function(n,e,t,o,a,i){return Xt({fO:function(n){return w({bs:0,bz:!1,W:u(Gc,u(Oc,n,t),o),dS:0},u(Kt,u(Lt,yt,Tt),Uc))},gi:function(n){return 1===n.dS?u(ro,Tt,Aa(wt)):ja},gq:r((function(n,r){return w(s(Hc,e,i,n,r),Yc)})),gs:u(su,n,a)})})),vu={fh:150,bN:1,go:(jo=function(n){var e=n.a;return w(w(n.b,n.c),e?1:0)},{a:Co,af:jo})},mu=Ti,bu=mu,pu=3.141592653589793,gu=function(n){return n*pu/180},hu=u(bu,A([w("camera x",L(-40,0,40)),w("camera y",L(-40,0,0)),w("camera z",L(1,20,50)),w("trixel scale",L(.5,1,1)),w("minimum rotation degree",L(-gu(180),0,0)),w("maximum rotation degree",L(0,0,gu(180))),w("rotation period",L(1,5,20))]),$),xu=t((function(n,e,r){return{$:0,a:n,b:e,c:r}})),Cu=function(n){var e=n.cD,r=n.cG,t=function(n){return n-ut(n)};return 1>t(e)+t(r)?f(xu,0,ut(e),ut(r)):f(xu,1,ut(e),ut(r))},Pu=t((function(n,e,r){var t=r;return S(t,{a:f(So,t.af(n),w(n,e),t.a)})})),Mu=t((function(n,e,r){return S(r,{go:f(Pu,n,e,r.go)})})),yu=r((function(n,e){return S(e,{r:n(e.r)})})),Tu=r((function(n,e){return S(e,{l:u(yu,n,e.l)})})),wu=r((function(n,e){return n.N.a7?u(Tu,u(Mu,Cu(e.bf),e.aw),e):e})),Lu=r((function(n,e){return u(qa,0,Ai(u(Vo,(function(e){var r=e.b.b;return P(e.a,n)?kr(r):jr}),e.ab)))})),Su=r((function(n,e){return u(Lu,n,e.a6)})),Nu=Su,$u=function(n){return pu*(n/180)},Du=U,zu=r((function(n,e){var r=e.a4-n.a4,t=e.b5-n.b5,o=e.b4-n.b4,a=u(st,Cc(o),u(st,Cc(t),Cc(r)));if(a){var i=r/a,c=t/a,l=o/a,f=Du(l*l+c*c+i*i);return kr({b4:l/f,b5:c/f,a4:i/f})}return jr})),Au=r((function(n,e){return{b4:e.b5*n.a4-e.a4*n.b5,b5:e.a4*n.b4-e.b4*n.a4,a4:e.b4*n.b5-e.b5*n.b4}})),_u=function(n){var e=n,r=u(st,Cc(e.b4),u(st,Cc(e.b5),Cc(e.a4)));if(r){var t=e.a4/r,o=e.b5/r,a=e.b4/r,i=Du(a*a+o*o+t*t);return kr({b4:a/i,b5:o/i,a4:t/i})}return jr},Bu=r((function(n,e){return{b4:e.b4-n.b4,b5:e.b5-n.b5,a4:e.a4-n.a4}})),Ru=r((function(n,e){return e.b4*n.b4+e.b5*n.b5+e.a4*n.a4})),Vu=r((function(n,e){return y(e,n)>0})),Fu=r((function(n,e){return 0>y(e,n)})),ku=r((function(n,e){return{b4:e.b4-n.b4,b5:e.b5-n.b5,a4:e.a4-n.a4}})),ju=r((function(n,e){var r=e.b4*n.b4+e.b5*n.b5+e.a4*n.a4;return{b4:n.b4*r,b5:n.b5*r,a4:n.a4*r}})),Eu={b4:0,b5:0,a4:0},Wu=t((function(n,e,r){return u(Li,(function(t){return u(Li,(function(o){var a,i=u(Au,e,n),c=u(Ru,r,i),l=u(Vu,0,c)?i:u(Fu,0,c)?{b4:-(a=i).b4,b5:-a.b5,a4:-a.a4}:Eu;return u(_i,(function(n){return L(t,o,n)}),_u(l))}),_u(u(ku,u(ju,t,e),e)))}),_u(n))})),Iu=function(n){var e=function(n){var e=n,r=Cc(e.a4),t=Cc(e.b5),o=Cc(e.b4);if(1>y(o,t)){if(1>y(o,r)){var a=Du(e.a4*e.a4+e.b5*e.b5);return{b4:0,b5:-e.a4/a,a4:e.b5/a}}return a=Du(e.b5*e.b5+e.b4*e.b4),{b4:-e.b5/a,b5:e.b4/a,a4:0}}return 1>y(t,r)?(a=Du(e.a4*e.a4+e.b4*e.b4),{b4:e.a4/a,b5:0,a4:-e.b4/a}):(a=Du(e.b4*e.b4+e.b5*e.b5),{b4:-e.b5/a,b5:e.b4/a,a4:0})}(n);return w(e,{b4:n.b5*e.a4-n.a4*e.b5,b5:n.a4*e.b4-n.b4*e.a4,a4:n.b4*e.b5-n.b5*e.b4})},Hu=r((function(n,e){var r=Iu(n);return{dj:e,dV:r.a,dW:r.b,dX:n}})),Uu=function(n){var e=u(Bu,n.fE,n.fB),r=n.gp,t=f(Wu,e,r,u(Au,e,r));if(t.$){var o=_u(e);if(o.$){var a=Iu(n.gp);return{dj:n.fB,dV:a.b,dW:n.gp,dX:a.a}}return u(Hu,o.a,n.fB)}var i=t.a;return{dj:n.fB,dV:i.c,dW:i.b,dX:i.a}},Ou={b4:0,b5:0,a4:0},Gu=function(n){return Cc(n)},qu=function(n){return.5*n},Yu=E,Ku={b4:0,b5:1,a4:0},Xu=function(n){return a=(o={fB:{b4:u(Nu,"camera x",n),b5:u(Nu,"camera y",n),a4:u(Nu,"camera z",n)},fE:{b4:0,b5:0,a4:0},gp:{b4:0,b5:1,a4:0}}).fE,i=o.fB,c=o.gp,e={e8:$u(40),dR:Uu({fB:i,fE:a,gp:u(qa,Ku,u(zu,Ou,c))})},t=qu(Gu(e.e8)),{dy:(r=Yu(t),{$:0,a:r}),dR:e.dR};var e,r,t,o,a,i,c},Zu=function(n){var e=n.b4,r=n.b5;return{cD:2/Du(3)*e,cG:-1/Du(3)*e+r}},Ju=t((function(n,e,r){return{b4:n,b5:e,a4:r}})),Qu=r((function(n,e){return e.b4*n.b4+e.b5*n.b5+e.a4*n.a4})),nf=function(n){return n.fu},ef=r((function(n,e){return n*e})),rf=function(n){return n.dj},tf=r((function(n,e){var r=n.dj,t=n.f2;return(e.b4-r.b4)*t.b4+(e.b5-r.b5)*t.b5+(e.a4-r.a4)*t.a4})),of=t((function(n,e,r){return{b4:r.b4+e*n.b4,b5:r.b5+e*n.b5,a4:r.a4+e*n.a4}})),af=r((function(n,e){var r=nf(e),t=u(Qu,n.f2,r);if(t){var o=rf(e);return kr(f(of,r,u(ef,-1/t,u(tf,n,o)),o))}return jr})),cf=r((function(n,e){return{b4:n,b5:e}})),lf=r((function(n,e){return n*e})),uf=function(n){return n.ff},ff=r((function(n,e){return e/n})),sf=function(n){return n.dj},df=function(n){return sf(n)},vf=function(n){return-n},mf={b4:0,b5:0,a4:-1},bf=r((function(n,e){return e/n})),pf=r((function(n,e){var r=n.dX,t=n.dW,o=n.dV;return{b4:o.b4*e.b4+t.b4*e.b5+r.b4*e.a4,b5:o.b5*e.b4+t.b5*e.b5+r.b5*e.a4,a4:o.a4*e.b4+t.a4*e.b5+r.a4*e.a4}})),gf=r((function(n,e){return{fu:e,dj:n}})),hf=function(n){return{b4:-n.b4,b5:-n.b5,a4:-n.a4}},xf=function(n){return n.dX},Cf=function(n){return hf(xf(n))},Pf=r((function(n,e){var r=n.dj,t=n.dV;return(e.b4-r.b4)*t.b4+(e.b5-r.b5)*t.b5})),Mf=t((function(n,e,r){return{b4:n,b5:e,a4:r}})),yf=o((function(n,e,r,t){var o=n.dj,a=n.dX,i=n.dW,c=n.dV;return{b4:o.b4+e*c.b4+r*i.b4+t*a.b4,b5:o.b5+e*c.b5+r*i.b5+t*a.b5,a4:o.a4+e*c.a4+r*i.a4+t*a.a4}})),Tf=r((function(n,e){var r=n.dj,t=n.dW;return(e.b4-r.b4)*t.b4+(e.b5-r.b5)*t.b5})),wf=t((function(n,e,r){var t=n,o=u(Tf,uf(e),r),a=u(Pf,uf(e),r),i=t.dR,c=function(n){return n.d5}(e).b,l=t.dy;if(l.$){var d=u(bf,c,l.a);return u(gf,s(yf,i,u(lf,d,a),u(lf,d,o),0),Cf(t.dR))}var v=vf(u(ff,l.a,u(ef,.5,c))),m=u(pf,i,u(qa,mf,_u(f(Mf,a,o,v))));return u(gf,df(t.dR),m)})),Lf=k,Sf=j,Nf=function(n){var e=n;return{b4:Lf(e),b5:Sf(e)}},$f=r((function(n,e){return{dj:e,dV:n,dW:(r=n,{b4:-r.b5,b5:r.b4})};var r})),Df=r((function(n,e){return u($f,Nf(n),e)})),zf=t((function(n,e,r){var t=n.a,o=n.b;return{ff:u(Df,e,r),d5:w(Gu(t),Gu(o))}})),Af=function(n){return n.b4},_f=r((function(n,e){return{b4:n,b5:e}})),Bf=function(n){return n.b5},Rf=function(n){return n.a4},Vf=o((function(n,e,r,t){var o=r.b4,a=r.b5,i=f(zf,w(e.dT,e.c$),$u(0),u(cf,0,0));return u(_i,(function(n){return f(Ju,Af(n),Bf(n),Rf(n))}),u(af,t,f(wf,n,i,u(_f,o,a))))})),Ff=r((function(n,e){return{b4:e.b4+n.b4,b5:e.b5+n.b5,a4:e.a4+n.a4}})),kf=r((function(n,e){return{f2:n,dj:e}})),jf=r((function(n,e){return u(kf,e.f2,u(Ff,n,e.dj))})),Ef=r((function(n,e){return{f2:e,dj:n}})),Wf={b4:0,b5:0,a4:1},If=Wf,Hf=u(Ef,Ou,If),Uf=o((function(n,e,r,t){return s(Vf,e,r,t,u(jf,f(Mf,0,0,n),Hf))})),Of=Uf(0),Gf=r((function(n,e){return f($o,r((function(r,t){var o=f(Of,Xu(n),n.am,t);if(1===o.$)return zt;var a=o.a;return Tu(u(Mu,Cu(Zu({b4:a.b4,b5:a.b5})),e.aw))})),e,n.ao)})),qf=r((function(n,e){var r=e;return S(r,{a:u(bi,r.af(n),r.a)})})),Yf=r((function(n,e){return S(e,{go:u(qf,n,e.go)})})),Kf=r((function(n,e){return n.bI.dG&&n.N.a7?u(Tu,Yf(Cu(e.bf)),e):e})),Xf=r((function(n,e){var r=f(Of,Xu(n),n.am,n.N);if(1===r.$)return e;var t=r.a;return S(e,{bf:Zu({b4:t.b4,b5:t.b5})})})),Zf=r((function(n,e){return u(Kf,n,u(Gf,n,u(wu,n,u(Xf,n,e))))})),Jf=r((function(n,e){return S(e,{n:u(Tr,e.r,e.n),r:n})})),Qf=function(n){var e=n.G;if(e.b){var r=e.a;return kr({G:e.b,n:u(Tr,n.r,n.n),r:r})}return jr},ns=function(n){var e=n.n;if(e.b){var r=e.a,t=e.b;return kr({G:u(Tr,n.r,n.G),n:t,r:r})}return jr},es=function(n){var e=n,r=e.n;if(r.b)return S(e,{n:r.b,r:r.a});var t=e.G;return t.b?S(e,{G:t.b,r:t.a}):e},rs=r((function(n,e){return S(e,{fh:n})})),ts=r((function(n,e){return S(e,{bN:n})})),os=t((function(n,e,r){switch(e.$){case 0:return u(Tu,ts(e.a),r);case 1:return S(r,{aw:e.a});case 2:return u(Tu,rs(r.aw),r);case 3:return S(r,{l:u(qa,r.l,ns(r.l))});case 4:return S(r,{l:u(qa,r.l,Qf(r.l))});case 5:return S(r,{l:u(Jf,vu,r.l)});case 6:return S(r,{l:es(r.l)});default:return S(r,{l:(t=r.l,o=t,a=o.G,S(o,a.b?{G:a.b,n:N(o.n,A([a.a]))}:{G:o.n,n:$}))})}var t,o,a})),as=function(n){return n.r},is=r((function(n,e){return{$:0,a:n,b:e}})),cs=u(is,f(Hi,.001462,466e-6,.013866),A([f(Hi,.002267,.00127,.01857),f(Hi,.003299,.002249,.024239),f(Hi,.004547,.003392,.030909),f(Hi,.006006,.004692,.038558),f(Hi,.007676,.006136,.046836),f(Hi,.009561,.007713,.055143),f(Hi,.011663,.009417,.06346),f(Hi,.013995,.011225,.071862),f(Hi,.016561,.013136,.080282),f(Hi,.019373,.015133,.088767),f(Hi,.022447,.017199,.097327),f(Hi,.025793,.019331,.10593),f(Hi,.029432,.021503,.114621),f(Hi,.033385,.023702,.123397),f(Hi,.037668,.025921,.132232),f(Hi,.042253,.028139,.141141),f(Hi,.046915,.030324,.150164),f(Hi,.051644,.032474,.159254),f(Hi,.056449,.034569,.168414),f(Hi,.06134,.03659,.177642),f(Hi,.066331,.038504,.186962),f(Hi,.071429,.040294,.196354),f(Hi,.076637,.041905,.205799),f(Hi,.081962,.043328,.215289),f(Hi,.087411,.044556,.224813),f(Hi,.09299,.045583,.234358),f(Hi,.098702,.046402,.243904),f(Hi,.104551,.047008,.25343),f(Hi,.110536,.047399,.262912),f(Hi,.116656,.047574,.272321),f(Hi,.122908,.047536,.281624),f(Hi,.129285,.047293,.290788),f(Hi,.135778,.046856,.299776),f(Hi,.142378,.046242,.308553),f(Hi,.149073,.045468,.317085),f(Hi,.15585,.044559,.325338),f(Hi,.162689,.043554,.333277),f(Hi,.169575,.042489,.340874),f(Hi,.176493,.041402,.348111),f(Hi,.183429,.040329,.354971),f(Hi,.190367,.039309,.361447),f(Hi,.197297,.0384,.367535),f(Hi,.204209,.037632,.373238),f(Hi,.211095,.03703,.378563),f(Hi,.217949,.036615,.383522),f(Hi,.224763,.036405,.388129),f(Hi,.231538,.036405,.3924),f(Hi,.238273,.036621,.396353),f(Hi,.244967,.037055,.400007),f(Hi,.25162,.037705,.403378),f(Hi,.258234,.038571,.406485),f(Hi,.26481,.039647,.409345),f(Hi,.271347,.040922,.411976),f(Hi,.27785,.042353,.414392),f(Hi,.284321,.043933,.416608),f(Hi,.290763,.045644,.418637),f(Hi,.297178,.04747,.420491),f(Hi,.303568,.049396,.422182),f(Hi,.309935,.051407,.423721),f(Hi,.316282,.05349,.425116),f(Hi,.32261,.055634,.426377),f(Hi,.328921,.057827,.427511),f(Hi,.335217,.06006,.428524),f(Hi,.3415,.062325,.429425),f(Hi,.347771,.064616,.430217),f(Hi,.354032,.066925,.430906),f(Hi,.360284,.069247,.431497),f(Hi,.366529,.071579,.431994),f(Hi,.372768,.073915,.4324),f(Hi,.379001,.076253,.432719),f(Hi,.385228,.078591,.432955),f(Hi,.391453,.080927,.433109),f(Hi,.397674,.083257,.433183),f(Hi,.403894,.08558,.433179),f(Hi,.410113,.087896,.433098),f(Hi,.416331,.090203,.432943),f(Hi,.422549,.092501,.432714),f(Hi,.428768,.09479,.432412),f(Hi,.434987,.097069,.432039),f(Hi,.441207,.099338,.431594),f(Hi,.447428,.101597,.43108),f(Hi,.453651,.103848,.430498),f(Hi,.459875,.106089,.429846),f(Hi,.4661,.108322,.429125),f(Hi,.472328,.110547,.428334),f(Hi,.478558,.112764,.427475),f(Hi,.484789,.114974,.426548),f(Hi,.491022,.117179,.425552),f(Hi,.497257,.119379,.424488),f(Hi,.503493,.121575,.423356),f(Hi,.50973,.123769,.422156),f(Hi,.515967,.12596,.420887),f(Hi,.522206,.12815,.419549),f(Hi,.528444,.130341,.418142),f(Hi,.534683,.132534,.416667),f(Hi,.54092,.134729,.415123),f(Hi,.547157,.136929,.413511),f(Hi,.553392,.139134,.411829),f(Hi,.559624,.141346,.410078),f(Hi,.565854,.143567,.408258),f(Hi,.572081,.145797,.406369),f(Hi,.578304,.148039,.404411),f(Hi,.584521,.150294,.402385),f(Hi,.590734,.152563,.40029),f(Hi,.59694,.154848,.398125),f(Hi,.603139,.157151,.395891),f(Hi,.60933,.159474,.393589),f(Hi,.615513,.161817,.391219),f(Hi,.621685,.164184,.388781),f(Hi,.627847,.166575,.386276),f(Hi,.633998,.168992,.383704),f(Hi,.640135,.171438,.381065),f(Hi,.64626,.173914,.378359),f(Hi,.652369,.176421,.375586),f(Hi,.658463,.178962,.372748),f(Hi,.66454,.181539,.369846),f(Hi,.670599,.184153,.366879),f(Hi,.676638,.186807,.363849),f(Hi,.682656,.189501,.360757),f(Hi,.688653,.192239,.357603),f(Hi,.694627,.195021,.354388),f(Hi,.700576,.197851,.351113),f(Hi,.7065,.200728,.347777),f(Hi,.712396,.203656,.344383),f(Hi,.718264,.206636,.340931),f(Hi,.724103,.20967,.337424),f(Hi,.729909,.212759,.333861),f(Hi,.735683,.215906,.330245),f(Hi,.741423,.219112,.326576),f(Hi,.747127,.222378,.322856),f(Hi,.752794,.225706,.319085),f(Hi,.758422,.229097,.315266),f(Hi,.76401,.232554,.311399),f(Hi,.769556,.236077,.307485),f(Hi,.775059,.239667,.303526),f(Hi,.780517,.243327,.299523),f(Hi,.785929,.247056,.295477),f(Hi,.791293,.250856,.29139),f(Hi,.796607,.254728,.287264),f(Hi,.801871,.258674,.283099),f(Hi,.807082,.262692,.278898),f(Hi,.812239,.266786,.274661),f(Hi,.817341,.270954,.27039),f(Hi,.822386,.275197,.266085),f(Hi,.827372,.279517,.26175),f(Hi,.832299,.283913,.257383),f(Hi,.837165,.288385,.252988),f(Hi,.841969,.292933,.248564),f(Hi,.846709,.297559,.244113),f(Hi,.851384,.30226,.239636),f(Hi,.855992,.307038,.235133),f(Hi,.860533,.311892,.230606),f(Hi,.865006,.316822,.226055),f(Hi,.869409,.321827,.221482),f(Hi,.873741,.326906,.216886),f(Hi,.878001,.33206,.212268),f(Hi,.882188,.337287,.207628),f(Hi,.886302,.342586,.202968),f(Hi,.890341,.347957,.198286),f(Hi,.894305,.353399,.193584),f(Hi,.898192,.358911,.18886),f(Hi,.902003,.364492,.184116),f(Hi,.905735,.37014,.17935),f(Hi,.90939,.375856,.174563),f(Hi,.912966,.381636,.169755),f(Hi,.916462,.387481,.164924),f(Hi,.919879,.393389,.16007),f(Hi,.923215,.399359,.155193),f(Hi,.92647,.405389,.150292),f(Hi,.929644,.411479,.145367),f(Hi,.932737,.417627,.140417),f(Hi,.935747,.423831,.13544),f(Hi,.938675,.430091,.130438),f(Hi,.941521,.436405,.125409),f(Hi,.944285,.442772,.120354),f(Hi,.946965,.449191,.115272),f(Hi,.949562,.45566,.110164),f(Hi,.952075,.462178,.105031),f(Hi,.954506,.468744,.099874),f(Hi,.956852,.475356,.094695),f(Hi,.959114,.482014,.089499),f(Hi,.961293,.488716,.084289),f(Hi,.963387,.495462,.079073),f(Hi,.965397,.502249,.073859),f(Hi,.967322,.509078,.068659),f(Hi,.969163,.515946,.063488),f(Hi,.970919,.522853,.058367),f(Hi,.97259,.529798,.053324),f(Hi,.974176,.53678,.048392),f(Hi,.975677,.543798,.043618),f(Hi,.977092,.55085,.03905),f(Hi,.978422,.557937,.034931),f(Hi,.979666,.565057,.031409),f(Hi,.980824,.572209,.028508),f(Hi,.981895,.579392,.02625),f(Hi,.982881,.586606,.024661),f(Hi,.983779,.593849,.02377),f(Hi,.984591,.601122,.023606),f(Hi,.985315,.608422,.024202),f(Hi,.985952,.61575,.025592),f(Hi,.986502,.623105,.027814),f(Hi,.986964,.630485,.030908),f(Hi,.987337,.63789,.034916),f(Hi,.987622,.64532,.039886),f(Hi,.987819,.652773,.045581),f(Hi,.987926,.66025,.05175),f(Hi,.987945,.667748,.058329),f(Hi,.987874,.675267,.065257),f(Hi,.987714,.682807,.072489),f(Hi,.987464,.690366,.07999),f(Hi,.987124,.697944,.087731),f(Hi,.986694,.70554,.095694),f(Hi,.986175,.713153,.103863),f(Hi,.985566,.720782,.112229),f(Hi,.984865,.728427,.120785),f(Hi,.984075,.736087,.129527),f(Hi,.983196,.743758,.138453),f(Hi,.982228,.751442,.147565),f(Hi,.981173,.759135,.156863),f(Hi,.980032,.766837,.166353),f(Hi,.978806,.774545,.176037),f(Hi,.977497,.782258,.185923),f(Hi,.976108,.789974,.196018),f(Hi,.974638,.797692,.206332),f(Hi,.973088,.805409,.216877),f(Hi,.971468,.813122,.227658),f(Hi,.969783,.820825,.238686),f(Hi,.968041,.828515,.249972),f(Hi,.966243,.836191,.261534),f(Hi,.964394,.843848,.273391),f(Hi,.962517,.851476,.285546),f(Hi,.960626,.859069,.29801),f(Hi,.95872,.866624,.31082),f(Hi,.956834,.874129,.323974),f(Hi,.954997,.881569,.337475),f(Hi,.953215,.888942,.351369),f(Hi,.951546,.896226,.365627),f(Hi,.950018,.903409,.380271),f(Hi,.948683,.910473,.395289),f(Hi,.947594,.917399,.410665),f(Hi,.946809,.924168,.426373),f(Hi,.946392,.930761,.442367),f(Hi,.946403,.937159,.458592),f(Hi,.946903,.943348,.47497),f(Hi,.947937,.949318,.491426),f(Hi,.949545,.955063,.50786),f(Hi,.95174,.960587,.524203),f(Hi,.954529,.965896,.540361),f(Hi,.957896,.971003,.556275),f(Hi,.961812,.975924,.571925),f(Hi,.966249,.980678,.587206),f(Hi,.971162,.985282,.602154),f(Hi,.976511,.989753,.61676),f(Hi,.982257,.994109,.631017),f(Hi,.988362,.998364,.644924)])),ls=u(is,f(Hi,.001462,466e-6,.013866),A([f(Hi,.002258,.001295,.018331),f(Hi,.003279,.002305,.023708),f(Hi,.004512,.00349,.029965),f(Hi,.007588,.006356,.044973),f(Hi,.009426,.008022,.052844),f(Hi,.011465,.009828,.06075),f(Hi,.013708,.011771,.068667),f(Hi,.016156,.01384,.076603),f(Hi,.018815,.016026,.084584),f(Hi,.021692,.01832,.09261),f(Hi,.024792,.020715,.100676),f(Hi,.028123,.023201,.108787),f(Hi,.031696,.025765,.116965),f(Hi,.03552,.028397,.125209),f(Hi,.039608,.03109,.133515),f(Hi,.04383,.03383,.141886),f(Hi,.048062,.036607,.150327),f(Hi,.05232,.039407,.158841),f(Hi,.056615,.04216,.167446),f(Hi,.060949,.044794,.176129),f(Hi,.06533,.047318,.184892),f(Hi,.069764,.049726,.193735),f(Hi,.074257,.052017,.20266),f(Hi,.078815,.054184,.211667),f(Hi,.083446,.056225,.220755),f(Hi,.088155,.058133,.229922),f(Hi,.092949,.059904,.239164),f(Hi,.097833,.061531,.248477),f(Hi,.102815,.06301,.257854),f(Hi,.107899,.064335,.267289),f(Hi,.113094,.065492,.276784),f(Hi,.118405,.066479,.286321),f(Hi,.123833,.067295,.295879),f(Hi,.12938,.067935,.305443),f(Hi,.135053,.068391,.315),f(Hi,.140858,.068654,.324538),f(Hi,.146785,.068738,.334011),f(Hi,.152839,.068637,.343404),f(Hi,.159018,.068354,.352688),f(Hi,.165308,.067911,.361816),f(Hi,.171713,.067305,.370771),f(Hi,.178212,.066576,.379497),f(Hi,.184801,.065732,.387973),f(Hi,.19146,.064818,.396152),f(Hi,.198177,.063862,.404009),f(Hi,.204935,.062907,.411514),f(Hi,.211718,.061992,.418647),f(Hi,.218512,.061158,.425392),f(Hi,.225302,.060445,.431742),f(Hi,.232077,.059889,.437695),f(Hi,.238826,.059517,.443256),f(Hi,.245543,.059352,.448436),f(Hi,.25222,.059415,.453248),f(Hi,.258857,.059706,.45771),f(Hi,.265447,.060237,.46184),f(Hi,.271994,.060994,.46566),f(Hi,.278493,.061978,.46919),f(Hi,.284951,.063168,.472451),f(Hi,.291366,.064553,.475462),f(Hi,.29774,.066117,.478243),f(Hi,.304081,.067835,.480812),f(Hi,.310382,.069702,.483186),f(Hi,.316654,.07169,.48538),f(Hi,.322899,.073782,.487408),f(Hi,.329114,.075972,.489287),f(Hi,.335308,.078236,.491024),f(Hi,.341482,.080564,.492631),f(Hi,.347636,.082946,.494121),f(Hi,.353773,.085373,.495501),f(Hi,.359898,.087831,.496778),f(Hi,.366012,.090314,.49796),f(Hi,.372116,.092816,.499053),f(Hi,.378211,.095332,.500067),f(Hi,.384299,.097855,.501002),f(Hi,.390384,.100379,.501864),f(Hi,.396467,.102902,.502658),f(Hi,.402548,.10542,.503386),f(Hi,.408629,.10793,.504052),f(Hi,.414709,.110431,.504662),f(Hi,.420791,.11292,.505215),f(Hi,.426877,.115395,.505714),f(Hi,.432967,.117855,.50616),f(Hi,.439062,.120298,.506555),f(Hi,.445163,.122724,.506901),f(Hi,.451271,.125132,.507198),f(Hi,.457386,.127522,.507448),f(Hi,.463508,.129893,.507652),f(Hi,.46964,.132245,.507809),f(Hi,.47578,.134577,.507921),f(Hi,.481929,.136891,.507989),f(Hi,.488088,.139186,.508011),f(Hi,.494258,.141462,.507988),f(Hi,.500438,.143719,.50792),f(Hi,.506629,.145958,.507806),f(Hi,.512831,.148179,.507648),f(Hi,.519045,.150383,.507443),f(Hi,.52527,.152569,.507192),f(Hi,.531507,.154739,.506895),f(Hi,.537755,.156894,.506551),f(Hi,.544015,.159033,.506159),f(Hi,.550287,.161158,.505719),f(Hi,.556571,.163269,.50523),f(Hi,.562866,.165368,.504692),f(Hi,.569172,.167454,.504105),f(Hi,.57549,.16953,.503466),f(Hi,.581819,.171596,.502777),f(Hi,.588158,.173652,.502035),f(Hi,.594508,.175701,.501241),f(Hi,.600868,.177743,.500394),f(Hi,.607238,.179779,.499492),f(Hi,.613617,.181811,.498536),f(Hi,.620005,.18384,.497524),f(Hi,.626401,.185867,.496456),f(Hi,.632805,.187893,.495332),f(Hi,.639216,.189921,.49415),f(Hi,.645633,.191952,.49291),f(Hi,.652056,.193986,.491611),f(Hi,.658483,.196027,.490253),f(Hi,.664915,.198075,.488836),f(Hi,.671349,.200133,.487358),f(Hi,.677786,.202203,.485819),f(Hi,.684224,.204286,.484219),f(Hi,.690661,.206384,.482558),f(Hi,.697098,.208501,.480835),f(Hi,.703532,.210638,.479049),f(Hi,.709962,.212797,.477201),f(Hi,.716387,.214982,.47529),f(Hi,.722805,.217194,.473316),f(Hi,.729216,.219437,.471279),f(Hi,.735616,.221713,.46918),f(Hi,.742004,.224025,.467018),f(Hi,.748378,.226377,.464794),f(Hi,.754737,.228772,.462509),f(Hi,.761077,.231214,.460162),f(Hi,.767398,.233705,.457755),f(Hi,.773695,.236249,.455289),f(Hi,.779968,.238851,.452765),f(Hi,.786212,.241514,.450184),f(Hi,.792427,.244242,.447543),f(Hi,.798608,.24704,.444848),f(Hi,.804752,.249911,.442102),f(Hi,.810855,.252861,.439305),f(Hi,.816914,.255895,.436461),f(Hi,.822926,.259016,.433573),f(Hi,.828886,.262229,.430644),f(Hi,.834791,.26554,.427671),f(Hi,.840636,.268953,.424666),f(Hi,.846416,.272473,.421631),f(Hi,.852126,.276106,.418573),f(Hi,.857763,.279857,.415496),f(Hi,.86332,.283729,.412403),f(Hi,.868793,.287728,.409303),f(Hi,.874176,.291859,.406205),f(Hi,.879464,.296125,.403118),f(Hi,.884651,.30053,.400047),f(Hi,.889731,.305079,.397002),f(Hi,.8947,.309773,.393995),f(Hi,.899552,.314616,.391037),f(Hi,.904281,.31961,.388137),f(Hi,.908884,.324755,.385308),f(Hi,.913354,.330052,.382563),f(Hi,.917689,.3355,.379915),f(Hi,.921884,.341098,.377376),f(Hi,.925937,.346844,.374959),f(Hi,.929845,.352734,.372677),f(Hi,.933606,.358764,.370541),f(Hi,.937221,.364929,.368567),f(Hi,.940687,.371224,.366762),f(Hi,.944006,.377643,.365136),f(Hi,.94718,.384178,.363701),f(Hi,.95021,.39082,.362468),f(Hi,.953099,.397563,.361438),f(Hi,.955849,.4044,.360619),f(Hi,.958464,.411324,.360014),f(Hi,.960949,.418323,.35963),f(Hi,.96331,.42539,.359469),f(Hi,.965549,.432519,.359529),f(Hi,.967671,.439703,.35981),f(Hi,.96968,.446936,.360311),f(Hi,.971582,.45421,.36103),f(Hi,.973381,.46152,.361965),f(Hi,.975082,.468861,.363111),f(Hi,.97669,.476226,.364466),f(Hi,.97821,.483612,.366025),f(Hi,.979645,.491014,.367783),f(Hi,.981,.498428,.369734),f(Hi,.982279,.505851,.371874),f(Hi,.983485,.51328,.374198),f(Hi,.984622,.520713,.376698),f(Hi,.985693,.528148,.379371),f(Hi,.9867,.535582,.38221),f(Hi,.987646,.543015,.38521),f(Hi,.988533,.550446,.388365),f(Hi,.989363,.557873,.391671),f(Hi,.990138,.565296,.395122),f(Hi,.990871,.572706,.398714),f(Hi,.991558,.580107,.402441),f(Hi,.992196,.587502,.406299),f(Hi,.992785,.594891,.410283),f(Hi,.993326,.602275,.41439),f(Hi,.993834,.609644,.418613),f(Hi,.994309,.616999,.42295),f(Hi,.994738,.62435,.427397),f(Hi,.995122,.631696,.431951),f(Hi,.99548,.639027,.436607),f(Hi,.99581,.646344,.441361),f(Hi,.996096,.653659,.446213),f(Hi,.996341,.660969,.45116),f(Hi,.99658,.668256,.456192),f(Hi,.996775,.675541,.461314),f(Hi,.996925,.682828,.466526),f(Hi,.997077,.690088,.471811),f(Hi,.997186,.697349,.477182),f(Hi,.997254,.704611,.482635),f(Hi,.997325,.711848,.488154),f(Hi,.997351,.719089,.493755),f(Hi,.997351,.726324,.499428),f(Hi,.997341,.733545,.505167),f(Hi,.997285,.740772,.510983),f(Hi,.997228,.747981,.516859),f(Hi,.997138,.75519,.522806),f(Hi,.997019,.762398,.528821),f(Hi,.996898,.769591,.534892),f(Hi,.996727,.776795,.541039),f(Hi,.996571,.783977,.547233),f(Hi,.996369,.791167,.553499),f(Hi,.996162,.798348,.55982),f(Hi,.995932,.805527,.566202),f(Hi,.99568,.812706,.572645),f(Hi,.995424,.819875,.57914),f(Hi,.995131,.827052,.585701),f(Hi,.994851,.834213,.592307),f(Hi,.994524,.841387,.598983),f(Hi,.994222,.84854,.605696),f(Hi,.993866,.855711,.612482),f(Hi,.993545,.862859,.619299),f(Hi,.99317,.870024,.626189),f(Hi,.992831,.877168,.633109),f(Hi,.99244,.88433,.640099),f(Hi,.992089,.89147,.647116),f(Hi,.991688,.898627,.654202),f(Hi,.991332,.905763,.661309),f(Hi,.99093,.912915,.668481),f(Hi,.99057,.920049,.675675),f(Hi,.990175,.927196,.682926),f(Hi,.989815,.934329,.690198),f(Hi,.989434,.94147,.697519),f(Hi,.989077,.948604,.704863),f(Hi,.988717,.955742,.712242),f(Hi,.988367,.962878,.719649),f(Hi,.988033,.970012,.727077),f(Hi,.987691,.977154,.734536),f(Hi,.987387,.984288,.742002),f(Hi,.987053,.991438,.749504)])),us=u(is,f(Hi,.2081,.1663,.5292),A([f(Hi,.2091,.1721,.5411),f(Hi,.2101,.1779,.553),f(Hi,.2109,.1837,.565),f(Hi,.2116,.1895,.5771),f(Hi,.2121,.1954,.5892),f(Hi,.2124,.2013,.6013),f(Hi,.2125,.2072,.6135),f(Hi,.2123,.2132,.6258),f(Hi,.2118,.2192,.6381),f(Hi,.2111,.2253,.6505),f(Hi,.2099,.2315,.6629),f(Hi,.2084,.2377,.6753),f(Hi,.2063,.244,.6878),f(Hi,.2038,.2503,.7003),f(Hi,.2006,.2568,.7129),f(Hi,.1968,.2632,.7255),f(Hi,.1921,.2698,.7381),f(Hi,.1867,.2764,.7507),f(Hi,.1802,.2832,.7634),f(Hi,.1728,.2902,.7762),f(Hi,.1641,.2975,.789),f(Hi,.1541,.3052,.8017),f(Hi,.1427,.3132,.8145),f(Hi,.1295,.3217,.8269),f(Hi,.1147,.3306,.8387),f(Hi,.0986,.3397,.8495),f(Hi,.0816,.3486,.8588),f(Hi,.0646,.3572,.8664),f(Hi,.0482,.3651,.8722),f(Hi,.0329,.3724,.8765),f(Hi,.0213,.3792,.8796),f(Hi,.0136,.3853,.8815),f(Hi,.0086,.3911,.8827),f(Hi,.006,.3965,.8833),f(Hi,.0051,.4017,.8834),f(Hi,.0054,.4066,.8831),f(Hi,.0067,.4113,.8825),f(Hi,.0089,.4159,.8816),f(Hi,.0116,.4203,.8805),f(Hi,.0148,.4246,.8793),f(Hi,.0184,.4288,.8779),f(Hi,.0223,.4329,.8763),f(Hi,.0264,.437,.8747),f(Hi,.0306,.441,.8729),f(Hi,.0349,.4449,.8711),f(Hi,.0394,.4488,.8692),f(Hi,.0437,.4526,.8672),f(Hi,.0477,.4564,.8652),f(Hi,.0514,.4602,.8632),f(Hi,.0549,.464,.8611),f(Hi,.0582,.4677,.8589),f(Hi,.0612,.4714,.8568),f(Hi,.064,.4751,.8546),f(Hi,.0666,.4788,.8525),f(Hi,.0689,.4825,.8503),f(Hi,.071,.4862,.8481),f(Hi,.0729,.4899,.846),f(Hi,.0746,.4937,.8439),f(Hi,.0761,.4974,.8418),f(Hi,.0773,.5012,.8398),f(Hi,.0782,.5051,.8378),f(Hi,.0789,.5089,.8359),f(Hi,.0794,.5129,.8341),f(Hi,.0795,.5169,.8324),f(Hi,.0793,.521,.8308),f(Hi,.0788,.5251,.8293),f(Hi,.0778,.5295,.828),f(Hi,.0764,.5339,.827),f(Hi,.0746,.5384,.8261),f(Hi,.0724,.5431,.8253),f(Hi,.0698,.5479,.8247),f(Hi,.0668,.5527,.8243),f(Hi,.0636,.5577,.8239),f(Hi,.06,.5627,.8237),f(Hi,.0562,.5677,.8234),f(Hi,.0523,.5727,.8231),f(Hi,.0484,.5777,.8228),f(Hi,.0445,.5826,.8223),f(Hi,.0408,.5874,.8217),f(Hi,.0372,.5922,.8209),f(Hi,.0342,.5968,.8198),f(Hi,.0317,.6012,.8186),f(Hi,.0296,.6055,.8171),f(Hi,.0279,.6097,.8154),f(Hi,.0265,.6137,.8135),f(Hi,.0255,.6176,.8114),f(Hi,.0248,.6214,.8091),f(Hi,.0243,.625,.8066),f(Hi,.0239,.6285,.8039),f(Hi,.0237,.6319,.801),f(Hi,.0235,.6352,.798),f(Hi,.0233,.6384,.7948),f(Hi,.0231,.6415,.7916),f(Hi,.023,.6445,.7881),f(Hi,.0229,.6474,.7846),f(Hi,.0227,.6503,.781),f(Hi,.0227,.6531,.7773),f(Hi,.0232,.6558,.7735),f(Hi,.0238,.6585,.7696),f(Hi,.0246,.6611,.7656),f(Hi,.0263,.6637,.7615),f(Hi,.0282,.6663,.7574),f(Hi,.0306,.6688,.7532),f(Hi,.0338,.6712,.749),f(Hi,.0373,.6737,.7446),f(Hi,.0418,.6761,.7402),f(Hi,.0467,.6784,.7358),f(Hi,.0516,.6808,.7313),f(Hi,.0574,.6831,.7267),f(Hi,.0629,.6854,.7221),f(Hi,.0692,.6877,.7173),f(Hi,.0755,.6899,.7126),f(Hi,.082,.6921,.7078),f(Hi,.0889,.6943,.7029),f(Hi,.0956,.6965,.6979),f(Hi,.1031,.6986,.6929),f(Hi,.1104,.7007,.6878),f(Hi,.118,.7028,.6827),f(Hi,.1258,.7049,.6775),f(Hi,.1335,.7069,.6723),f(Hi,.1418,.7089,.6669),f(Hi,.1499,.7109,.6616),f(Hi,.1585,.7129,.6561),f(Hi,.1671,.7148,.6507),f(Hi,.1758,.7168,.6451),f(Hi,.1849,.7186,.6395),f(Hi,.1938,.7205,.6338),f(Hi,.2033,.7223,.6281),f(Hi,.2128,.7241,.6223),f(Hi,.2224,.7259,.6165),f(Hi,.2324,.7275,.6107),f(Hi,.2423,.7292,.6048),f(Hi,.2527,.7308,.5988),f(Hi,.2631,.7324,.5929),f(Hi,.2735,.7339,.5869),f(Hi,.2845,.7354,.5809),f(Hi,.2953,.7368,.5749),f(Hi,.3064,.7381,.5689),f(Hi,.3177,.7394,.563),f(Hi,.3289,.7406,.557),f(Hi,.3405,.7417,.5512),f(Hi,.352,.7428,.5453),f(Hi,.3635,.7438,.5396),f(Hi,.3753,.7446,.5339),f(Hi,.3869,.7454,.5283),f(Hi,.3986,.7461,.5229),f(Hi,.4103,.7467,.5175),f(Hi,.4218,.7473,.5123),f(Hi,.4334,.7477,.5072),f(Hi,.4447,.7482,.5021),f(Hi,.4561,.7485,.4972),f(Hi,.4672,.7487,.4924),f(Hi,.4783,.7489,.4877),f(Hi,.4892,.7491,.4831),f(Hi,.5,.7491,.4786),f(Hi,.5106,.7492,.4741),f(Hi,.5212,.7492,.4698),f(Hi,.5315,.7491,.4655),f(Hi,.5418,.749,.4613),f(Hi,.5519,.7489,.4571),f(Hi,.5619,.7487,.4531),f(Hi,.5718,.7485,.449),f(Hi,.5816,.7482,.4451),f(Hi,.5913,.7479,.4412),f(Hi,.6009,.7476,.4374),f(Hi,.6103,.7473,.4335),f(Hi,.6197,.7469,.4298),f(Hi,.629,.7465,.4261),f(Hi,.6382,.746,.4224),f(Hi,.6473,.7456,.4188),f(Hi,.6564,.7451,.4152),f(Hi,.6653,.7446,.4116),f(Hi,.6742,.7441,.4081),f(Hi,.683,.7435,.4046),f(Hi,.6918,.743,.4011),f(Hi,.7004,.7424,.3976),f(Hi,.7091,.7418,.3942),f(Hi,.7176,.7412,.3908),f(Hi,.7261,.7405,.3874),f(Hi,.7346,.7399,.384),f(Hi,.743,.7392,.3806),f(Hi,.7513,.7385,.3773),f(Hi,.7596,.7378,.3739),f(Hi,.7679,.7372,.3706),f(Hi,.7761,.7364,.3673),f(Hi,.7843,.7357,.3639),f(Hi,.7924,.735,.3606),f(Hi,.8005,.7343,.3573),f(Hi,.8085,.7336,.3539),f(Hi,.8166,.7329,.3506),f(Hi,.8246,.7322,.3472),f(Hi,.8325,.7315,.3438),f(Hi,.8405,.7308,.3404),f(Hi,.8484,.7301,.337),f(Hi,.8563,.7294,.3336),f(Hi,.8642,.7288,.33),f(Hi,.872,.7282,.3265),f(Hi,.8798,.7276,.3229),f(Hi,.8877,.7271,.3193),f(Hi,.8954,.7266,.3156),f(Hi,.9032,.7262,.3117),f(Hi,.911,.7259,.3078),f(Hi,.9187,.7256,.3038),f(Hi,.9264,.7256,.2996),f(Hi,.9341,.7256,.2953),f(Hi,.9417,.7259,.2907),f(Hi,.9493,.7264,.2859),f(Hi,.9567,.7273,.2808),f(Hi,.9639,.7285,.2754),f(Hi,.9708,.7303,.2696),f(Hi,.9773,.7326,.2634),f(Hi,.9831,.7355,.257),f(Hi,.9882,.739,.2504),f(Hi,.9922,.7431,.2437),f(Hi,.9952,.7476,.2373),f(Hi,.9973,.7524,.231),f(Hi,.9986,.7573,.2251),f(Hi,.9991,.7624,.2195),f(Hi,.999,.7675,.2141),f(Hi,.9985,.7726,.209),f(Hi,.9976,.7778,.2042),f(Hi,.9964,.7829,.1995),f(Hi,.995,.788,.1949),f(Hi,.9933,.7931,.1905),f(Hi,.9914,.7981,.1863),f(Hi,.9894,.8032,.1821),f(Hi,.9873,.8083,.178),f(Hi,.9851,.8133,.174),f(Hi,.9828,.8184,.17),f(Hi,.9805,.8235,.1661),f(Hi,.9782,.8286,.1622),f(Hi,.9759,.8337,.1583),f(Hi,.9736,.8389,.1544),f(Hi,.9713,.8441,.1505),f(Hi,.9692,.8494,.1465),f(Hi,.9672,.8548,.1425),f(Hi,.9654,.8603,.1385),f(Hi,.9638,.8659,.1343),f(Hi,.9623,.8716,.1301),f(Hi,.9611,.8774,.1258),f(Hi,.96,.8834,.1215),f(Hi,.9593,.8895,.1171),f(Hi,.9588,.8958,.1126),f(Hi,.9586,.9022,.1082),f(Hi,.9587,.9088,.1036),f(Hi,.9591,.9155,.099),f(Hi,.9599,.9225,.0944),f(Hi,.961,.9296,.0897),f(Hi,.9624,.9368,.085),f(Hi,.9641,.9443,.0802),f(Hi,.9662,.9518,.0753),f(Hi,.9685,.9595,.0703),f(Hi,.971,.9673,.0651),f(Hi,.9736,.9752,.0597),f(Hi,.9763,.9831,.0538)])),fs=u(is,f(Hi,.050383,.029803,.527975),A([f(Hi,.063536,.028426,.533124),f(Hi,.075353,.027206,.538007),f(Hi,.086222,.026125,.542658),f(Hi,.096379,.025165,.547103),f(Hi,.10598,.024309,.551368),f(Hi,.115124,.023556,.555468),f(Hi,.123903,.022878,.559423),f(Hi,.132381,.022258,.56325),f(Hi,.140603,.021687,.566959),f(Hi,.148607,.021154,.570562),f(Hi,.156421,.020651,.574065),f(Hi,.16407,.020171,.577478),f(Hi,.171574,.019706,.580806),f(Hi,.17895,.019252,.584054),f(Hi,.186213,.018803,.587228),f(Hi,.193374,.018354,.59033),f(Hi,.200445,.017902,.593364),f(Hi,.207435,.017442,.596333),f(Hi,.21435,.016973,.599239),f(Hi,.221197,.016497,.602083),f(Hi,.227983,.016007,.604867),f(Hi,.234715,.015502,.607592),f(Hi,.241396,.014979,.610259),f(Hi,.248032,.014439,.612868),f(Hi,.254627,.013882,.615419),f(Hi,.261183,.013308,.617911),f(Hi,.267703,.012716,.620346),f(Hi,.274191,.012109,.622722),f(Hi,.280648,.011488,.625038),f(Hi,.287076,.010855,.627295),f(Hi,.293478,.010213,.62949),f(Hi,.299855,.009561,.631624),f(Hi,.30621,.008902,.633694),f(Hi,.312543,.008239,.6357),f(Hi,.318856,.007576,.63764),f(Hi,.32515,.006915,.639512),f(Hi,.331426,.006261,.641316),f(Hi,.337683,.005618,.643049),f(Hi,.343925,.004991,.64471),f(Hi,.35015,.004382,.646298),f(Hi,.356359,.003798,.64781),f(Hi,.362553,.003243,.649245),f(Hi,.368733,.002724,.650601),f(Hi,.374897,.002245,.651876),f(Hi,.381047,.001814,.653068),f(Hi,.387183,.001434,.654177),f(Hi,.393304,.001114,.655199),f(Hi,.399411,859e-6,.656133),f(Hi,.405503,678e-6,.656977),f(Hi,.41158,577e-6,.65773),f(Hi,.417642,564e-6,.65839),f(Hi,.423689,646e-6,.658956),f(Hi,.429719,831e-6,.659425),f(Hi,.435734,.001127,.659797),f(Hi,.441732,.00154,.660069),f(Hi,.447714,.00208,.66024),f(Hi,.453677,.002755,.66031),f(Hi,.459623,.003574,.660277),f(Hi,.46555,.004545,.660139),f(Hi,.471457,.005678,.659897),f(Hi,.477344,.00698,.659549),f(Hi,.48321,.00846,.659095),f(Hi,.489055,.010127,.658534),f(Hi,.494877,.01199,.657865),f(Hi,.500678,.014055,.657088),f(Hi,.506454,.016333,.656202),f(Hi,.512206,.018833,.655209),f(Hi,.517933,.021563,.654109),f(Hi,.523633,.024532,.652901),f(Hi,.529306,.027747,.651586),f(Hi,.534952,.031217,.650165),f(Hi,.54057,.03495,.64864),f(Hi,.546157,.038954,.64701),f(Hi,.551715,.043136,.645277),f(Hi,.557243,.047331,.643443),f(Hi,.562738,.051545,.641509),f(Hi,.568201,.055778,.639477),f(Hi,.573632,.060028,.637349),f(Hi,.579029,.064296,.635126),f(Hi,.584391,.068579,.632812),f(Hi,.589719,.072878,.630408),f(Hi,.595011,.07719,.627917),f(Hi,.600266,.081516,.625342),f(Hi,.605485,.085854,.622686),f(Hi,.610667,.090204,.619951),f(Hi,.615812,.094564,.61714),f(Hi,.620919,.098934,.614257),f(Hi,.625987,.103312,.611305),f(Hi,.631017,.107699,.608287),f(Hi,.636008,.112092,.605205),f(Hi,.640959,.116492,.602065),f(Hi,.645872,.120898,.598867),f(Hi,.650746,.125309,.595617),f(Hi,.65558,.129725,.592317),f(Hi,.660374,.134144,.588971),f(Hi,.665129,.138566,.585582),f(Hi,.669845,.142992,.582154),f(Hi,.674522,.147419,.578688),f(Hi,.67916,.151848,.575189),f(Hi,.683758,.156278,.57166),f(Hi,.688318,.160709,.568103),f(Hi,.69284,.165141,.564522),f(Hi,.697324,.169573,.560919),f(Hi,.701769,.174005,.557296),f(Hi,.706178,.178437,.553657),f(Hi,.710549,.182868,.550004),f(Hi,.714883,.187299,.546338),f(Hi,.719181,.191729,.542663),f(Hi,.723444,.196158,.538981),f(Hi,.72767,.200586,.535293),f(Hi,.731862,.205013,.531601),f(Hi,.736019,.209439,.527908),f(Hi,.740143,.213864,.524216),f(Hi,.744232,.218288,.520524),f(Hi,.748289,.222711,.516834),f(Hi,.752312,.227133,.513149),f(Hi,.756304,.231555,.509468),f(Hi,.760264,.235976,.505794),f(Hi,.764193,.240396,.502126),f(Hi,.76809,.244817,.498465),f(Hi,.771958,.249237,.494813),f(Hi,.775796,.253658,.491171),f(Hi,.779604,.258078,.487539),f(Hi,.783383,.2625,.483918),f(Hi,.787133,.266922,.480307),f(Hi,.790855,.271345,.476706),f(Hi,.794549,.27577,.473117),f(Hi,.798216,.280197,.469538),f(Hi,.801855,.284626,.465971),f(Hi,.805467,.289057,.462415),f(Hi,.809052,.293491,.45887),f(Hi,.812612,.297928,.455338),f(Hi,.816144,.302368,.451816),f(Hi,.819651,.306812,.448306),f(Hi,.823132,.311261,.444806),f(Hi,.826588,.315714,.441316),f(Hi,.830018,.320172,.437836),f(Hi,.833422,.324635,.434366),f(Hi,.836801,.329105,.430905),f(Hi,.840155,.33358,.427455),f(Hi,.843484,.338062,.424013),f(Hi,.846788,.342551,.420579),f(Hi,.850066,.347048,.417153),f(Hi,.853319,.351553,.413734),f(Hi,.856547,.356066,.410322),f(Hi,.85975,.360588,.406917),f(Hi,.862927,.365119,.403519),f(Hi,.866078,.36966,.400126),f(Hi,.869203,.374212,.396738),f(Hi,.872303,.378774,.393355),f(Hi,.875376,.383347,.389976),f(Hi,.878423,.387932,.3866),f(Hi,.881443,.392529,.383229),f(Hi,.884436,.397139,.37986),f(Hi,.887402,.401762,.376494),f(Hi,.89034,.406398,.37313),f(Hi,.89325,.411048,.369768),f(Hi,.896131,.415712,.366407),f(Hi,.898984,.420392,.363047),f(Hi,.901807,.425087,.359688),f(Hi,.904601,.429797,.356329),f(Hi,.907365,.434524,.35297),f(Hi,.910098,.439268,.34961),f(Hi,.9128,.444029,.346251),f(Hi,.915471,.448807,.34289),f(Hi,.918109,.453603,.339529),f(Hi,.920714,.458417,.336166),f(Hi,.923287,.463251,.332801),f(Hi,.925825,.468103,.329435),f(Hi,.928329,.472975,.326067),f(Hi,.930798,.477867,.322697),f(Hi,.933232,.48278,.319325),f(Hi,.93563,.487712,.315952),f(Hi,.93799,.492667,.312575),f(Hi,.940313,.497642,.309197),f(Hi,.942598,.502639,.305816),f(Hi,.944844,.507658,.302433),f(Hi,.947051,.512699,.299049),f(Hi,.949217,.517763,.295662),f(Hi,.951344,.52285,.292275),f(Hi,.953428,.52796,.288883),f(Hi,.95547,.533093,.28549),f(Hi,.957469,.53825,.282096),f(Hi,.959424,.543431,.278701),f(Hi,.961336,.548636,.275305),f(Hi,.963203,.553865,.271909),f(Hi,.965024,.559118,.268513),f(Hi,.966798,.564396,.265118),f(Hi,.968526,.5697,.261721),f(Hi,.970205,.575028,.258325),f(Hi,.971835,.580382,.254931),f(Hi,.973416,.585761,.25154),f(Hi,.974947,.591165,.248151),f(Hi,.976428,.596595,.244767),f(Hi,.977856,.602051,.241387),f(Hi,.979233,.607532,.238013),f(Hi,.980556,.613039,.234646),f(Hi,.981826,.618572,.231287),f(Hi,.983041,.624131,.227937),f(Hi,.984199,.629718,.224595),f(Hi,.985301,.63533,.221265),f(Hi,.986345,.640969,.217948),f(Hi,.987332,.646633,.214648),f(Hi,.98826,.652325,.211364),f(Hi,.989128,.658043,.2081),f(Hi,.989935,.663787,.204859),f(Hi,.990681,.669558,.201642),f(Hi,.991365,.675355,.198453),f(Hi,.991985,.681179,.195295),f(Hi,.992541,.68703,.19217),f(Hi,.993032,.692907,.189084),f(Hi,.993456,.69881,.186041),f(Hi,.993814,.704741,.183043),f(Hi,.994103,.710698,.180097),f(Hi,.994324,.716681,.177208),f(Hi,.994474,.722691,.174381),f(Hi,.994553,.728728,.171622),f(Hi,.994561,.734791,.168938),f(Hi,.994495,.74088,.166335),f(Hi,.994355,.746995,.163821),f(Hi,.994141,.753137,.161404),f(Hi,.993851,.759304,.159092),f(Hi,.993482,.765499,.156891),f(Hi,.993033,.77172,.154808),f(Hi,.992505,.777967,.152855),f(Hi,.991897,.784239,.151042),f(Hi,.991209,.790537,.149377),f(Hi,.990439,.796859,.14787),f(Hi,.989587,.803205,.146529),f(Hi,.988648,.809579,.145357),f(Hi,.987621,.815978,.144363),f(Hi,.986509,.822401,.143557),f(Hi,.985314,.828846,.142945),f(Hi,.984031,.835315,.142528),f(Hi,.982653,.841812,.142303),f(Hi,.98119,.848329,.142279),f(Hi,.979644,.854866,.142453),f(Hi,.977995,.861432,.142808),f(Hi,.976265,.868016,.143351),f(Hi,.974443,.874622,.144061),f(Hi,.97253,.88125,.144923),f(Hi,.970533,.887896,.145919),f(Hi,.968443,.894564,.147014),f(Hi,.966271,.901249,.14818),f(Hi,.964021,.90795,.14937),f(Hi,.961681,.914672,.15052),f(Hi,.959276,.921407,.151566),f(Hi,.956808,.928152,.152409),f(Hi,.954287,.934908,.152921),f(Hi,.951726,.941671,.152925),f(Hi,.949151,.948435,.152178),f(Hi,.946602,.95519,.150328),f(Hi,.944152,.961916,.146861),f(Hi,.941896,.96859,.140956),f(Hi,.940015,.975158,.131326)])),ss=u(is,f(Hi,.267004,.004874,.329415),A([f(Hi,.26851,.009605,.335427),f(Hi,.269944,.014625,.341379),f(Hi,.271305,.019942,.347269),f(Hi,.272594,.025563,.353093),f(Hi,.273809,.031497,.358853),f(Hi,.274952,.037752,.364543),f(Hi,.276022,.044167,.370164),f(Hi,.277018,.050344,.375715),f(Hi,.277941,.056324,.381191),f(Hi,.278791,.062145,.386592),f(Hi,.279566,.067836,.391917),f(Hi,.280267,.073417,.397163),f(Hi,.280894,.078907,.402329),f(Hi,.281446,.08432,.407414),f(Hi,.281924,.089666,.412415),f(Hi,.282327,.094955,.417331),f(Hi,.282656,.100196,.42216),f(Hi,.28291,.105393,.426902),f(Hi,.283091,.110553,.431554),f(Hi,.283197,.11568,.436115),f(Hi,.283229,.120777,.440584),f(Hi,.283187,.125848,.44496),f(Hi,.283072,.130895,.449241),f(Hi,.282884,.13592,.453427),f(Hi,.282623,.140926,.457517),f(Hi,.28229,.145912,.46151),f(Hi,.281887,.150881,.465405),f(Hi,.281412,.155834,.469201),f(Hi,.280868,.160771,.472899),f(Hi,.280255,.165693,.476498),f(Hi,.279574,.170599,.479997),f(Hi,.278826,.17549,.483397),f(Hi,.278012,.180367,.486697),f(Hi,.277134,.185228,.489898),f(Hi,.276194,.190074,.493001),f(Hi,.275191,.194905,.496005),f(Hi,.274128,.199721,.498911),f(Hi,.273006,.20452,.501721),f(Hi,.271828,.209303,.504434),f(Hi,.270595,.214069,.507052),f(Hi,.269308,.218818,.509577),f(Hi,.267968,.223549,.512008),f(Hi,.26658,.228262,.514349),f(Hi,.265145,.232956,.516599),f(Hi,.263663,.237631,.518762),f(Hi,.262138,.242286,.520837),f(Hi,.260571,.246922,.522828),f(Hi,.258965,.251537,.524736),f(Hi,.257322,.25613,.526563),f(Hi,.255645,.260703,.528312),f(Hi,.253935,.265254,.529983),f(Hi,.252194,.269783,.531579),f(Hi,.250425,.27429,.533103),f(Hi,.248629,.278775,.534556),f(Hi,.246811,.283237,.535941),f(Hi,.244972,.287675,.53726),f(Hi,.243113,.292092,.538516),f(Hi,.241237,.296485,.539709),f(Hi,.239346,.300855,.540844),f(Hi,.237441,.305202,.541921),f(Hi,.235526,.309527,.542944),f(Hi,.233603,.313828,.543914),f(Hi,.231674,.318106,.544834),f(Hi,.229739,.322361,.545706),f(Hi,.227802,.326594,.546532),f(Hi,.225863,.330805,.547314),f(Hi,.223925,.334994,.548053),f(Hi,.221989,.339161,.548752),f(Hi,.220057,.343307,.549413),f(Hi,.21813,.347432,.550038),f(Hi,.21621,.351535,.550627),f(Hi,.214298,.355619,.551184),f(Hi,.212395,.359683,.55171),f(Hi,.210503,.363727,.552206),f(Hi,.208623,.367752,.552675),f(Hi,.206756,.371758,.553117),f(Hi,.204903,.375746,.553533),f(Hi,.203063,.379716,.553925),f(Hi,.201239,.38367,.554294),f(Hi,.19943,.387607,.554642),f(Hi,.197636,.391528,.554969),f(Hi,.19586,.395433,.555276),f(Hi,.1941,.399323,.555565),f(Hi,.192357,.403199,.555836),f(Hi,.190631,.407061,.556089),f(Hi,.188923,.41091,.556326),f(Hi,.187231,.414746,.556547),f(Hi,.185556,.41857,.556753),f(Hi,.183898,.422383,.556944),f(Hi,.182256,.426184,.55712),f(Hi,.180629,.429975,.557282),f(Hi,.179019,.433756,.55743),f(Hi,.177423,.437527,.557565),f(Hi,.175841,.44129,.557685),f(Hi,.174274,.445044,.557792),f(Hi,.172719,.448791,.557885),f(Hi,.171176,.45253,.557965),f(Hi,.169646,.456262,.55803),f(Hi,.168126,.459988,.558082),f(Hi,.166617,.463708,.558119),f(Hi,.165117,.467423,.558141),f(Hi,.163625,.471133,.558148),f(Hi,.162142,.474838,.55814),f(Hi,.160665,.47854,.558115),f(Hi,.159194,.482237,.558073),f(Hi,.157729,.485932,.558013),f(Hi,.15627,.489624,.557936),f(Hi,.154815,.493313,.55784),f(Hi,.153364,.497,.557724),f(Hi,.151918,.500685,.557587),f(Hi,.150476,.504369,.55743),f(Hi,.149039,.508051,.55725),f(Hi,.147607,.511733,.557049),f(Hi,.14618,.515413,.556823),f(Hi,.144759,.519093,.556572),f(Hi,.143343,.522773,.556295),f(Hi,.141935,.526453,.555991),f(Hi,.140536,.530132,.555659),f(Hi,.139147,.533812,.555298),f(Hi,.13777,.537492,.554906),f(Hi,.136408,.541173,.554483),f(Hi,.135066,.544853,.554029),f(Hi,.133743,.548535,.553541),f(Hi,.132444,.552216,.553018),f(Hi,.131172,.555899,.552459),f(Hi,.129933,.559582,.551864),f(Hi,.128729,.563265,.551229),f(Hi,.127568,.566949,.550556),f(Hi,.126453,.570633,.549841),f(Hi,.125394,.574318,.549086),f(Hi,.124395,.578002,.548287),f(Hi,.123463,.581687,.547445),f(Hi,.122606,.585371,.546557),f(Hi,.121831,.589055,.545623),f(Hi,.121148,.592739,.544641),f(Hi,.120565,.596422,.543611),f(Hi,.120092,.600104,.54253),f(Hi,.119738,.603785,.5414),f(Hi,.119512,.607464,.540218),f(Hi,.119423,.611141,.538982),f(Hi,.119483,.614817,.537692),f(Hi,.119699,.61849,.536347),f(Hi,.120081,.622161,.534946),f(Hi,.120638,.625828,.533488),f(Hi,.12138,.629492,.531973),f(Hi,.122312,.633153,.530398),f(Hi,.123444,.636809,.528763),f(Hi,.12478,.640461,.527068),f(Hi,.126326,.644107,.525311),f(Hi,.128087,.647749,.523491),f(Hi,.130067,.651384,.521608),f(Hi,.132268,.655014,.519661),f(Hi,.134692,.658636,.517649),f(Hi,.137339,.662252,.515571),f(Hi,.14021,.665859,.513427),f(Hi,.143303,.669459,.511215),f(Hi,.146616,.67305,.508936),f(Hi,.150148,.676631,.506589),f(Hi,.153894,.680203,.504172),f(Hi,.157851,.683765,.501686),f(Hi,.162016,.687316,.499129),f(Hi,.166383,.690856,.496502),f(Hi,.170948,.694384,.493803),f(Hi,.175707,.6979,.491033),f(Hi,.180653,.701402,.488189),f(Hi,.185783,.704891,.485273),f(Hi,.19109,.708366,.482284),f(Hi,.196571,.711827,.479221),f(Hi,.202219,.715272,.476084),f(Hi,.20803,.718701,.472873),f(Hi,.214,.722114,.469588),f(Hi,.220124,.725509,.466226),f(Hi,.226397,.728888,.462789),f(Hi,.232815,.732247,.459277),f(Hi,.239374,.735588,.455688),f(Hi,.24607,.73891,.452024),f(Hi,.252899,.742211,.448284),f(Hi,.259857,.745492,.444467),f(Hi,.266941,.748751,.440573),f(Hi,.274149,.751988,.436601),f(Hi,.281477,.755203,.432552),f(Hi,.288921,.758394,.428426),f(Hi,.296479,.761561,.424223),f(Hi,.304148,.764704,.419943),f(Hi,.311925,.767822,.415586),f(Hi,.319809,.770914,.411152),f(Hi,.327796,.77398,.40664),f(Hi,.335885,.777018,.402049),f(Hi,.344074,.780029,.397381),f(Hi,.35236,.783011,.392636),f(Hi,.360741,.785964,.387814),f(Hi,.369214,.788888,.382914),f(Hi,.377779,.791781,.377939),f(Hi,.386433,.794644,.372886),f(Hi,.395174,.797475,.367757),f(Hi,.404001,.800275,.362552),f(Hi,.412913,.803041,.357269),f(Hi,.421908,.805774,.35191),f(Hi,.430983,.808473,.346476),f(Hi,.440137,.811138,.340967),f(Hi,.449368,.813768,.335384),f(Hi,.458674,.816363,.329727),f(Hi,.468053,.818921,.323998),f(Hi,.477504,.821444,.318195),f(Hi,.487026,.823929,.312321),f(Hi,.496615,.826376,.306377),f(Hi,.506271,.828786,.300362),f(Hi,.515992,.831158,.294279),f(Hi,.525776,.833491,.288127),f(Hi,.535621,.835785,.281908),f(Hi,.545524,.838039,.275626),f(Hi,.555484,.840254,.269281),f(Hi,.565498,.84243,.262877),f(Hi,.575563,.844566,.256415),f(Hi,.585678,.846661,.249897),f(Hi,.595839,.848717,.243329),f(Hi,.606045,.850733,.236712),f(Hi,.616293,.852709,.230052),f(Hi,.626579,.854645,.223353),f(Hi,.636902,.856542,.21662),f(Hi,.647257,.8584,.209861),f(Hi,.657642,.860219,.203082),f(Hi,.668054,.861999,.196293),f(Hi,.678489,.863742,.189503),f(Hi,.688944,.865448,.182725),f(Hi,.699415,.867117,.175971),f(Hi,.709898,.868751,.169257),f(Hi,.720391,.87035,.162603),f(Hi,.730889,.871916,.156029),f(Hi,.741388,.873449,.149561),f(Hi,.751884,.874951,.143228),f(Hi,.762373,.876424,.137064),f(Hi,.772852,.877868,.131109),f(Hi,.783315,.879285,.125405),f(Hi,.79376,.880678,.120005),f(Hi,.804182,.882046,.114965),f(Hi,.814576,.883393,.110347),f(Hi,.82494,.88472,.106217),f(Hi,.83527,.886029,.102646),f(Hi,.845561,.887322,.099702),f(Hi,.85581,.888601,.097452),f(Hi,.866013,.889868,.095953),f(Hi,.876168,.891125,.09525),f(Hi,.886271,.892374,.095374),f(Hi,.89632,.893616,.096335),f(Hi,.906311,.894855,.098125),f(Hi,.916242,.896091,.100717),f(Hi,.926106,.89733,.104071),f(Hi,.935904,.89857,.108131),f(Hi,.945636,.899815,.112838),f(Hi,.9553,.901065,.118128),f(Hi,.964894,.902323,.123941),f(Hi,.974417,.90359,.130215),f(Hi,.983868,.904867,.136897),f(Hi,.993248,.906157,.143936)])),ds=function(n){switch(n){case 0:return cs;case 1:return ls;case 2:return us;case 3:return fs;default:return ss}},vs=r((function(n,e){var t=e.a,o=e.b,a=u(mc,Or(e.b)+1,n);return a?u(r((function(n,e){n:for(;;){if(e.b){var r=e.a;if(n){n-=1,e=e.b;continue n}return r}return t}})),a-1,o):t})),ms=r((function(n,e){return u(vs,n,ds(e))})),bs=r((function(n,e){return{$:0,a:n,b:e}})),ps=r((function(n,e){return{$:2,a:n,b:e}})),gs=function(n){return{$:5,a:n}},hs=r((function(n,e){return{$:4,a:n,b:e}})),xs=r((function(n,e){return{$:3,a:n,b:e}})),Cs=r((function(n,e){return{$:1,a:n,b:e}})),Ps=t((function(n,e,r){return{b4:n,b5:e,a4:r}})),Ms=function(n){return n.ff},ys=function(n){return n.d5},Ts=function(n){return n.dV},ws=function(n){return n.dW},Ls=r((function(n,e){return{dj:u(Ff,n,sf(e)),dV:Ts(e),dW:ws(e),dX:xf(e)}})),Ss=r((function(n,e){return{ff:u(Ls,n,Ms(e)),d5:ys(e)}})),Ns=r((function(n,e){var r=e;return u(gf,u(Ff,n,r.dj),r.fu)})),$s=r((function(n,e){var r=e;return{m:u(Ns,n,r.m),fU:r.fU,f9:r.f9}})),Ds=r((function(n,e){var r=e.b;return w(n(e.a),n(r))})),zs=r((function(n,e){return u(Ds,Ff(n),e)})),As=function(n){return n.fo},_s=function(n){return n.f9},Bs=r((function(n,e){return{fo:e,f9:Gu(n)}})),Rs=r((function(n,e){return u(Bs,_s(e),u(Ff,n,As(e)))})),Vs=r((function(n,e){var r=e.b,t=e.c;return L(n(e.a),n(r),n(t))})),Fs=r((function(n,e){return u(Vs,Ff(n),e)})),ks=r((function(n,e){var r=n.a,t=n.b,o=n.c,a=f(Ps,r,t,o);switch(e.$){case 0:return u(bs,e.a,u(Ss,a,e.b));case 1:return u(Cs,e.a,u(Fs,a,e.b));case 3:return u(xs,e.a,u(Rs,a,e.b));case 2:return u(ps,e.a,u($s,a,e.b));case 4:return u(hs,e.a,u(zs,a,e.b));default:var i=e.a;return gs(u(Wt,ks(L(r,t,o)),i))}})),js=function(n){return ks(L(n,0,0))},Es=function(n){return ks(L(0,n,0))},Ws=t((function(n,e,r){var t=n,o=r,a=.5*e,i=Lf(a),c=Sf(a),l=t.fu,u=l.b4*c,f=i*u,s=u*u,d=l.b5*c,v=i*d,m=u*d,b=d*d,p=l.a4*c,g=i*p,h=u*p,x=d*p,C=p*p;return{b4:(1-2*(b+C))*o.b4+2*(m-g)*o.b5+2*(h+v)*o.a4,b5:2*(m+g)*o.b4+(1-2*(s+C))*o.b5+2*(x-f)*o.a4,a4:2*(h-v)*o.b4+2*(x+f)*o.b5+(1-2*(s+b))*o.a4}})),Is=t((function(n,e,r){var t=n,o=r,a=.5*e,i=Lf(a),c=Sf(a),l=t.dj,u=o.b4-l.b4,f=o.b5-l.b5,s=o.a4-l.a4,d=t.fu,v=d.b4*c,m=i*v,b=v*v,p=d.b5*c,g=i*p,h=v*p,x=p*p,C=d.a4*c,P=i*C,M=v*C,y=p*C,T=C*C;return{b4:l.b4+(1-2*(x+T))*u+2*(h-P)*f+2*(M+g)*s,b5:l.b5+2*(h+P)*u+(1-2*(b+T))*f+2*(y-m)*s,a4:l.a4+2*(M-g)*u+2*(y+m)*f+(1-2*(b+x))*s}})),Hs=t((function(n,e,r){return{dj:f(Is,n,e,sf(r)),dV:f(Ws,n,e,Ts(r)),dW:f(Ws,n,e,ws(r)),dX:f(Ws,n,e,xf(r))}})),Us=t((function(n,e,r){return{ff:f(Hs,n,e,Ms(r)),d5:ys(r)}})),Os=r((function(n,e){var r=u(Is,n,e),t=u(Ws,n,e);return function(n){var e=n;return u(gf,r(e.dj),t(e.fu))}})),Gs=t((function(n,e,r){var t=r;return{m:f(Os,n,e,t.m),fU:t.fU,f9:t.f9}})),qs=t((function(n,e,r){return u(Ds,u(Is,n,e),r)})),Ys=t((function(n,e,r){return u(Bs,_s(r),f(Is,n,e,As(r)))})),Ks=t((function(n,e,r){return u(Vs,u(Is,n,e),r)})),Xs=t((function(n,e,r){switch(r.$){case 0:return u(bs,r.a,f(Us,n,e,r.b));case 1:return u(Cs,r.a,f(Ks,n,e,r.b));case 3:return u(xs,r.a,f(Ys,n,e,r.b));case 2:return u(ps,r.a,f(Gs,n,e,r.b));case 4:return u(hs,r.a,f(qs,n,e,r.b));default:var t=r.a;return gs(u(Wt,u(Xs,n,e),t))}})),Zs=r((function(n,e){var r=n.b;return u(Xs,u(gf,n.a,{b4:r.a,b5:r.b,a4:r.c}),e)})),Js=u(gf,Ou,If),Qs=r((function(n,e){return f(Xs,Js,n,e)})),nd=t((function(n,e,r){return{b4:n.b4+e*(r.b4-n.b4),b5:n.b5+e*(r.b5-n.b5),a4:n.a4+e*(r.a4-n.a4)}})),ed=t((function(n,e,r){var t=Ms(r),o=Ts(t),a=ws(t),i=xf(t),c=f(nd,n,e,sf(t)),l=0>e?{dj:c,dV:hf(o),dW:hf(a),dX:hf(i)}:{dj:c,dV:o,dW:a,dX:i},s=ys(r),d=s.b,v=s.c;return{ff:l,d5:L(Gu(u(ef,e,s.a)),Gu(u(ef,e,d)),Gu(u(ef,e,v)))}})),rd=function(n){return n.m},td=function(n){return nf(rd(n))},od=function(n){return n.fU},ad=function(n){return n.f9},id=t((function(n,e,r){var t=Gu(u(ef,e,ad(r))),o=Gu(u(ef,e,od(r))),a=0>e?hf(td(r)):td(r),i=f(nd,n,e,function(n){return rf(rd(n))}(r));return{m:u(gf,i,a),fU:o,f9:t}})),cd=t((function(n,e,r){return u(Ds,u(nd,n,e),r)})),ld=t((function(n,e,r){return u(Bs,u(ef,Cc(e),_s(r)),f(nd,n,e,As(r)))})),ud=t((function(n,e,r){return u(Vs,u(nd,n,e),r)})),fd=r((function(n,e){switch(e.$){case 0:return u(bs,e.a,f(ed,Ou,n,e.b));case 1:return u(Cs,e.a,f(ud,Ou,n,e.b));case 3:return u(xs,e.a,f(ld,Ou,n,e.b));case 2:return u(ps,e.a,f(id,Ou,n,e.b));case 4:return u(hs,e.a,f(cd,Ou,n,e.b));default:var r=e.a;return gs(u(Wt,fd(n),r))}})),sd=r((function(n,e){var r=n.b4,t=n.b5,o=n.a4;return u(Lt,ks(L(-r,-t,-o)),u(Lt,fd(e),ks(L(r,t,o))))})),dd=function(n){var e=n.cD,r=n.cG;return{b4:Du(3)/2*e,b5:.5*e+r}},vd=t((function(n,e,r){return L(n,e,r)})),md=t((function(n,e,r){return{b4:n,b5:e,a4:r}})),bd=r((function(n,e){var r=e.a,t=e.b,o=e.c;return u(Cs,n,f(vd,f(md,r.b4,r.b5,r.a4),f(md,t.b4,t.b5,t.a4),f(md,o.b4,o.b5,o.a4)))})),pd=r((function(n,e){return(e-ut(e/n)*n)/n})),gd=o((function(n,e,r,t){return n+(e-n)*(1+Lf(6.283185307179586*u(pd,r,t)))/2})),hd=t((function(n,e,r){var t,o=r.a,a=o.a,i=o.b,c=o.c,l=r.b,d=u(Nu,"minimum rotation degree",n),v=u(Nu,"maximum rotation degree",n),m={b4:(t=dd(a?{cD:2/3,cG:2/3}:{cD:1/3,cG:1/3})).b4,b5:t.b5,a4:0},b=s(gd,d,v,u(Nu,"rotation period",n),n.bo),p=u(Lt,zt,u(Zs,w(m,L(0,0,1)),b)),g=u(bd,u(ms,l,e),L({b4:0,b5:0,a4:0},{b4:Lf(gu(30)),b5:Sf(gu(30)),a4:0},{b4:0,b5:1,a4:0})),h=u(Es,1+Sf(gu(30)),u(js,Lf(gu(30)),u(Qs,gu(180),g))),x=dd({cD:i,cG:c});return u(Es,x.b5,u(js,x.b4,p(f(sd,m,u(Nu,"trixel scale",n),a?h:g))))})),xd=function(n){return gs(n)},Cd=r((function(n,e){var r=as(e.l);return xd(u(Wt,u(hd,n,r.bN),function(n){return e=n.a,f(Sr,t((function(n,e,r){return u(Tr,e,r)})),$,e);var e}(r.go)))})),Pd=function(n){return{$:0,a:n}},Md={$:3},yd=o((function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}})),Td=yd,wd=r((function(n,e){return e.b?f(Et,Tr,e,n):n})),Ld=function(n){return f(Et,wd,$,n)},Sd=r((function(n,e){return Ld(u(Wt,n,e))})),Nd=function(n){return u(le,"height",Wr(n))},$d=function(n){return te(function(n){return"script"==n?"p":n}(n))},Dd=function(n){return{$:2,a:n}},zd=function(n){return u(Ir,"",n)},Ad=function(n){var e,r=n.b,t=n.c,o=n.d,a=function(n){return Gi(1e4*n)/100};return zd(A(["rgba(",Lc(a(n.a)),"%,",Lc(a(r)),"%,",Lc(a(t)),"%,",Lc((e=o,Gi(1e3*e)/1e3)),")"]))},_d=r((function(n,e){switch(e.$){case 0:return u(dr,n,e);case 1:return u(vr,n,e);case 2:return u(mr,n,e);case 3:return u(br,n,e);case 4:return u(pr,n,e);default:return u(gr,n,e)}})),Bd=r((function(n,e){switch(e.$){case 0:return u(Ye,n,e);case 1:return u(Ke,n,e);case 2:return u(Xe,n,e);case 3:return u(Ze,n,e);case 4:return u(Je,n,e);case 5:return u(Qe,n,e);case 6:return u(nr,n,e);case 7:return u(er,n,e);default:return function(n){var e=n.sampleAlphaToCoverage;e.toggle=n.toggle,e.enabled||(n.gl.enable(n.gl.SAMPLE_ALPHA_TO_COVERAGE),e.enabled=!0)}(n)}})),Rd=t((function(n,e,r){return f(sr,n,e,r)})),Vd=yr,Fd=s(Vd,1,1,1,1),kd=t((function(n,e,r){return u(Wt,(function(n){return u(n,e,r)}),n)})),jd=t((function(n,e,r){return{$:0,a:n,b:e,c:r}})),Ed=r((function(n,e){var r=e.b4,t=e.b5;return f(jd,n*r/t,n,n*(1-r-t)/t)})),Wd=Pr,Id=r((function(n,e){return f(Wd,3.2406*(t=(r=u(Ed,n,e)).a)-1.5372*(o=r.b)-.4986*(a=r.c),-.9689*t+1.8758*o+.0415*a,.0557*t-.204*o+1.057*a);var r,t,o,a})),Hd=r((function(n,e){return{eg:P(n.eg,e.eg),v:n.v*e.v+n.w*e.y+n.x*e.B,w:n.v*e.w+n.w*e.z+n.x*e.C,x:n.v*e.x+n.w*e.A+n.x*e.D,y:n.y*e.v+n.z*e.y+n.A*e.B,z:n.y*e.w+n.z*e.z+n.A*e.C,A:n.y*e.x+n.z*e.A+n.A*e.D,B:n.B*e.v+n.C*e.y+n.D*e.B,C:n.B*e.w+n.C*e.z+n.D*e.C,D:n.B*e.x+n.C*e.A+n.D*e.D,O:e.O+(n.O*e.v+n.P*e.y+n.Q*e.B)*e.cA,P:e.P+(n.O*e.w+n.P*e.z+n.Q*e.C)*e.cA,Q:e.Q+(n.O*e.x+n.P*e.A+n.Q*e.D)*e.cA,cA:n.cA*e.cA}})),Ud=function(n){var e=new Float64Array(16);return e[0]=n.eo,e[1]=n.es,e[2]=n.ew,e[3]=n.eA,e[4]=n.ep,e[5]=n.et,e[6]=n.ex,e[7]=n.eB,e[8]=n.eq,e[9]=n.eu,e[10]=n.ey,e[11]=n.eC,e[12]=n.er,e[13]=n.ev,e[14]=n.ez,e[15]=n.eD,e},Od=a((function(n,e,r,t,o){return v(o,n,s(Vd,t.cA,t.cA,t.cA,t.eg?1:-1),function(n){return Ud({eo:n.v,ep:n.y,eq:n.B,er:n.O,es:n.w,et:n.z,eu:n.C,ev:n.P,ew:n.x,ex:n.A,ey:n.D,ez:n.Q,eA:0,eB:0,eC:0,eD:1})}(t),t.eg,e,r)})),Gd=i((function(n,e,r,t,o,a){n:for(;;)switch(o.$){case 0:return a;case 5:var i=o.b;n=n,e=e,r=r,t=u(Hd,o.a,t),o=i,a=a;continue n;case 1:return{U:u(Tr,d(Od,n,e,r,t,o.b),a.U),ah:a.ah,gd:a.gd};case 3:return{U:a.U,ah:u(Tr,d(Od,n,e,r,t,o.b),a.ah),gd:a.gd};case 2:return{U:a.U,ah:a.ah,gd:u(Tr,d(Od,n,e,r,t,o.a),a.gd)};default:var c=o.a;return f(Ur,s(Gd,n,e,r,t),a,c)}})),qd=o((function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}})),Yd=qd,Kd=o((function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}})),Xd=r((function(n,e){return{$:6,a:n,b:e}})),Zd=Xd,Jd=A([s(Kd,518,!1,0,1),s(Yd,!1,!1,!1,!1),u(Zd,0,1)]),Qd=519,nv=7681,ev={src:"\n        precision lowp float;\n\n        void main() {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n    ",attributes:{},uniforms:{}},rv=qe,tv=r((function(n,e){return{$:0,a:n,b:e}})),ov=tv({d6:1,ef:0,eM:5}),av=Cr,iv=ov(A([{cw:u(av,-1,-1)},{cw:u(av,1,-1)},{cw:u(av,-1,1)},{cw:u(av,1,1)}])),cv={src:"\n        precision lowp float;\n\n        attribute vec2 position;\n\n        void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n        }\n    ",attributes:{position:"cw"},uniforms:{}},lv=function(n){return function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){return function(f){return{$:2,a:n,b:e,c:r,d:t,e:o,f:a,g:i,h:c,i:l,j:u,k:f}}}}}}}}}}}},uv=t((function(n,e,t){var o=n.dA,a=n.da,i=n.dU,c=r((function(n,e){return e(n)})),l=r((function(n,e){return e(n)})),s=function(n){return u(Lt,c(n.bW),u(Lt,l(n.bB),u(Lt,l(n.b6),l(n.b7))))};return u(s,t,u(s,e,f(lv,o,a,i)))})),fv=function(n){return f(uv,{da:n.da,dA:n.dA,dU:n.dU},{bB:n.bB,bW:n.bW,b6:n.b6,b7:n.b7},{bB:n.bB,bW:n.bW,b6:n.b6,b7:n.b7})},sv=function(n){return d(rv,A([fv(n),s(Yd,!1,!1,!1,!1)]),cv,ev,iv,{})},dv=sv({bB:nv,da:0,dA:8,bW:Qd,dU:15,b6:nv,b7:nv}),vv=7680,mv=function(n){return sv({bB:vv,da:15,dA:8,bW:516,dU:(e=n,u(Oi,2,e+4)),b6:5386,b7:5386});var e},bv=t((function(n,e,r){return Ld(A([f(kd,n,r,Jd),A([mv(e),dv])]))})),pv=r((function(n,e){return Ld(u(Kr,bv(n),e))})),gv=s(Kd,513,!0,0,1),hv=t((function(n,e,r){return{$:0,a:n,b:e,c:r}})),xv=r((function(n,e){return f(hv,32774,n,e)})),Cv=function(n){var e=n.cy,t=n.ch,o=n.cb,a=n.b8,i=n.cd,c=n.a5;return u(r((function(n,r){var i=n.b,c=n.c,l=r.a,u=r.b,f=r.c;return function(n){return function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){return{$:0,a:n,b:e,c:r,d:t,e:o,f:a,g:i,h:c,i:l,j:u}}}}}}}}}}}(n.a)(i)(c)(l)(u)(f)(e)(t)(o)(a)})),i,c)}({b8:0,a5:u(xv,1,771),cb:0,cd:u(xv,770,771),ch:0,cy:0}),Pv=A([gv,Cv]),Mv=function(n){return n.eH},yv=function(n){return n.eK},Tv=r((function(n,e){return e-n})),wv=function(n){return L(u(Tv,function(n){return n.eI}(n),function(n){return n.eF}(n)),u(Tv,function(n){return n.eJ}(n),function(n){return n.eG}(n)),u(Tv,yv(n),Mv(n)))},Lv=function(n){return{dj:{b4:n.O,b5:n.P,a4:n.Q},dV:{b4:n.v,b5:n.w,a4:n.x},dW:{b4:n.y,b5:n.z,a4:n.A},dX:{b4:n.B,b5:n.C,a4:n.D}}},Sv=r((function(n,e){var r=n.dX,t=n.dW,o=n.dV;return{b4:e.b4*o.b4+e.b5*o.b5+e.a4*o.a4,b5:e.b4*t.b4+e.b5*t.b5+e.a4*t.a4,a4:e.b4*r.b4+e.b5*r.b5+e.a4*r.a4}})),Nv=r((function(n,e){var r=n.dj,t=e.b4-r.b4,o=e.b5-r.b5,a=e.a4-r.a4,i=n.dX,c=n.dW,l=n.dV;return{b4:t*l.b4+o*l.b5+a*l.a4,b5:t*c.b4+o*c.b5+a*c.a4,a4:t*i.b4+o*i.b5+a*i.a4}})),$v=r((function(n,e){return{dj:u(Nv,n,sf(e)),dV:u(Sv,n,Ts(e)),dW:u(Sv,n,ws(e)),dX:u(Sv,n,xf(e))}})),Dv=r((function(n,e){return u(st,n,e)})),zv=r((function(n,e){return 0>y(n,e)?n:e})),Av=r((function(n,e){return u(zv,n,e)})),_v=r((function(n,e){var r=e,t=n;return{eF:u(Dv,t.eF,r.eF),eG:u(Dv,t.eG,r.eG),eH:u(Dv,t.eH,r.eH),eI:u(Av,t.eI,r.eI),eJ:u(Av,t.eJ,r.eJ),eK:u(Av,t.eK,r.eK)}})),Bv=r((function(n,e){return e+n})),Rv=r((function(n,e){var r=n.a,t=n.c,o=qu(Gu(n.b)),a=qu(Gu(r)),i=qu(Gu(t)),c=function(n){return L(n.b4,n.b5,n.a4)}(e),l=c.a,f=c.b,s=c.c;return{eF:u(Bv,a,l),eG:u(Bv,o,f),eH:u(Bv,i,s),eI:u(Tv,a,l),eJ:u(Tv,o,f),eK:u(Tv,i,s)}})),Vv=o((function(n,e,r,t){var o=r.fo,a=2*r.fI*e,i=2*r.fH*e,c=2*r.fG*e,l=o.a4*e,s=o.b5*e,d=o.b4*e,v=xf(n),m=Cc(c*v.b4)+Cc(i*v.b5)+Cc(a*v.a4),b=ws(n),p=Cc(c*b.b4)+Cc(i*b.b5)+Cc(a*b.a4),g=Ts(n),h=Cc(c*g.b4)+Cc(i*g.b5)+Cc(a*g.a4),x=u(Rv,L(h,p,m),u(Nv,n,f(md,d,s,l)));return kr(t.$?x:u(_v,t.a,x))})),Fv=o((function(n,e,r,t){n:for(;;){if(!t.b)return r;var o=t.a,a=t.b;switch(o.$){case 0:n=c=n,e=l=e,r=f=r,t=a;continue n;case 1:var i=s(Vv,n,e,o.a,r);n=c=n,e=l=e,r=f=i,t=a;continue n;case 2:n=c=n,e=l=e,r=f=r,t=a;continue n;case 3:i=s(Vv,n,e,o.a,r),n=c=n,e=l=e,r=f=i,t=a;continue n;case 4:var c=n,l=e,f=s(Fv,n,e,r,o.a);n=c,e=l,r=f,t=a;continue n;default:var d=o.a,v=o.b,m=u($v,Lv(d),n),b=e*d.cA;n=c=n,e=l=e,r=f=s(Fv,m,b,r,A([v])),t=a;continue n}}})),kv=function(n){return n[0]},jv=function(n){return n[1]},Ev=function(n){return n[2]},Wv=function(n){return{$:4,a:n}},Iv=r((function(n,e){for(;;){if(!n.b)return e;var r=n.a;n=n.b,e=u(Tr,r,e)}})),Hv=function(n){return Wv(u(Iv,n,$))},Uv={eg:!0,v:1,w:0,x:0,y:0,z:1,A:0,B:0,C:0,D:1,O:0,P:0,Q:0,cA:1},Ov=sv({bB:nv,da:0,dA:8,bW:Qd,dU:255,b6:nv,b7:nv}),Gv={cb:0,fn:!1,ch:0,du:0,cy:0,dN:0,b4:0,b5:0,a4:0},qv=r((function(n,e){return Ud({eo:n.b4,ep:n.cy,eq:e.b4,er:e.cy,es:n.b5,et:n.ch,eu:e.b5,ev:e.ch,ew:n.a4,ex:n.cb,ey:e.a4,ez:e.cb,eA:n.dN,eB:n.du,eC:e.dN,eD:e.du})})),Yv=w({bK:u(qv,Gv,Gv),cl:u(qv,Gv,Gv),cm:u(qv,Gv,Gv),cn:u(qv,Gv,Gv)},s(Vd,0,0,0,0)),Kv=function(n){return s(Kd,515,n.ap,n.aj,n.ai)},Xv=A([Kv({ai:1,aj:0,ap:!0}),fv({bB:vv,da:240,dA:0,bW:514,dU:0,b6:vv,b7:vv}),Cv]),Zv=r((function(n,e){var r=n,t=e.fD,o=e.fe,a=Gu(e.f1),i=Gu(t),c=r.dy;if(c.$){var l=c.a;return Nc(i)?Ud({eo:2/(o*l),ep:0,eq:0,er:0,es:0,et:2/l,eu:0,ev:0,ew:0,ex:0,ey:0,ez:-1,eA:0,eB:0,eC:0,eD:1}):Ud({eo:2/(o*l),ep:0,eq:0,er:0,es:0,et:2/l,eu:0,ev:0,ew:0,ex:0,ey:-2/(i-a),ez:-(i+a)/(i-a),eA:0,eB:0,eC:0,eD:1})}var u=c.a;return Nc(i)?Ud({eo:1/(o*u),ep:0,eq:0,er:0,es:0,et:1/u,eu:0,ev:0,ew:0,ex:0,ey:-1,ez:-2*a,eA:0,eB:0,eC:-1,eD:0}):Ud({eo:1/(o*u),ep:0,eq:0,er:0,es:0,et:1/u,eu:0,ev:0,ew:0,ex:0,ey:-(i+a)/(i-a),ez:-2*i*a/(i-a),eA:0,eB:0,eC:-1,eD:0})})),Jv=r((function(n,e){return 1==(1&n>>e)?0:1})),Qv=t((function(n,e,r){return Ld(u(Wt,(function(r){var t=r<<4;return f(kd,n,w(e,s(Vd,u(Jv,r,0),u(Jv,r,1),u(Jv,r,2),u(Jv,r,3))),function(n){return A([Kv({ai:1,aj:0,ap:!0}),fv({bB:vv,da:240,dA:n,bW:514,dU:0,b6:vv,b7:vv}),Cv])}(t))}),u(Yr,1,u(Oi,2,r)-1)))})),nm={b4:1,b5:0,a4:0},em=Ku,rm={dj:Ou,dV:nm,dW:em,dX:If},tm=r((function(n,e){var r,t,o,a,i;return t=sf(r=u($v,e,n)),o=xf(r),a=ws(r),i=Ts(r),Ud({eo:i.b4,ep:a.b4,eq:o.b4,er:t.b4,es:i.b5,et:a.b5,eu:o.b5,ev:t.b5,ew:i.a4,ex:a.a4,ey:o.a4,ez:t.a4,eA:0,eB:0,eC:0,eD:1})})),om=function(n){return Ts(n)},am=function(n){return ws(n)},im=r((function(n,e){var r,t=A([(1,{$:1,a:1}),Dd(0),Pd(!0),s(Td,0,0,0,0)]),o=function(){var e=n.fc;switch(e.$){case 0:return L(t,"0",1);case 1:return L(u(Tr,Md,t),"1",1);default:return L(t,"0",e.a)}}(),a=o.a,i=o.b,c=o.c,l=n.d5,d=l.a,m=l.b,b=u(hl,"height",Wr(m)+"px"),p=d,g=p/m,h=u(Sd,(function(e){return function(n){var e=function(n){return n.dR}(n.fl),r={dj:df(e),dV:om(e),dW:am(e),dX:hf(Cf(e))},t=Hv(n.d9),o=s(Fv,r,1,jr,A([t]));if(1===o.$)return $;var a=o.a,i=u(tm,rm,e),c=u(ef,.99,u(Dv,Gu(n.d2),vf(Mv(a)))),l=wv(a),d=function(n){var e=n,r=u(st,Cc(e.b4),u(st,Cc(e.b5),Cc(e.a4)));if(r){var t=e.a4/r,o=e.b5/r,a=e.b4/r;return Du(a*a+o*o+t*t)*r}return 0}(f(Mf,l.a,l.b,l.c)),m=u(ef,1.01,u(Bv,d,vf(yv(a)))),b=u(Zv,n.fl,{fe:n.fe,fD:m,f1:c}),p=function(n){return{eo:n[0],es:n[1],ew:n[2],eA:n[3],ep:n[4],et:n[5],ex:n[6],eB:n[7],eq:n[8],eu:n[9],ey:n[10],eC:n[11],er:n[12],ev:n[13],ez:n[14],eD:n[15]}}(b).eD,g=p?hf(Cf(e)):df(e),h=function(){var e=n.gn;switch(e.$){case 0:return w(0,0);case 1:return w(1,0);case 2:return w(2,0);case 3:return w(3,e.a);case 4:return w(4,e.a);default:return w(5,0)}}(),x=h.a,C=h.b,P=u(Id,n.fA,n.gu),M=Ud({eo:0,ep:g.b4,eq:kv(P),er:n.e3,es:0,et:g.b5,eu:jv(P),ev:d,ew:0,ex:g.a4,ey:Ev(P),ez:x,eA:0,eB:p,eC:0,eD:C}),y=v(Gd,M,i,b,Uv,t,{U:$,ah:$,gd:$}),T=n.fW;switch(T.$){case 0:return Ld(A([f(kd,y.U,w(L=T.a,Fd),Pv),f(kd,y.ah,Yv,Pv)]));case 1:var L=T.a;return Ld(A([f(kd,y.U,Yv,Pv),A([Ov]),f(kd,y.gd,L.bK,Jd),A([mv(0)]),f(kd,y.U,w(L,Fd),Xv),f(kd,y.ah,Yv,Pv)]));default:var S=T.a,N=T.b;return Ld(A([f(kd,y.U,w(N,Fd),Pv),A([Ov]),u(pv,y.gd,S),f(Qv,y.U,N,Or(S)),f(kd,y.ah,Yv,Pv)]))}}({fe:g,fl:n.fl,d2:n.d2,d9:e.d9,fA:e.fA,fW:e.fW,e3:c,gn:e.gn,gu:e.gu})}),e),x=u(hl,"width",Wr(p)+"px"),C=Ad(n.d_);return f($d,"div",A([u(hl,"padding","0px"),x,b]),A([w(i,f(Rd,a,A([(r=Gi(p*c),u(le,"width",Wr(r))),Nd(Gi(m*c)),x,b,u(hl,"display","block"),u(hl,"background-color",C)]),h))]))})),cm={b4:.31271,b5:.32902},lm=r((function(n,e){var r=n,t=e.fu,o=t.b4,a=t.b5,i=t.a4,c=u(Id,e.c0,e.cP);return{cb:Ev(c),fn:r,ch:jv(c),du:0,cy:kv(c),dN:1,b4:-o,b5:-a,a4:-i}})),um={$:0},fm=function(n){return function(n){for(;;){if(P(n.fP,0)&&P(n.fQ,0))return Gv;if(!u(Vu,Gu(n.fP),Gu(n.fQ))){var e=Cc(n.fQ/pu),r=Cc(n.fP/pu),t=n.gp,o=t.b4,a=t.b5,i=t.a4,c=u(Id,1,n.cP);return{cb:r*Ev(c),fn:!1,ch:r*jv(c),du:e/r,cy:r*kv(c),dN:3,b4:o,b5:a,a4:i}}n={cP:n.cP,fP:n.fQ,fQ:n.fP,gp:hf(n.gp)}}}({cP:n.cP,fP:n.c0,fQ:0,gp:n.gp})},sm=t((function(n,e,r){return 0>y(r,n)?n:y(r,e)>0?e:r})),dm=function(n){var e=f(sm,1667,25e3,n),r=e>4e3?-3025846900/(e*e*e)+2107037.9/(e*e)+.2226347*1e3/e+.24039:-266123900.00000003/(e*e*e)-.2343589*1e6/(e*e)+877.6956/e+.17991;return{b4:r,b5:e>2222?e>4e3?r*r*r*3.081758-r*r*5.8733867+3.75112997*r-.37001483:r*r*r*-.9549476-r*r*1.37418593+2.09137015*r-.16748867:r*r*r*-1.1063814-r*r*1.3481102+2.18555832*r-.20219683}},vm=dm(12e3),mm=dm(5600),bm=r((function(n,e){return{$:2,a:n,b:e}})),pm=function(n){return{$:0,a:n}},gm=function(n){return n.fn},hm=pm(Yv.a),xm=r((function(n,e){return f(Et,r((function(e,r){var t=r.a,o=r.b;return n(e)?w(u(Tr,e,t),o):w(t,u(Tr,e,o))})),w($,$),e)})),Cm=function(n){return Ud({eo:n.b4,ep:n.cy,eq:0,er:0,es:n.b5,et:n.ch,eu:0,ev:0,ew:n.a4,ex:n.cb,ey:0,ez:0,eA:n.dN,eB:n.du,eC:0,eD:0})},Pm=l((function(n,e,r,t,o,a,i,c){var l=u(xm,gm,A([n,e,r,t])),f=l.a;if(f.b){var s=N(f,l.b);if(s.b&&s.b.b&&s.b.b.b&&s.b.b.b.b&&!s.b.b.b.b.b){var d=s.a,v=s.b,m=v.a,b=v.b,p=b.a,g=b.b.a;return u(bm,u(Wt,Cm,f),{bK:u(qv,d,m),cl:u(qv,p,g),cm:u(qv,o,a),cn:u(qv,i,c)})}return hm}return pm({bK:u(qv,n,e),cl:u(qv,r,t),cm:u(qv,o,a),cn:u(qv,i,c)})})),Mm=t((function(n,e,r){return b(Pm,n,e,r,Gv,Gv,Gv,Gv,Gv)})),ym=o((function(n,e,r,t){return{$:2,a:n,b:e,c:r,d:t}})),Tm=o((function(n,e,r,t){return{$:3,a:n,b:e,c:r,d:t}})),wm=o((function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}})),Lm=o((function(n,e,r,t){return{$:6,a:n,b:e,c:r,d:t}})),Sm=o((function(n,e,r,t){return{$:7,a:n,b:e,c:r,d:t}})),Nm=o((function(n,e,r,t){return{$:5,a:n,b:e,c:r,d:t}})),$m=o((function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}})),Dm=function(n){switch(n.$){case 0:return n;case 1:return s($m,n.a,n.b,n.c,1);case 2:return s(ym,n.a,n.b,n.c,1);case 3:return s(Tm,n.a,n.b,n.c,1);case 4:return s(wm,n.a,n.b,n.c,1);case 5:return s(Nm,n.a,n.b,n.c,1);case 6:return s(Lm,n.a,n.b,n.c,1);case 7:return s(Sm,n.a,n.b,n.c,1);case 8:case 9:default:return n}},zm={$:0},Am=l((function(n,e,r,t,o,a,i,c){for(;;){if(!c.b)return{eF:e,eG:t,eH:a,eI:n,eJ:r,eK:o};var l=c.b,f=i(c.a);n=u(Av,f.eI,n),e=u(Dv,f.eF,e),r=u(Av,f.eJ,r),t=u(Dv,f.eG,t),o=u(Av,f.eK,o),a=u(Dv,f.eH,a),i=i,c=l}})),_m=t((function(n,e,r){var t=n(e);return b(Am,t.eI,t.eF,t.eJ,t.eG,t.eK,t.eH,n,r)})),Bm=r((function(n,e){return 1>y(e,n)})),Rm=function(n){return u(Bm,n.eF,n.eI)&&u(Bm,n.eG,n.eJ)&&u(Bm,n.eH,n.eK)?n:{eF:u(Dv,n.eI,n.eF),eG:u(Dv,n.eJ,n.eG),eH:u(Dv,n.eK,n.eH),eI:u(Av,n.eI,n.eF),eJ:u(Av,n.eJ,n.eG),eK:u(Av,n.eK,n.eH)}},Vm=function(n){return n},Fm=function(n){var e=n.a,r=n.b,t=n.c,o=Af(e),a=Bf(e),i=Rf(e),c=Af(r),l=Bf(r),f=Rf(r),s=Af(t),d=Bf(t),v=Rf(t);return Rm({eF:u(Dv,o,u(Dv,c,s)),eG:u(Dv,a,u(Dv,l,d)),eH:u(Dv,i,u(Dv,f,v)),eI:u(Av,o,u(Av,c,s)),eJ:u(Av,a,u(Av,l,d)),eK:u(Av,i,u(Av,f,v))})},km=function(n){return new Float64Array([n.b4,n.b5,n.a4])},jm=function(n){return km(n)},Em=function(n){return km(n)},Wm=r((function(n,e){var r=n,t=e,o=u(st,Cc(t.b4),u(st,Cc(t.b5),Cc(t.a4)));if(o){var a=t.a4/o,i=t.b5/o,c=t.b4/o,l=Du(c*c+i*i+a*a);return{b4:r*c/l,b5:r*i/l,a4:r*a/l}}return Eu}))(1),Im=t((function(n,e,r){return Wm(u(Au,u(Bu,e,r),u(Bu,n,e)))})),Hm=function(n){var e=n.a,r=n.b,t=n.c,o=Em(f(Im,e,r,t));return L({s:o,cw:jm(e)},{s:o,cw:jm(r)},{s:o,cw:jm(t)})},Um=r((function(n,e){return{$:2,a:n,b:e}}))({d6:3,ef:0,eM:4}),Om=t((function(n,e,r){return{b4:n,b5:e,a4:r}})),Gm=(Eo=u(ef,-.5,1),Wo=u(ef,-.5,1),Ho=f(Om,Io=u(ef,-.5,1),Wo,Eo),Oo=f(Om,Io,Wo,Uo=u(ef,.5,1)),qo=f(Om,Io,Go=u(ef,.5,1),Eo),Yo=f(Om,Io,Go,Uo),Xo=f(Om,Ko=u(ef,.5,1),Wo,Eo),Zo=f(Om,Ko,Go,Eo),Jo=f(Om,Ko,Wo,Uo),Qo=f(Om,Ko,Go,Uo),Dm(function(n){if(n.b){var e=n.a,r=n.b,t=Um(u(Wt,Hm,n));return s(ym,f(_m,Fm,e,r),n,t,0)}return zm}(A([f(vd,Ho,Zo,Xo),f(vd,Ho,qo,Zo),f(vd,Oo,Jo,Qo),f(vd,Oo,Qo,Yo),f(vd,Xo,Zo,Qo),f(vd,Xo,Qo,Jo),f(vd,Ho,Yo,qo),f(vd,Ho,Oo,Yo),f(vd,Ho,Xo,Jo),f(vd,Ho,Jo,Oo),f(vd,qo,Qo,Zo),f(vd,qo,Yo,Qo)])))),qm={$:0},Ym=t((function(n,e,r){return{$:1,a:n,b:e,c:r}})),Km=t((function(n,e,r){var t=e.a,o=e.b,a=n(e.c),i=n(o),c=n(t),l=Em(f(Im,c,i,a)),s={s:l,cw:jm(c)},d={s:l,cw:jm(i)},v={s:l,cw:jm(a)};return u(Tr,s,u(Tr,d,u(Tr,v,r)))})),Xm=function(n){return n.J},Zm=o((function(n,e,r,t){return 1===e.$||1===r.$||1===t.$?jr:kr(f(n,e.a,r.a,t.a))})),Jm=4294967295>>>32-at,Qm=h,nb=t((function(n,e,r){for(;;){var t=u(Qm,Jm&e>>>n,r);if(t.$)return u(Qm,Jm&e,t.a);n-=at,e=e,r=t.a}})),eb=r((function(n,e){var r=e.a,t=e.b,o=e.c,a=e.d;return 0>n||y(n,r)>-1?jr:y(n,function(n){return n>>>5<<5}(r))>-1?kr(u(Qm,Jm&n,a)):kr(f(nb,t,n,o))})),rb=function(n){return n.aB},tb=r((function(n,e){return u(eb,n,rb(e))})),ob=t((function(n,e,r){for(;;){var t=u(vt,Qr,n),o=t.a,a=t.b;if(0>y(ft(o),Qr))return u(pt,!0,{E:e,o:r,u:o});n=a,e=u(Tr,lt(o),e),r+=1}})),ab=function(n){return n.b?f(ob,n,$,0):it},ib=r((function(n,e){return!u(Tc,u(bo,yc,n),e)})),cb=r((function(n,e){return f(Et,r((function(e,r){return n(e)?u(Tr,e,r):r})),$,e)})),lb=r((function(n,e){var r=function(n){return n.a}(n),t=function(n){var e=n.a,t=n.b,o=n.c;return e>=0&&0>y(e,r)&&t>=0&&0>y(t,r)&&o>=0&&0>y(o,r)};return u(ib,t,e)?{J:e,aB:n}:{J:u(cb,t,e),aB:n}})),ub=t((function(n,e,r){return{$:3,a:n,b:e,c:r}}))({d6:1,ef:3,eM:4}),fb=r((function(n,e){var r=e;return w(L(n.b4,n.b5,n.a4),L(r.b4,r.b5,r.a4))})),sb=r((function(n,e){n:for(;;){if(-2===e.$)return jr;var r=e.c,t=e.d,o=e.e;switch(u(wo,n,e.b)){case 0:n=n,e=t;continue n;case 1:return kr(r);default:n=n,e=o;continue n}}})),db=f(Wd,0,0,0),vb=i((function(n,e,r,t,o,a){var i=a.a,c=a.b,l=a.c,f=u(sb,u(fb,n,e),o);if(f.$){var s={s:db,cw:jm(e)},d={s:db,cw:jm(n)},v=l+1;return L(u(Tr,L(r,l,v),u(Tr,L(r,v,t),i)),u(Tr,s,u(Tr,d,c)),l+2)}return L(u(Tr,L(r,f.a,t),i),c,l)})),mb=a((function(n,e,r,t,o){for(;;){if(!r.b)return w(o.a,Zr(o.b));var a=r.a,i=a.a,c=a.b,l=r.b,u=n(a.c),f=n(c),s=n(i),d=t+2,m=t+1,b=n,p=e,g=l,h=t+3,x=v(vb,u,s,d,t,e,v(vb,f,u,m,d,e,v(vb,s,f,t,m,e,o)));n=b,e=p,r=g,t=h,o=x}})),bb=a((function(n,e,r,t,o){for(;;){if(!e.b)return L(t,o,r);var a=e.a,i=a.a,c=a.b,l=e.b,s=n(a.c),d=n(c),v=n(i),m=r+2,b=r+1,p=r,g=f(So,u(fb,v,s),m,f(So,u(fb,s,d),b,f(So,u(fb,d,v),p,o)));n=n,e=l,r+=3,t=u(Tr,L(p,b,m),t),o=g}})),pb=t((function(n,e,r){var o,a=u(Vo,(function(n){var e=n.a,r=n.b,a=n.c;return s(Zm,t((function(n,e,r){return L(n,e,r)})),u(tb,e,o),u(tb,r,o),u(tb,a,o))}),Xm(o=r)),i=f(Et,Km(e),$,a),c=d(bb,e,a,0,$,Co),l=d(mb,e,c.b,a,0,L(c.a,$,c.c)),v=l.a,m=l.b,b=m.b?N(i,m):i;return f(Ym,n,u(lb,ab(b),v),u(ub,b,v))})),gb=function(n){return{J:u(Wt,(function(n){return L(3*n,3*n+1,3*n+2)}),u(Yr,0,Or(n)-1)),aB:ab(Ld(u(Wt,(function(n){return A([n.a,n.b,n.c])}),n)))}},hb=function(n){switch(n.$){case 0:return qm;case 1:case 2:return f(pb,n.a,zt,gb(u(Wt,Vm,n.b)));case 3:return f(pb,n.a,zt,n.b);case 4:case 5:case 6:case 7:return f(pb,n.a,(function(n){return n.cw}),n.b);case 8:case 9:default:return qm}},xb=hb(Gm),Cb={$:0},Pb=Cb,Mb=r((function(n,e){return{$:1,a:n,b:e}})),yb={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void main () {\n            gl_FragColor = texture2D(colorTexture, interpolatedUv);\n        }\n    ",attributes:{},uniforms:{colorTexture:"ce"}},Tb=function(n){return{$:5,a:n}},wb=Tb(1029),Lb=Tb(1028),Sb=t((function(n,e,r){return 1===e?u(Tr,n?wb:Lb,r):r})),Nb={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute mediump vec2 uv;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedUv = uv;\n        }\n    ",attributes:{position:"cw",uv:"S"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},$b=o((function(n,e,r,t){return u(Mb,e,l((function(e,o,a,i,c,l,u,s){return d(rv,f(Sb,i,t,s),Nb,yb,r,{ce:n,c:a,d:o,e:l,f:e,g:c})})))})),Db={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        \n        void main () {\n            gl_FragColor = vec4(constantColor, 1.0);\n        }\n    ",attributes:{},uniforms:{constantColor:"aR"}},zb={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{position:"cw"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},Ab=o((function(n,e,r,t){return u(Mb,e,l((function(e,o,a,i,c,l,u,s){return d(rv,f(Sb,i,t,s),zb,Db,r,{aR:n,c:a,d:o,e:l,f:e,g:c})})))})),_b=r((function(n,e){return{$:3,a:n,b:e}})),Bb={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(constantColor, alpha);\n        }\n    ",attributes:{},uniforms:{constantColor:"aR",pointRadius:"cv",sceneProperties:"f"}},Rb={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform lowp float pointRadius;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            float supersampling = sceneProperties[3][0];\n            gl_PointSize = 2.0 * pointRadius * supersampling + 2.0;\n        }\n    ",attributes:{position:"cw"},uniforms:{modelMatrix:"c",modelScale:"d",pointRadius:"cv",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},Vb=o((function(n,e,r,t){return u(_b,r,l((function(r,o,a,i,c,l,u,f){return d(rv,f,Rb,Bb,t,{aR:n,c:a,d:o,cv:e,e:l,f:r,g:c})})))})),Fb={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"a9",sceneProperties:"f"}},kb=Mr,jb=a((function(n,e,r,t,o){return u(Mb,r,l((function(r,a,i,c,l,s,v,m){return d(rv,f(Sb,c,o,m),zb,Fb,t,{a9:u(kb,e,n),c:i,d:a,e:s,f:r,g:l})})))})),Eb={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            vec4 color = toSrgb(emissiveColor, sceneProperties);\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(color.rgb, alpha);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"a9",pointRadius:"cv",sceneProperties:"f"}},Wb=a((function(n,e,r,t,o){return u(_b,t,l((function(t,a,i,c,l,f,s,v){return d(rv,v,Rb,Eb,o,{a9:u(kb,e,n),c:i,d:a,cv:r,e:f,f:t,g:l})})))})),Ib={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 materialColor;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"Z",lights12:"bK",lights34:"cl",lights56:"cm",lights78:"cn",materialColor:"db",sceneProperties:"f",viewMatrix:"g"}},Hb={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{normal:"s",position:"cw"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},Ub=o((function(n,e,r,t){return u(Mb,e,l((function(e,o,a,i,c,l,u,s){var v=u.a,m=u.b;return d(rv,f(Sb,i,t,s),Hb,Ib,r,{Z:m,bK:v.bK,cl:v.cl,cm:v.cm,cn:v.cn,db:n,c:a,d:o,e:l,f:e,g:c})})))})),Ob={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D materialColorTexture;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n            vec3 materialColor = fromSrgb(texture2D(materialColorTexture, interpolatedUv).rgb);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"Z",lights12:"bK",lights34:"cl",lights56:"cm",lights78:"cn",materialColorTexture:"dc",normalMapTexture:"bh",sceneProperties:"f",useNormalMap:"bq",viewMatrix:"g"}},Gb={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        attribute mediump vec2 uv;\n        attribute highp vec3 tangent;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getWorldTangent(vec3 modelTangent, vec4 modelScale, mat4 modelMatrix) {\n            return (modelMatrix * vec4(safeNormalize(modelScale.xyz * modelTangent), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = uv;\n            interpolatedTangent = getWorldTangent(tangent, modelScale, modelMatrix);\n        }\n    ",attributes:{normal:"s",position:"cw",tangent:"e5",uv:"S"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},qb=i((function(n,e,r,t,o,a){return u(Mb,t,l((function(t,i,c,l,u,s,v,m){var b=v.a,p=v.b;return d(rv,f(Sb,l,a,m),Gb,Ob,o,{Z:p,bK:b.bK,cl:b.cl,cm:b.cm,cn:b.cn,dc:n,c:c,d:i,bh:e,e:s,f:t,bq:r,g:u})})))})),Yb={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D baseColorTexture;\n        uniform lowp vec4 constantBaseColor;\n        uniform mediump sampler2D roughnessTexture;\n        uniform lowp vec2 constantRoughness;\n        uniform mediump sampler2D metallicTexture;\n        uniform lowp vec2 constantMetallic;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getFloatValue(sampler2D texture, vec2 uv, vec2 constantValue) {\n            if (constantValue.y == 1.0) {\n                return constantValue.x;\n            } else {\n                vec4 textureColor = texture2D(texture, uv);\n                return dot(textureColor, vec4(0.2126, 0.7152, 0.0722, 0.0));\n            }\n        }\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 baseColor = fromSrgb(texture2D(baseColorTexture, interpolatedUv).rgb) * (1.0 - constantBaseColor.w) + constantBaseColor.rgb * constantBaseColor.w;\n            float roughness = getFloatValue(roughnessTexture, interpolatedUv, constantRoughness);\n            float metallic = getFloatValue(metallicTexture, interpolatedUv, constantMetallic);\n        \n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColorTexture:"cN",constantBaseColor:"cS",constantMetallic:"cT",constantRoughness:"cU",enabledLights:"Z",lights12:"bK",lights34:"cl",lights56:"cm",lights78:"cn",metallicTexture:"df",normalMapTexture:"bh",roughnessTexture:"dE",sceneProperties:"f",useNormalMap:"bq",viewMatrix:"g"}},Kb={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 baseColor;\n        uniform lowp float roughness;\n        uniform lowp float metallic;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColor:"cM",enabledLights:"Z",lights12:"bK",lights34:"cl",lights56:"cm",lights78:"cn",metallic:"de",roughness:"dD",sceneProperties:"f",viewMatrix:"g"}},Xb=i((function(n,e,r,t,o,a){return u(Mb,t,l((function(t,i,c,l,u,s,v,m){var b=v.a,p=v.b;return d(rv,f(Sb,l,a,m),Hb,Kb,o,{cM:n,Z:p,bK:b.bK,cl:b.cl,cm:b.cm,cn:b.cn,de:r,c:c,d:i,e:s,dD:e,f:t,g:u})})))})),Zb=r((function(n,e){return{$:1,a:n,b:e}})),Jb=r((function(n,e){return e.$?w(e.a.H,1):w(n,0)})),Qb=s(Vd,0,0,0,0),np=r((function(n,e){var r;return e.$?w(e.a.H,Qb):w(n,s(Vd,kv(r=e.a),jv(r),Ev(r),1))})),ep=r((function(n,e){var r,t=w(n,e);return t.a.$?u(Zb,w(r=t.a.a.H,Qb),u(Jb,r,e)):t.b.$?u(Zb,u(np,r=t.b.a.H,n),u(Jb,r,e)):{$:0,a:t.a.a}})),rp=t((function(n,e,r){return{$:0,a:n,b:e,c:r}})),tp=o((function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}})),op=o((function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}})),ap=u(av,0,0),ip=r((function(n,e){return e.$?w(e.a.H,ap):w(n,u(av,e.a,1))})),cp=o((function(n,e,r,t){var o,a=s(op,n,e,r,t);return a.a.$?s(tp,w(o=a.a.a.H,Qb),u(ip,o,e),u(ip,o,r),u(Jb,o,t)):a.b.$?s(tp,u(np,o=a.b.a.H,n),w(o,ap),u(ip,o,r),u(Jb,o,t)):a.c.$?s(tp,u(np,o=a.c.a.H,n),u(ip,o,e),w(o,ap),u(Jb,o,t)):a.d.$?s(tp,u(np,o=a.d.a.H,n),u(ip,o,e),u(ip,o,r),w(o,1)):f(rp,a.a.a,a.b.a,a.c.a)})),lp={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        uniform mediump float backlight;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            vec3 emissiveColor = fromSrgb(texture2D(colorTexture, interpolatedUv).rgb) * backlight;\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{backlight:"cI",colorTexture:"ce",sceneProperties:"f"}},up=a((function(n,e,r,t,o){return u(Mb,r,l((function(r,a,i,c,l,u,s,v){return d(rv,f(Sb,c,o,v),Nb,lp,t,{cI:e,ce:n,c:i,d:a,e:u,f:r,g:l})})))})),fp={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        attribute mediump vec2 uv;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = uv;\n            interpolatedTangent = vec3(0.0, 0.0, 0.0);\n        }\n    ",attributes:{normal:"s",position:"cw",uv:"S"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},sp=o((function(n,e,r,t){return u(Mb,e,l((function(e,o,a,i,c,l,u,s){var v=u.a,m=u.b;return d(rv,f(Sb,i,t,s),fp,Ob,r,{Z:m,bK:v.bK,cl:v.cl,cm:v.cm,cn:v.cn,dc:n,c:a,d:o,bh:n,e:l,f:e,bq:0,g:c})})))})),dp=function(n){return e(9,n,(function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){return n(e,r,t,o,a,i,c,l,u)}}}}}}}}}))}((function(n,e,r,t,o,a,i,c,s){return u(Mb,i,l((function(i,l,u,v,m,b,p,g){var h=p.a,x=p.b;return d(rv,f(Sb,v,s,g),fp,Yb,c,{cN:n,cS:e,cT:a,cU:t,Z:x,bK:h.bK,cl:h.cl,cm:h.cm,cn:h.cn,df:o,c:u,d:l,bh:n,e:b,dE:r,f:i,bq:0,g:m})})))})),vp=t((function(n,e,r){return r>.5?e+(1-r)*(n-e):n+r*(e-n)})),mp=function(n){return f(Om,function(n){return f(vp,n.eI,n.eF,.5)}(n),function(n){return f(vp,n.eJ,n.eG,.5)}(n),function(n){return f(vp,n.eK,n.eH,.5)}(n))},bp=function(n){var e=wv(n),r=e.a,t=e.b,o=e.c;return{fo:mp(n),fG:r/2,fH:t/2,fI:o/2}},pp=r((function(n,e){switch(n.$){case 0:if(n.b.$){var r=n.b.a.H;switch(e.$){case 0:case 1:case 2:case 3:case 4:return Pb;case 5:case 6:case 7:return o=e.c,a=e.d,s($b,r,bp(R=e.a),o,a);case 8:case 9:default:return Pb}}else{var t=n.b.a;switch(e.$){case 0:return Pb;case 1:var o=e.c,a=e.d;return s(Ab,t,bp(R=e.a),o,a);case 2:case 3:case 4:return o=e.c,a=e.d,s(Ab,t,bp(R=e.a),o,a);case 5:case 6:case 7:return o=e.c,a=e.d,s(Ab,t,bp(R=e.a),o,a);case 8:case 9:return o=e.c,s(Ab,t,bp(R=e.a),o,0);default:return o=e.d,s(Vb,t,e.b,bp(R=e.a),o)}}case 1:if(n.b.$)switch(r=n.b.a.H,c=n.c,e.$){case 0:case 1:case 2:case 3:case 4:return Pb;case 5:case 6:case 7:return o=e.c,a=e.d,d(up,r,c,bp(R=e.a),o,a);case 8:case 9:default:return Pb}else{var i=n.b.a,c=n.c;switch(e.$){case 0:return Pb;case 1:case 2:case 3:case 4:case 5:case 6:case 7:return o=e.c,a=e.d,d(jb,i,c,bp(R=e.a),o,a);case 8:case 9:return o=e.c,d(jb,i,c,bp(R=e.a),o,0);default:return o=e.d,d(Wb,i,c,e.b,bp(R=e.a),o)}}case 2:var m=u(ep,n.b,n.c);if(m.$){var b=m.a.a,p=m.b,g=p.a,h=p.b;switch(e.$){case 0:case 1:case 2:case 3:case 4:case 5:return Pb;case 6:return o=e.c,C=e.d,s(sp,b,bp(R=e.a),o,C);case 7:return o=e.c,C=e.d,v(qb,b,g,h,bp(R=e.a),o,C);case 8:case 9:default:return Pb}}else{var x=m.a;switch(e.$){case 0:case 1:return Pb;case 2:o=e.c;var C=e.d;return s(Ub,x,bp(R=e.a),o,C);case 3:return Pb;case 4:return o=e.c,C=e.d,s(Ub,x,bp(R=e.a),o,C);case 5:return Pb;case 6:case 7:return o=e.c,C=e.d,s(Ub,x,bp(R=e.a),o,C);case 8:case 9:default:return Pb}}default:var P=s(cp,n.b,n.c,n.d,n.e);if(P.$){var M=P.a,y=M.a,T=M.b,w=P.b,L=w.a,S=w.b,N=P.c,$=N.a,D=N.b,z=P.d;switch(g=z.a,h=z.b,e.$){case 0:case 1:case 2:case 3:case 4:case 5:return Pb;case 6:return o=e.c,a=e.d,function(n,e,r,t,o,a,i,c,l,u){return 9===n.a?n.f(e,r,t,o,a,i,c,l,u):n(e)(r)(t)(o)(a)(i)(c)(l)(u)}(dp,y,T,L,S,$,D,bp(R=e.a),o,a);case 7:return R=e.a,o=e.c,a=e.d,function(n){return function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(s){return function(v){return function(m){return u(Mb,s,l((function(l,u,s,b,p,g,h,x){var C=h.a,P=h.b;return d(rv,f(Sb,b,m,x),Gb,Yb,v,{cN:n,cS:e,cT:a,cU:t,Z:P,bK:C.bK,cl:C.cl,cm:C.cm,cn:C.cn,df:o,c:s,d:u,bh:i,e:g,dE:r,f:l,bq:c,g:p})})))}}}}}}}}}}}(y)(T)(L)(S)($)(D)(g)(h)(bp(R))(o)(a);case 8:case 9:default:return Pb}}else{var A=P.a,_=P.b,B=P.c;switch(e.$){case 0:case 1:return Pb;case 2:return o=e.c,a=e.d,v(Xb,A,_,B,bp(R=e.a),o,a);case 3:return Pb;case 4:return o=e.c,a=e.d,v(Xb,A,_,B,bp(R=e.a),o,a);case 5:return Pb;case 6:return o=e.c,a=e.d,v(Xb,A,_,B,bp(R=e.a),o,a);case 7:var R;return o=e.c,a=e.d,v(Xb,A,_,B,bp(R=e.a),o,a);case 8:case 9:default:return Pb}}}})),gp=function(n){return n.b4},hp=function(n){return n.b5},xp=function(n){return n.a4},Cp=function(n){var e=n,r=xp(e.dX),t=hp(e.dX),o=gp(e.dX),a=xp(e.dW),i=hp(e.dW),c=gp(e.dW),l=xp(e.dV),u=hp(e.dV),f=gp(e.dV);return f*i*r+u*a*o+l*c*t-l*i*o-u*c*r-f*a*t>0},Pp=r((function(n,e){return{$:5,a:n,b:e}})),Mp=r((function(n,e){var r=e;switch(r.$){case 0:return Pb;case 5:var t=r.b;return u(Pp,u(Hd,r.a,n),t);case 1:case 3:case 2:default:return u(Pp,n,r)}})),yp=r((function(n,e){return u(Mp,function(n){var e=sf(n),r=xf(n),t=ws(n),o=Ts(n);return{eg:Cp(n),v:o.b4,w:o.b5,x:o.a4,y:t.b4,z:t.b5,A:t.a4,B:r.b4,C:r.b5,D:r.a4,O:e.b4,P:e.b5,Q:e.a4,cA:1}}(n),e)})),Tp=function(n){return{$:2,a:n}},wp=r((function(n,e){var r=n.a,t=n.b,o=n.c,a=e.fo;return{fo:{b4:r*a.b4,b5:t*a.b5,a4:o*a.a4},fG:r*e.fG,fH:t*e.fH,fI:o*e.fI}})),Lp=function(n){return function(e){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){var f,s,d={b4:(s=t)[0],b5:s[1],a4:s[2],fa:s[3]},v=(f={fa:d.fa,b4:d.b4*n.a,b5:d.b5*n.b,a4:d.a4*n.c},new Float64Array([f.b4,f.b5,f.a4,f.fa]));return b(e,r,v,o,a,i,c,l,u)}}}}}}}}}},Sp=r((function(n,e){switch(e.$){case 0:return Cb;case 5:return u(Pp,e.a,u(Sp,n,e.b));case 1:var r=e.b;return u(Mb,u(wp,n,e.a),u(Lp,n,r));case 3:return e;case 2:return Tp(u(Lp,n,r=e.a));default:var t=e.a;return Wv(u(Wt,Sp(n),t))}})),Np=r((function(n,e){return u(Sp,n,e)})),$p={src:"\n        precision lowp float;\n        \n        void main () {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    ",attributes:{},uniforms:{}},Dp=f(uv,{da:0,dA:0,dU:15},{bB:vv,bW:Qd,b6:vv,b7:7683},{bB:vv,bW:Qd,b6:vv,b7:7682}),zp=f(uv,{da:0,dA:0,dU:15},{bB:vv,bW:Qd,b6:vv,b7:7682},{bB:vv,bW:Qd,b6:vv,b7:7683}),Ap=r((function(n,e){return u(Tr,n?zp:Dp,e)})),_p={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{normal:"s",position:"cw"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",shadowLight:"cB",viewMatrix:"g"}},Bp=function(n){var e=function(n){if(n.$){var e=n.c;return kr(l((function(n,r,t,o,a,i,c,l){return d(rv,u(Ap,o,l),_p,$p,e,{c:t,d:r,e:i,f:n,cB:c,g:a})})))}return jr}(n);return e.$?Pb:Tp(e.a)},Rp=o((function(n,e,r,t){var o,a=u(pp,r,Gm),i=(o=w(n,e)).a?o.b?Hv(A([a,Bp(xb)])):a:o.b?Bp(xb):Pb,c=ys(t),l=c.a,f=c.b,s=c.c;return u(yp,Ms(t),u(Np,L(l,f,s),i))})),Vp=r((function(n,e){return s(Rp,!0,!0,n,e)})),Fp=function(n){return{$:0,a:n}},kp=r((function(n,e){return{$:0,a:n,b:e}})),jp=function(n){return Lf(n)},Ep=r((function(n,e){var r=n.cw;return u(Tr,{s:Em(n.s),cw:jm(r)},e)})),Wp=c((function(n,e,r,t,o,a,i){for(;;){if(!i.b)return Rm({eF:e,eG:t,eH:a,eI:n,eJ:r,eK:o});var c=i.a,l=i.b,f=Ev(c.cw),s=jv(c.cw),d=kv(c.cw);n=u(zv,n,d),e=u(st,e,d),r=u(zv,r,s),t=u(st,t,s),o=u(zv,o,f),a=u(st,a,f),i=l}})),Ip=r((function(n,e){var r=Ev(n.cw),t=jv(n.cw),o=kv(n.cw);return m(Wp,o,o,t,t,r,r,e)})),Hp=r((function(n,e){var r=n.dW,t=n.dV;return{b4:e.b4*t.b4+e.b5*r.b4,b5:e.b4*t.b5+e.b5*r.b5,a4:e.b4*t.a4+e.b5*r.a4}})),Up=function(n){return Sf(n)},Op=function(n){return 6.283185307179586*n},Gp={dj:Ou,dV:nm,dW:em},qp=(na=u(ff,72,Op(1)),ea=Wf,ra=mf,oa=f(Om,0,0,ta=u(ef,.5,1)),ia=f(Om,0,0,aa=u(ef,-.5,1)),Dm(function(n){var e=f(Lr,Ep,$,rb(n));if(e.b){var r=e.a,t=e.b,o=u(ub,e,Xm(n));return s(wm,u(Ip,r,t),n,o,0)}return zm}(gb(Ld(u(Wt,(function(n){var e=u(ef,n,na),r=u(Hp,Gp,Nf(e)),t=u(ef,jp(e),1),o=u(ef,Up(e),1),a=f(Om,t,o,ta),i=f(Om,t,o,aa),c=u(ef,u(mc,72,n+1),na),l=u(Hp,Gp,Nf(c)),s=u(ef,jp(c),1),d=u(ef,Up(c),1),v=f(Om,s,d,aa),m=f(Om,s,d,ta);return A([L({s:ra,cw:ia},{s:ra,cw:v},{s:ra,cw:i}),L({s:r,cw:i},{s:l,cw:v},{s:l,cw:m}),L({s:r,cw:i},{s:l,cw:m},{s:r,cw:a}),L({s:ea,cw:oa},{s:ea,cw:a},{s:ea,cw:m})])}),u(Yr,0,71))))))),Yp=hb(qp),Kp=o((function(n,e,r,t){var o,a=function(n){var e=nf(n),r=Iu(e),t=r.a,o=r.b;return{dj:rf(n),dV:t,dW:o,dX:e}}(rd(t)),i=u(pp,r,qp),c=(o=w(n,e)).a?o.b?Hv(A([i,Bp(Yp)])):i:o.b?Bp(Yp):Pb,l=ad(t),f=od(t);return u(yp,a,u(Np,L(l,l,f),c))})),Xp=r((function(n,e){return s(Kp,!0,!0,n,e)})),Zp={src:"\n        precision highp float;\n        \n        attribute lowp float triangleVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 triangleVertexPositions;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleVertex), triangleVertexPositions, position, normal);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{triangleVertex:"dM"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",triangleVertexPositions:"b0",viewMatrix:"g"}},Jp={src:"\n        precision highp float;\n        \n        attribute lowp float triangleVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 triangleVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleVertex), triangleVertexPositions, position, normal);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{triangleVertex:"dM"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",triangleVertexPositions:"b0",viewMatrix:"g"}},Qp=function(n){var e=n.a,r=n.b,t=n.c;return Ud({eo:e.b4,ep:r.b4,eq:t.b4,er:0,es:e.b5,et:r.b5,eu:t.b5,ev:0,ew:e.a4,ex:r.a4,ey:t.a4,ez:0,eA:0,eB:0,eC:0,eD:0})},ng=Um(A([L({dM:0},{dM:1},{dM:2})])),eg=r((function(n,e){var r=Fm(e),t=bp(r);switch(n.$){case 0:if(n.b.$)return Pb;var o=n.b.a;return u(Mb,t,l((function(n,r,t,a,i,c,l,u){return d(rv,f(Sb,a,0,u),Zp,Db,ng,{aR:o,c:t,d:r,e:c,f:n,b0:Qp(e),g:i})})));case 1:if(n.b.$)return Pb;var a=n.b.a,i=n.c;return u(Mb,t,l((function(n,r,t,o,c,l,s,v){return d(rv,f(Sb,o,0,v),Zp,Fb,ng,{a9:u(kb,i,a),c:t,d:r,e:l,f:n,b0:Qp(e),g:c})})));case 2:var c=u(ep,n.b,n.c);if(c.$)return Pb;var v=c.a;return u(Mb,t,l((function(n,r,t,o,a,i,c,l){var u=c.a,s=c.b;return d(rv,f(Sb,o,0,l),Jp,Ib,ng,{Z:s,bK:u.bK,cl:u.cl,cm:u.cm,cn:u.cn,db:v,c:t,d:r,e:i,f:n,b0:Qp(e),g:a})})));default:var m=s(cp,n.b,n.c,n.d,n.e);if(m.$)return Pb;var b=m.a,p=m.b,g=m.c;return u(Mb,t,l((function(n,r,t,o,a,i,c,l){var u=c.a,s=c.b;return d(rv,f(Sb,o,0,l),Jp,Kb,ng,{cM:b,Z:s,bK:u.bK,cl:u.cl,cm:u.cm,cn:u.cn,de:g,c:t,d:r,e:i,dD:p,f:n,b0:Qp(e),g:a})})))}})),rg=(ca=A([{bp:u(av,0,1)},{bp:u(av,1,1)},{bp:u(av,2,1)},{bp:u(av,0,-1)},{bp:u(av,1,-1)},{bp:u(av,2,-1)}]),la=A([L(0,1,2),L(3,5,4),L(3,4,1),L(3,1,0),L(4,5,2),L(4,2,1),L(5,3,0),L(5,0,2)]),u(ub,ca,la)),tg={src:"\n        precision highp float;\n        \n        attribute highp vec2 triangleShadowVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        uniform highp mat4 triangleVertexPositions;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleShadowVertex.x), triangleVertexPositions, position, normal);\n            normal *= triangleShadowVertex.y;\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{triangleShadowVertex:"bp"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",shadowLight:"cB",triangleVertexPositions:"b0",viewMatrix:"g"}},og=function(n){return Tp(l((function(e,r,t,o,a,i,c,l){return d(rv,u(Ap,o,l),tg,$p,rg,{c:t,d:r,e:i,f:e,cB:c,b0:Qp(n),g:a})})))},ag=o((function(n,e,r,t){var o=u(eg,r,t),a=w(n,e);return a.a?a.b?Hv(A([o,og(t)])):o:a.b?og(t):Pb})),ig=r((function(n,e){return s(ag,!0,!0,n,e)})),cg=r((function(n,e){var r=Rf(e),t=Rf(n),o=Bf(e),a=Bf(n),i=Af(e),c=Af(n);return{eF:u(Dv,c,i),eG:u(Dv,a,o),eH:u(Dv,t,r),eI:u(Av,c,i),eJ:u(Av,a,o),eK:u(Av,t,r)}})),lg={src:"\n        precision highp float;\n        \n        attribute lowp float lineSegmentVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp vec3 lineSegmentStartPoint;\n        uniform highp vec3 lineSegmentEndPoint;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = (1.0 - lineSegmentVertex) * lineSegmentStartPoint + lineSegmentVertex * lineSegmentEndPoint;\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{lineSegmentVertex:"en"},uniforms:{lineSegmentEndPoint:"el",lineSegmentStartPoint:"em",modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},ug=r((function(n,e){return{$:1,a:n,b:e}}))({d6:2,ef:0,eM:1})(A([w({en:0},{en:1})])),fg=r((function(n,e){var r,t=u(cg,(r=e).a,r.b),o=bp(t),a=e.a,i=e.b;switch(n.$){case 0:if(n.b.$)return Pb;var c=n.b.a;return u(Mb,o,l((function(n,e,r,t,o,l,u,f){return d(rv,f,lg,Db,ug,{aR:c,el:jm(i),em:jm(a),c:r,d:e,e:l,f:n,g:o})})));case 1:if(n.b.$)return Pb;c=n.b.a;var f=n.c;return u(Mb,o,l((function(n,e,r,t,o,l,s,v){return d(rv,v,lg,Fb,ug,{a9:u(kb,f,c),el:jm(i),em:jm(a),c:r,d:e,e:l,f:n,g:o})})));case 2:default:return Pb}})),sg=r((function(n,e){return u(fg,n,e)})),dg=t((function(n,e,r){return{$:2,a:n,b:e,c:r}})),vg=function(n){return f(sm,0,1,n>.04045?u(Oi,(n+.055)/1.055,2.4):n/12.92)},mg=function(n){return f(dg,0,Fp(function(n){var e=gc(n),r=e.c_,t=e.cO;return f(Wd,vg(e.dz),vg(r),vg(t))}(n)),Fp(0))},bg=r((function(n,e){return n/e})),pg=a((function(n,e,r,t,o){for(;;){var a=t(e/r),i=u(Tr,a,o);if(P(e,n))return i;n=n,e-=1,r=r,t=t,o=i}})),gg=r((function(n,e){return 1>n?$:d(pg,0,n,n,e,$)})),hg=r((function(n,e){var r=n.cw,t=n.S,o=t.a,a=t.b;return u(Tr,{s:Em(n.s),cw:jm(r),S:u(av,o,a)},e)})),xg=r((function(n,e){var r=n,t=e,o=Lf(t);return{b4:o*Lf(r),b5:o*Sf(r),a4:Sf(t)}})),Cg=(ua=u(Yr,0,71),fa=u(gg,72,u(vp,0,Op(1))),sa=rt(36),da=u(Yr,0,sa-1),va=u(gg,sa,u(vp,$u(90),$u(-90))),ma=ab(Ld(u(Wt,(function(n){return u(Wt,(function(e){return{s:u(xg,n,e),cw:f(Om,u(ef,jp(e)*jp(n),1),u(ef,jp(e)*Up(n),1),u(ef,Up(e),1)),S:w(u(bg,n,Op(1)),u(bg,u(Bv,$u(90),e),$u(180)))}}),va)}),fa))),ba=r((function(n,e){return n*(sa+1)+e})),pa=Ld(u(Wt,(function(n){return Ld(u(Wt,(function(e){var r=u(ba,n+1,e),t=u(ba,n,e),o=u(ba,n+1,e+1),a=u(ba,n,e+1);return A([L(a,o,r),L(a,r,t)])}),da))}),ua)),Dm(function(n){var e=f(Lr,hg,$,rb(n));if(e.b){var r=e.a,t=e.b,o=u(ub,e,Xm(n));return s(Lm,u(Ip,r,t),n,o,0)}return zm}(u(lb,ma,pa)))),Pg=r((function(n,e){for(;;){var r=u(mc,144,2*n+3),t=u(mc,144,2*n+2),o=2*n+1,a=2*n,i=u(Tr,L(144,a,t),u(Tr,L(a,r,t),u(Tr,L(a,o,r),u(Tr,L(o,145,r),e))));if(!n)return i;n-=1,e=i}})),Mg=t((function(n,e,r){return r>.5?e+(1-r)*(n-e):n+r*(e-n)})),yg=(ga=u(r((function(n,e){for(;;){var r=f(Mg,0,6.283185307179586,n/72),t=u(Tr,{b9:r,cs:0,cz:1},u(Tr,{b9:r,cs:1,cz:1},e));if(!n)return t;n-=1,e=t}})),71,A([{b9:0,cs:0,cz:0},{b9:0,cs:1,cz:0}])),u(ub,ga,u(Pg,71,$))),Tg={src:"\n        precision highp float;\n        \n        attribute highp float angle;\n        attribute highp float offsetScale;\n        attribute highp float radiusScale;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const lowp float kPerspectiveProjection = 0.0;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec3 perpendicularTo(vec3 d) {\n            float absX = abs(d.x);\n            float absY = abs(d.y);\n            float absZ = abs(d.z);\n            if (absX <= absY) {\n                if (absX <= absZ) {\n                    float scale = 1.0 / length(d.zy);\n                    return vec3(0.0, -d.z * scale, d.y * scale);\n                } else {\n                    float scale = 1.0 / length(d.xy);\n                    return vec3(-d.y * scale, d.x * scale, 0.0);\n                }\n            } else {\n                if (absY <= absZ) {\n                    float scale = 1.0 / length(d.xz);\n                    return vec3(d.z * scale, 0.0, -d.x * scale);\n                } else {\n                    float scale = 1.0 / length(d.xy);\n                    return vec3(-d.y * scale, d.x * scale, 0.0);\n                }\n            }\n        }\n        \n        void main () {\n            vec4 worldCenter = getWorldPosition(vec3(0.0, 0.0, 0.0), modelScale, modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 zDirection = getDirectionToLight(worldCenter.xyz, xyz_type, rgb_parameter);\n            vec3 xDirection = perpendicularTo(zDirection);\n            vec3 yDirection = cross(zDirection, xDirection);\n            float r = modelScale.x;\n            float adjustedRadius = r;\n            float zOffset = 0.0;\n            if (xyz_type.w == kPointLight) {\n                float distanceToLight = length(xyz_type.xyz - worldCenter.xyz);\n                float rSquared = r * r;\n                zOffset = rSquared / distanceToLight;\n                float zSquared = zOffset * zOffset;\n                adjustedRadius = sqrt(rSquared - zSquared) * radiusScale;\n            }\n            vec3 worldPosition =\n                worldCenter.xyz\n                    + zDirection * zOffset\n                    + xDirection * adjustedRadius * cos(angle)\n                    + yDirection * adjustedRadius * sin(angle);\n            vec3 directionToLight = getDirectionToLight(worldPosition, xyz_type, rgb_parameter);\n            float sceneDiameter = sceneProperties[3][1];\n            vec3 offset = -sceneDiameter * offsetScale * directionToLight;\n            vec4 offsetPosition = vec4(worldPosition + offset, 1.0);\n            gl_Position = projectionMatrix * (viewMatrix * offsetPosition);\n        }\n    ",attributes:{angle:"b9",offsetScale:"cs",radiusScale:"cz"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",shadowLight:"cB",viewMatrix:"g"}},wg=function(){return Tp(l((function(n,e,r,t,o,a,i,c){return d(rv,u(Ap,!0,c),Tg,$p,yg,{aR:f(Wd,0,0,1),c:r,d:e,e:a,f:n,cB:i,g:o})})))},Lg=r((function(n,e){return u(Mp,function(n){return{eg:!0,v:1,w:0,x:0,y:0,z:1,A:0,B:0,C:0,D:1,O:n.b4,P:n.b5,Q:n.a4,cA:1}}(n),e)})),Sg=o((function(n,e,r,t){var o,a=u(pp,r,Cg),i=(o=w(n,e)).a?o.b?Hv(A([a,wg()])):a:o.b?wg():Pb,c=_s(t);return u(Lg,u(Bu,Ou,As(t)),u(Np,L(c,c,c),i))})),Ng=r((function(n,e){return s(Sg,!0,!0,n,e)})),$g=function(n){switch(n.$){case 0:var e=n.b;return A([u(Vp,mg(n.a),e)]);case 1:var r=n.b;return A([u(ig,mg(n.a),r)]);case 3:var t=n.b;return A([u(Ng,mg(n.a),t)]);case 2:var o=n.b;return A([u(Xp,mg(n.a),o)]);case 4:var a=n.b;return A([u(sg,(i=n.a,u(kp,0,Fp(function(n){var e=gc(n);return f(Wd,e.dz,e.c_,e.cO)}(i)))),a)]);default:return u(Sd,$g,n.a)}var i},Dg=r((function(n,e){return function(n){var e,r=u(lm,n.gd,{cP:mm,fu:n.gk,c0:8e4}),t=fm({cP:vm,c0:2e4,gp:n.gp}),o=fm({cP:cm,c0:15e3,gp:hf(n.gp)}),a=f(Mm,r,t,o);return function(n){return u(im,{fc:n.fc,d_:n.d_,fl:n.fl,d2:n.d2,d5:n.d5},A([{d9:n.d9,fA:n.fA,fW:n.fW,gn:n.gn,gu:n.gu}]))}({fc:(e=n.cW,{$:2,a:e}),d_:n.d_,fl:n.fl,d2:n.d2,d5:n.d5,d9:n.d9,fA:1.2*u(Oi,2,15),fW:a,gn:um,gu:cm})}({d_:n.fg,fl:n.fl,d2:.005,cW:n.cW,d5:w(Gi(n.am.dT),Gi(n.am.c$)),d9:(r=e,u(Sd,$g,r)),gd:!0,gk:u(xg,n.gj,n.gl),gp:If});var r})),zg=r((function(n,e){return u(Dg,{fg:u(ms,as(e.l).fh,as(e.l).bN),fl:Xu(n),cW:n.cW,am:n.am,gj:gu(225),gl:gu(315)},A([xd(A([xd($),u(Cd,n,e)]))]))})),Ag=u(tl,A([u(hl,"margin","10px"),ml({$:2})]),A([Cl("Set selected color as background color")])),_g=re("h2"),Bg={$:5},Rg={$:7},Vg={$:4},Fg={$:3},kg={$:6},jg=function(n){var e=n;return 1+Or(e.n)+Or(e.G)},Eg=function(n){return u(ol,$,A([u(_g,$,A([Cl("Level Selection")])),u(Nl,$,A([u(tl,A([ml(Fg)]),A([Cl("<")])),u(Xl,A([u(hl,"margin","10px")]),A([Cl(zd(A([Wr((e=n.l,Or(function(n){return n.n}(e))+1))," / ",Wr(jg(n.l))])))])),u(tl,A([ml(Vg)]),A([Cl(">")]))])),u(ol,A([u(hl,"margin-top","10px")]),A([u(tl,A([ml(Bg)]),A([Cl("Add level")]))])),u(ol,A([u(hl,"margin-top","10px")]),A([u(tl,A([ml(kg)]),A([Cl("Remove current level")]))])),u(ol,A([u(hl,"margin-top","10px")]),A([u(tl,A([ml(Rg)]),A([Cl("Move level one up")]))]))]));var e},Wg=function(n){return{$:0,a:n}},Ig=u(Lt,(function(n){return n.l}),u(Lt,as,(function(n){return n.bN}))),Hg=function(n){switch(n){case"Inferno":return 0;case"Magma":return 1;case"Parula":return 2;case"Plasma":return 3;case"Viridis":return 4;default:return 0}},Ug=function(n){switch(n){case 0:return"Inferno";case 1:return"Magma";case 2:return"Parula";case 3:return"Plasma";default:return"Viridis"}},Og=function(n){return u(bl,A([Ml(Ug(n))]),A([Cl(Ug(n))]))},Gg=function(n){return u(ol,A([u(hl,"margin","5px")]),A([Cl("Choose a palette:"),u(pl,A([vl(u(Lt,Hg,Wg)),Ml(Ug(Ig(n)))]),u(Wt,Og,A([2,0,1,3,4])))]))},qg=r((function(n,e){var t=e.a,o=e.b,a=r((function(e,r){return u(n,e+1,r)}));return u(is,u(n,0,t),u(Kr,a,o))})),Yg=function(n){var e=as(n.l),t=r((function(e,r){var t,o=13*(e/20|0),a=13*u(mc,20,e),i=P(n.aw,e)?w(2,9):w(0,13),c=i.a,l=i.b;return u(ol,A([u(hl,"position","absolute"),u(hl,"width",Lc(l)+"px"),u(hl,"height",Lc(l)+"px"),u(hl,"background-color",Ad(r)),u(hl,"transform","translate("+Lc(a)+"px,"+Lc(o)+"px)"),ml((t=e,{$:1,a:t})),u(hl,"border","solid white "+Lc(c)+"px")]),$)}));return u(ol,A([u(hl,"position","relative"),u(hl,"overflow","scroll"),u(hl,"height","210px")]),function(n){return u(Tr,n.a,n.b)}(u(qg,t,ds(e.bN))))};ha={Main:{init:v(du,zg,Zf,hu,(function(){return{l:(n=vu,{G:$,n:$,r:n}),bf:{cD:0,cG:0},aw:0};var n}),r((function(n,e){return u(ol,A([u(hl,"margin-left","20px"),u(hl,"height","100%"),u(hl,"overflow","scroll")]),A([u(_g,$,A([Cl("Editing the selected level")])),u(ol,$,A([Cl("Press mouse to add trixel")])),u(ol,$,A([Cl("Hold shift and press mouse to remove trixel")])),u(Vl,$,$),u(_g,$,A([Cl("Color Palette")])),u(ol,$,A([Gg(e)])),u(ol,$,A([Ag])),u(ol,$,A([Cl(Wr(e.aw))])),u(ol,$,A([Yg(e)])),u(Vl,$,$),Eg(e),u(Vl,$,$),u(_g,$,A([Cl("What More?")]))]))})),os)(u(Ct,(function(n){return $t({cW:n})}),u(Pt,"devicePixelRatio",Mt)))(0)}},n.Elm?function n(e,r){for(var t in r)t in e?"init"==t?C(6):n(e[t],r[t]):e[t]=r[t]}(n.Elm,ha):n.Elm=ha}(n);const e=n.Elm.Main.init({node:document.getElementById("elm-node"),flags:{devicePixelRatio:window.devicePixelRatio}});function r(n){const e=[];for(let r=0;r<n.length;r++)e.push({identifier:n[r].identifier,pageX:n[r].pageX,pageY:n[r].pageY});return e}window.addEventListener("touchstart",(n=>{e.ports.touchStart.send(r(n.changedTouches))})),window.addEventListener("touchmove",(n=>{e.ports.touchMove.send(r(n.changedTouches))})),window.addEventListener("touchend",(n=>{e.ports.touchEnd.send(r(n.changedTouches))})),window.addEventListener("touchcancel",(n=>{e.ports.touchCancel.send(r(n.changedTouches))}))}();
//# sourceMappingURL=index.35de4143.js.map

!function(){var e={};!function(e){function n(e,n,r){return r.a=e,r.f=n,r}function r(e){return n(2,e,(function(n){return function(r){return e(n,r)}}))}function t(e){return n(3,e,(function(n){return function(r){return function(t){return e(n,r,t)}}}))}function o(e){return n(4,e,(function(n){return function(r){return function(t){return function(o){return e(n,r,t,o)}}}}))}function a(e){return n(5,e,(function(n){return function(r){return function(t){return function(o){return function(a){return e(n,r,t,o,a)}}}}}))}function i(e){return n(6,e,(function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return e(n,r,t,o,a,i)}}}}}}))}function c(e){return n(7,e,(function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return e(n,r,t,o,a,i,c)}}}}}}}))}function l(e){return n(8,e,(function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return e(n,r,t,o,a,i,c,l)}}}}}}}}))}function u(e,n,r){return 2===e.a?e.f(n,r):e(n)(r)}function f(e,n,r,t){return 3===e.a?e.f(n,r,t):e(n)(r)(t)}function s(e,n,r,t,o){return 4===e.a?e.f(n,r,t,o):e(n)(r)(t)(o)}function d(e,n,r,t,o,a){return 5===e.a?e.f(n,r,t,o,a):e(n)(r)(t)(o)(a)}function v(e,n,r,t,o,a,i){return 6===e.a?e.f(n,r,t,o,a,i):e(n)(r)(t)(o)(a)(i)}function m(e,n,r,t,o,a,i,c){return 7===e.a?e.f(n,r,t,o,a,i,c):e(n)(r)(t)(o)(a)(i)(c)}function p(e,n,r,t,o,a,i,c,l){return 8===e.a?e.f(n,r,t,o,a,i,c,l):e(n)(r)(t)(o)(a)(i)(c)(l)}var b=t((function(e,n,r){for(var t=Array(e),o=0;e>o;o++)t[o]=r(n+o);return t})),g=r((function(e,n){for(var r=Array(e),t=0;e>t&&n.b;t++)r[t]=n.a,n=n.b;return r.length=t,L(r,n)})),h=r((function(e,n){return n[e]})),x=t((function(e,n,r){for(var t=r.length-1;t>=0;t--)n=u(e,r[t],n);return n}));function C(e){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+e+".md")}function P(e,n){for(var r,t=[],o=M(e,n,0,t);o&&(r=t.pop());o=M(r.a,r.b,0,t));return o}function M(e,n,r,t){if(e===n)return!0;if("object"!=typeof e||null===e||null===n)return"function"==typeof e&&C(5),!1;if(r>100)return t.push(L(e,n)),!0;for(var o in 0>e.$&&(e=Nr(e),n=Nr(n)),e)if(!M(e[o],n[o],r+1,t))return!1;return!0}function T(e,n,r){if("object"!=typeof e)return e===n?0:n>e?-1:1;if(void 0===e.$)return(r=T(e.a,n.a))||(r=T(e.b,n.b))?r:T(e.c,n.c);for(;e.b&&n.b&&!(r=T(e.a,n.a));e=e.b,n=n.b);return r||(e.b?1:n.b?-1:0)}var y=r((function(e,n){var r=T(e,n);return 0>r?$r:r?Dr:zr}));function L(e,n){return{a:e,b:n}}function w(e,n,r){return{a:e,b:n,c:r}}function S(e,n){var r={};for(var t in e)r[t]=e[t];for(var t in n)r[t]=n[t];return r}function N(e,n){if("string"==typeof e)return e+n;if(!e.b)return n;var r=D(e.a,n);e=e.b;for(var t=r;e.b;e=e.b)t=t.b=D(e.a,n);return r}var z={$:0};function D(e,n){return{$:1,a:e,b:n}}var $=r(D);function _(e){for(var n=z,r=e.length;r--;)n=D(e[r],n);return n}function A(e){for(var n=[];e.b;e=e.b)n.push(e.a);return n}var k=t((function(e,n,r){for(var t=[];n.b&&r.b;n=n.b,r=r.b)t.push(u(e,n.a,r.a));return _(t)})),F=r((function(e,n){return e*n})),V=r(Math.pow),R=r((function(e,n){var r=n%e;return 0===e?C(11):r>0&&0>e||0>r&&e>0?r+e:r})),B=Math.cos,E=Math.sin,I=Math.tan,j=Math.ceil,H=Math.floor,U=Math.round,O=Math.sqrt,W=Math.log,G=isNaN,q=r((function(e,n){return e+n})),Y=t((function(e,n,r){for(var t=r.length;t--;){var o=r[t],a=r.charCodeAt(t);56320>a||a>57343||(o=r[--t]+o),n=u(e,o,n)}return n})),X=r((function(e,n){return n.split(e)})),Z=r((function(e,n){return n.join(e)})),K=t((function(e,n,r){return r.slice(e,n)})),Q=r((function(e,n){return 0===n.indexOf(e)}));function J(e){return e+""}function ee(e){return{$:2,b:e}}var ne=ee((function(e){return"number"!=typeof e?ge("an INT",e):e>-2147483647&&2147483647>e&&(0|e)===e?Vr(e):!isFinite(e)||e%1?ge("an INT",e):Vr(e)})),re=ee((function(e){return"boolean"==typeof e?Vr(e):ge("a BOOL",e)})),te=ee((function(e){return"number"==typeof e?Vr(e):ge("a FLOAT",e)})),oe=(ee((function(e){return Vr(e)})),ee((function(e){return"string"==typeof e?Vr(e):e instanceof String?Vr(e+""):ge("a STRING",e)}))),ae=r((function(e,n){return{$:6,d:e,b:n}}));function ie(e,n){return{$:9,f:e,g:n}}var ce=r((function(e,n){return{$:10,b:n,h:e}})),le=r((function(e,n){return ie(e,[n])})),ue=t((function(e,n,r){return ie(e,[n,r])})),fe=o((function(e,n,r,t){return ie(e,[n,r,t])})),se=r((function(e,n){try{return ve(e,JSON.parse(n))}catch(e){return _r(u(Ar,"This is not valid JSON! "+e.message,n))}})),de=r((function(e,n){return ve(e,n)}));function ve(e,n){switch(e.$){case 2:return e.b(n);case 5:return null===n?Vr(e.c):ge("null",n);case 3:return pe(n)?me(e.b,n,_):ge("a LIST",n);case 4:return pe(n)?me(e.b,n,be):ge("an ARRAY",n);case 6:var r=e.d;if("object"!=typeof n||null===n||!(r in n))return ge("an OBJECT with a field named `"+r+"`",n);var t=ve(e.b,n[r]);return xt(t)?t:_r(u(kr,r,t.a));case 7:var o=e.e;return pe(n)?n.length>o?(t=ve(e.b,n[o]),xt(t)?t:_r(u(Fr,o,t.a))):ge("a LONGER array. Need index "+o+" but only see "+n.length+" entries",n):ge("an ARRAY",n);case 8:if("object"!=typeof n||null===n||pe(n))return ge("an OBJECT",n);var a=z;for(var i in n)if(n.hasOwnProperty(i)){if(t=ve(e.b,n[i]),!xt(t))return _r(u(kr,i,t.a));a=D(L(i,t.a),a)}return Vr(Kr(a));case 9:for(var c=e.f,l=e.g,f=0;l.length>f;f++){if(t=ve(l[f],n),!xt(t))return t;c=c(t.a)}return Vr(c);case 10:return t=ve(e.b,n),xt(t)?ve(e.h(t.a),n):t;case 11:for(var s=z,d=e.g;d.b;d=d.b){if(t=ve(d.a,n),xt(t))return t;s=D(t.a,s)}return _r(Rr(Kr(s)));case 1:return _r(u(Ar,e.a,n));case 0:return Vr(e.a)}}function me(e,n,r){for(var t=n.length,o=Array(t),a=0;t>a;a++){var i=ve(e,n[a]);if(!xt(i))return _r(u(Fr,a,i.a));o[a]=i.a}return Vr(r(o))}function pe(e){return Array.isArray(e)||"undefined"!=typeof FileList&&e instanceof FileList}function be(e){return u(ht,e.length,(function(n){return e[n]}))}function ge(e,n){return _r(u(Ar,"Expecting "+e,n))}function he(e,n){if(e===n)return!0;if(e.$!==n.$)return!1;switch(e.$){case 0:case 1:return e.a===n.a;case 2:return e.b===n.b;case 5:return e.c===n.c;case 3:case 4:case 8:return he(e.b,n.b);case 6:return e.d===n.d&&he(e.b,n.b);case 7:return e.e===n.e&&he(e.b,n.b);case 9:return e.f===n.f&&xe(e.g,n.g);case 10:return e.h===n.h&&he(e.b,n.b);case 11:return xe(e.g,n.g)}}function xe(e,n){var r=e.length;if(r!==n.length)return!1;for(var t=0;r>t;t++)if(!he(e[t],n[t]))return!1;return!0}var Ce=r((function(e,n){return JSON.stringify(n,null,e)+""}));function Pe(e){return e}var Me=t((function(e,n,r){return r[e]=n,r}));function Te(e){return{$:0,a:e}}function ye(e){return{$:2,b:e,c:null}}var Le=r((function(e,n){return{$:3,b:e,d:n}})),we=0;function Se(e){var n={$:0,e:we++,f:e,g:null,h:[]};return Ae(n),n}function Ne(e){return ye((function(n){n(Te(Se(e)))}))}function ze(e,n){e.h.push(n),Ae(e)}var De=r((function(e,n){return ye((function(r){ze(e,n),r(Te(0))}))})),$e=!1,_e=[];function Ae(e){if(_e.push(e),!$e){for($e=!0;e=_e.shift();)ke(e);$e=!1}}function ke(e){for(;e.f;){var n=e.f.$;if(0===n||1===n){for(;e.g&&e.g.$!==n;)e.g=e.g.i;if(!e.g)return;e.f=e.g.b(e.f.a),e.g=e.g.i}else{if(2===n)return void(e.f.c=e.f.b((function(n){e.f=n,Ae(e)})));if(5===n){if(0===e.h.length)return;e.f=e.f.b(e.h.shift())}else e.g={$:3===n?0:1,b:e.f.b,i:e.g},e.f=e.f.d}}}var Fe={};function Ve(e,n,r,t,o){return{b:e,c:n,d:r,e:t,f:o}}function Re(e,n){var r={g:n,h:void 0},t=e.c,o=e.d,a=e.e,i=e.f;return r.h=Se(u(Le,(function e(n){return u(Le,e,{$:5,b:function(e){var c=e.a;return 0===e.$?f(o,r,c,n):a&&i?s(t,r,c.i,c.j,n):f(t,r,a?c.i:c.j,n)}})}),e.b))}var Be=r((function(e,n){return ye((function(r){e.g(n),r(Te(0))}))})),Ee=r((function(e,n){return u(De,e.h,{$:0,a:n})}));function Ie(e){return function(n){return{$:1,k:e,l:n}}}function je(e){return{$:2,m:e}}var He=r((function(e,n){return{$:3,n:e,o:n}})),Ue=[],Oe=!1;function We(e,n,r){if(Ue.push({p:e,q:n,r:r}),!Oe){Oe=!0;for(var t;t=Ue.shift();)Ge(t.p,t.q,t.r);Oe=!1}}function Ge(e,n,r){var t={};for(var o in qe(!0,n,t,null),qe(!1,r,t,null),e)ze(e[o],{$:"fx",a:t[o]||{i:z,j:z}})}function qe(e,n,r,t){switch(n.$){case 1:var o=n.k,a=function(e,n,r,t){return u(e?Fe[n].e:Fe[n].f,(function(e){for(var n=r;n;n=n.t)e=n.s(e);return e}),t)}(e,o,t,n.l);return void(r[o]=function(e,n,r){return r=r||{i:z,j:z},e?r.i=D(n,r.i):r.j=D(n,r.j),r}(e,a,r[o]));case 2:for(var i=n.m;i.b;i=i.b)qe(e,i.a,r,t);return;case 3:return void qe(e,n.o,r,{s:n.n,t:t})}}function Ye(e,n){return function(e){Fe[e]&&C(3)}(e),Fe[e]={f:Xe,u:n,a:Ze},Ie(e)}var Xe=r((function(e,n){return function(r){return e(n(r))}}));function Ze(e,n){var r=z,o=Fe[e].u,a=Te(null);return Fe[e].b=a,Fe[e].c=t((function(e,n){return r=n,a})),{send:function(e){var t=u(de,o,e);xt(t)||C(4);for(var a=t.a,i=r;i.b;i=i.b)n(i.a(a))}}}var Ke="undefined"!=typeof document?document:{};function Qe(e,n){e.appendChild(n)}function Je(e){return{$:0,a:e}}var en,nn=r((function(e,n){return r((function(r,t){for(var o=[],a=0;t.b;t=t.b){var i=t.a;a+=i.b||0,o.push(i)}return a+=o.length,{$:1,c:n,d:un(r),e:o,f:e,b:a}}))}))(void 0),rn=r((function(e,n){return r((function(r,t){for(var o=[],a=0;t.b;t=t.b){var i=t.a;a+=i.b.b||0,o.push(i)}return a+=o.length,{$:2,c:n,d:un(r),e:o,f:e,b:a}}))}))(void 0),tn=r((function(e,n){return{$:4,j:e,k:n,b:1+(n.b||0)}})),on=r((function(e,n){return{$:"a0",n:e,o:n}})),an=r((function(e,n){return{$:"a1",n:e,o:n}})),cn=r((function(e,n){return{$:"a2",n:e,o:n}})),ln=r((function(e,n){return{$:"a3",n:e,o:n}}));function un(e){for(var n={};e.b;e=e.b){var r=e.a,t=r.$,o=r.n,a=r.o;if("a2"!==t){var i=n[t]||(n[t]={});"a3"===t&&"class"===o?fn(i,o,a):i[o]=a}else"className"===o?fn(n,o,a):n[o]=a}return n}function fn(e,n,r){var t=e[n];e[n]=t?t+" "+r:r}function sn(e,n){var r=e.$;if(5===r)return sn(e.k||(e.k=e.m()),n);if(0===r)return Ke.createTextNode(e.a);if(4===r){for(var t=e.k,o=e.j;4===t.$;)"object"!=typeof o?o=[o,t.j]:o.push(t.j),t=t.k;var a={j:o,p:n};return(i=sn(t,a)).elm_event_node_ref=a,i}if(3===r)return dn(i=e.h(e.g),n,e.d),i;var i=e.f?Ke.createElementNS(e.f,e.c):Ke.createElement(e.c);dn(i,n,e.d);for(var c=e.e,l=0;c.length>l;l++)Qe(i,sn(1===r?c[l]:c[l].b,n));return i}function dn(e,n,r){for(var t in r){var o=r[t];"a1"===t?vn(e,o):"a0"===t?bn(e,n,o):"a3"===t?mn(e,o):"a4"===t?pn(e,o):("value"!==t&&"checked"!==t||e[t]!==o)&&(e[t]=o)}}function vn(e,n){var r=e.style;for(var t in n)r[t]=n[t]}function mn(e,n){for(var r in n){var t=n[r];void 0!==t?e.setAttribute(r,t):e.removeAttribute(r)}}function pn(e,n){for(var r in n){var t=n[r],o=t.f,a=t.o;void 0!==a?e.setAttributeNS(o,r,a):e.removeAttributeNS(o,r)}}function bn(e,n,r){var t=e.elmFs||(e.elmFs={});for(var o in r){var a=r[o],i=t[o];if(a){if(i){if(i.q.$===a.$){i.q=a;continue}e.removeEventListener(o,i)}i=gn(n,a),e.addEventListener(o,i,en&&{passive:2>Dt(a)}),t[o]=i}else e.removeEventListener(o,i),t[o]=void 0}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){en=!0}}))}catch(e){}function gn(e,n){function r(n){var t=r.q,o=ve(t.a,n);if(xt(o)){for(var a,i=Dt(t),c=o.a,l=i?3>i?c.a:c.aG:c,u=1==i?c.b:3==i&&c.dI,f=(u&&n.stopPropagation(),(2==i?c.b:3==i&&c.du)&&n.preventDefault(),e);a=f.j;){if("function"==typeof a)l=a(l);else for(var s=a.length;s--;)l=a[s](l);f=f.p}f(l,u)}}return r.q=n,r}function hn(e,n){return e.$==n.$&&he(e.a,n.a)}function xn(e,n,r,t){var o={$:n,r:r,s:t,t:void 0,u:void 0};return e.push(o),o}function Cn(e,n,r,t){if(e!==n){var o=e.$,a=n.$;if(o!==a){if(1!==o||2!==a)return void xn(r,0,t,n);n=function(e){for(var n=e.e,r=n.length,t=Array(r),o=0;r>o;o++)t[o]=n[o].b;return{$:1,c:e.c,d:e.d,e:t,f:e.f,b:e.b}}(n),a=1}switch(a){case 5:for(var i=e.l,c=n.l,l=i.length,u=l===c.length;u&&l--;)u=i[l]===c[l];if(u)return void(n.k=e.k);n.k=n.m();var f=[];return Cn(e.k,n.k,f,0),void(f.length>0&&xn(r,1,t,f));case 4:for(var s=e.j,d=n.j,v=!1,m=e.k;4===m.$;)v=!0,"object"!=typeof s?s=[s,m.j]:s.push(m.j),m=m.k;for(var p=n.k;4===p.$;)v=!0,"object"!=typeof d?d=[d,p.j]:d.push(p.j),p=p.k;return v&&s.length!==d.length?void xn(r,0,t,n):((v?function(e,n){for(var r=0;e.length>r;r++)if(e[r]!==n[r])return!1;return!0}(s,d):s===d)||xn(r,2,t,d),void Cn(m,p,r,t+1));case 0:return void(e.a!==n.a&&xn(r,3,t,n.a));case 1:return void Pn(e,n,r,t,Tn);case 2:return void Pn(e,n,r,t,yn);case 3:if(e.h!==n.h)return void xn(r,0,t,n);var b=Mn(e.d,n.d);b&&xn(r,4,t,b);var g=n.i(e.g,n.g);return void(g&&xn(r,5,t,g))}}}function Pn(e,n,r,t,o){if(e.c===n.c&&e.f===n.f){var a=Mn(e.d,n.d);a&&xn(r,4,t,a),o(e,n,r,t)}else xn(r,0,t,n)}function Mn(e,n,r){var t;for(var o in e)if("a1"!==o&&"a0"!==o&&"a3"!==o&&"a4"!==o)if(o in n){var a=e[o],i=n[o];a===i&&"value"!==o&&"checked"!==o||"a0"===r&&hn(a,i)||((t=t||{})[o]=i)}else(t=t||{})[o]=r?"a1"===r?"":"a0"===r||"a3"===r?void 0:{f:e[o].f,o:void 0}:"string"==typeof e[o]?"":null;else{var c=Mn(e[o],n[o]||{},o);c&&((t=t||{})[o]=c)}for(var l in n)l in e||((t=t||{})[l]=n[l]);return t}function Tn(e,n,r,t){var o=e.e,a=n.e,i=o.length,c=a.length;i>c?xn(r,6,t,{v:c,i:i-c}):c>i&&xn(r,7,t,{v:i,e:a});for(var l=c>i?i:c,u=0;l>u;u++){var f=o[u];Cn(f,a[u],r,++t),t+=f.b||0}}function yn(e,n,r,t){for(var o=[],a={},i=[],c=e.e,l=n.e,u=c.length,f=l.length,s=0,d=0,v=t;u>s&&f>d;){var m=(w=c[s]).a,p=(S=l[d]).a,b=w.b,g=S.b,h=void 0,x=void 0;if(m!==p){var C=c[s+1],P=l[d+1];if(C){var M=C.a,T=C.b;x=p===M}if(P){var y=P.a,L=P.b;h=m===y}if(h&&x)Cn(b,L,o,++v),wn(a,o,m,g,d,i),v+=b.b||0,Sn(a,o,m,T,++v),v+=T.b||0,s+=2,d+=2;else if(h)v++,wn(a,o,p,g,d,i),Cn(b,L,o,v),v+=b.b||0,s+=1,d+=2;else if(x)Sn(a,o,m,b,++v),v+=b.b||0,Cn(T,g,o,++v),v+=T.b||0,s+=2,d+=1;else{if(!C||M!==y)break;Sn(a,o,m,b,++v),wn(a,o,p,g,d,i),v+=b.b||0,Cn(T,L,o,++v),v+=T.b||0,s+=2,d+=2}}else Cn(b,g,o,++v),v+=b.b||0,s++,d++}for(;u>s;){var w;v++,Sn(a,o,(w=c[s]).a,b=w.b,v),v+=b.b||0,s++}for(;f>d;){var S,N=N||[];wn(a,o,(S=l[d]).a,S.b,void 0,N),d++}(o.length>0||i.length>0||N)&&xn(r,8,t,{w:o,x:i,y:N})}var Ln="_elmW6BL";function wn(e,n,r,t,o,a){var i=e[r];if(!i)return a.push({r:o,A:i={c:0,z:t,r:o,s:void 0}}),void(e[r]=i);if(1===i.c){a.push({r:o,A:i}),i.c=2;var c=[];return Cn(i.z,t,c,i.r),i.r=o,void(i.s.s={w:c,A:i})}wn(e,n,r+Ln,t,o,a)}function Sn(e,n,r,t,o){var a=e[r];if(a){if(0===a.c){a.c=2;var i=[];return Cn(t,a.z,i,o),void xn(n,9,o,{w:i,A:a})}Sn(e,n,r+Ln,t,o)}else{var c=xn(n,9,o,void 0);e[r]={c:1,z:t,r:o,s:c}}}function Nn(e,n,r,t){zn(e,n,r,0,0,n.b,t)}function zn(e,n,r,t,o,a,i){for(var c=r[t],l=c.r;l===o;){var u=c.$;if(1===u)Nn(e,n.k,c.s,i);else if(8===u)c.t=e,c.u=i,(f=c.s.w).length>0&&zn(e,n,f,0,o,a,i);else if(9===u){c.t=e,c.u=i;var f,s=c.s;s&&(s.A.s=e,(f=s.w).length>0&&zn(e,n,f,0,o,a,i))}else c.t=e,c.u=i;if(!(c=r[++t])||(l=c.r)>a)return t}var d=n.$;if(4===d){for(var v=n.k;4===v.$;)v=v.k;return zn(e,v,r,t,o+1,a,e.elm_event_node_ref)}for(var m=n.e,p=e.childNodes,b=0;m.length>b;b++){o++;var g=1===d?m[b]:m[b].b,h=o+(g.b||0);if(!(o>l||l>h||(c=r[t=zn(p[b],g,r,t,o,h,i)])&&(l=c.r)<=a))return t;o=h}return t}function Dn(e,n){for(var r=0;n.length>r;r++){var t=n[r],o=t.t,a=$n(o,t);o===e&&(e=a)}return e}function $n(e,n){switch(n.$){case 0:return function(e,n,r){var t=e.parentNode,o=sn(n,r);return o.elm_event_node_ref||(o.elm_event_node_ref=e.elm_event_node_ref),t&&o!==e&&t.replaceChild(o,e),o}(e,n.s,n.u);case 4:return dn(e,n.u,n.s),e;case 3:return e.replaceData(0,e.length,n.s),e;case 1:return Dn(e,n.s);case 2:return e.elm_event_node_ref?e.elm_event_node_ref.j=n.s:e.elm_event_node_ref={j:n.s,p:n.u},e;case 6:for(var r=n.s,t=0;r.i>t;t++)e.removeChild(e.childNodes[r.v]);return e;case 7:for(var o=(r=n.s).e,a=e.childNodes[t=r.v];o.length>t;t++)e.insertBefore(sn(o[t],n.u),a);return e;case 9:if(!(r=n.s))return e.parentNode.removeChild(e),e;var i=r.A;return void 0!==i.r&&e.parentNode.removeChild(e),i.s=Dn(e,r.w),e;case 8:return function(e,n){var r=n.s,t=function(e,n){if(e){for(var r=Ke.createDocumentFragment(),t=0;e.length>t;t++){var o=e[t].A;Qe(r,2===o.c?o.s:sn(o.z,n.u))}return r}}(r.y,n);e=Dn(e,r.w);for(var o=r.x,a=0;o.length>a;a++){var i=o[a],c=i.A,l=2===c.c?c.s:sn(c.z,n.u);e.insertBefore(l,e.childNodes[i.r])}return t&&Qe(e,t),e}(e,n);case 5:return n.s(e);default:C(10)}}function _n(e){if(3===e.nodeType)return Je(e.textContent);if(1!==e.nodeType)return Je("");for(var n=z,r=e.attributes,t=r.length;t--;){var o=r[t];n=D(u(ln,o.name,o.value),n)}var a=e.tagName.toLowerCase(),i=z,c=e.childNodes;for(t=c.length;t--;)i=D(_n(c[t]),i);return f(nn,a,n,i)}var An=o((function(e,n,r,t){return function(e,n,r,t,o,a){var i=u(de,e,n?n.flags:void 0);xt(i)||C(2);var c={},l=r(i.a),f=l.a,s=a(v,f),d=function(e,n){var r;for(var t in Fe){var o=Fe[t];o.a&&((r=r||{})[t]=o.a(t,n)),e[t]=Re(o,n)}return r}(c,v);function v(e,n){var r=u(t,e,f);s(f=r.a,n),We(c,r.b,o(f))}return We(c,l.b,o(f)),d?{ports:d}:{}}(n,t,e.fM,e.go,e.gg,(function(n,r){var o=e.gq,a=t.node,i=_n(a);return function(e,n){n(e);var r=0;function t(){r=1===r?0:(Fn(t),n(e),1)}return function(o,a){e=o,a?(n(e),2===r&&(r=1)):(0===r&&Fn(t),r=2)}}(r,(function(e){var r=o(e),t=function(e,n){var r=[];return Cn(e,n,r,0),r}(i,r);a=function(e,n,r,t){return 0===r.length?e:(Nn(e,n,r,t),Dn(e,r))}(a,i,t,n),i=r}))}))})),kn="undefined"!=typeof cancelAnimationFrame?cancelAnimationFrame:function(e){clearTimeout(e)},Fn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(e){return setTimeout(e,1e3/60)},Vn={addEventListener:function(){},removeEventListener:function(){}},Rn="undefined"!=typeof document?document:Vn,Bn="undefined"!=typeof window?window:Vn,En=t((function(e,n,r){return Ne(ye((function(){function t(e){Se(r(e))}return e.addEventListener(n,t,en&&{passive:!0}),function(){e.removeEventListener(n,t)}})))})),In=r((function(e,n){var r=ve(e,n);return xt(r)?Br(r.a):Er})),jn=r((function(e,n){var r="g";e.fZ&&(r+="m"),e.fk&&(r+="i");try{return Br(RegExp(n,r))}catch(e){return Er}})),Hn=t((function(e,n,r){for(var t,o=[],a=0,i=r,c=n.lastIndex,l=-1;a++<e&&(t=n.exec(i))&&l!=n.lastIndex;){for(var u=t.length-1,f=Array(u);u>0;){var d=t[u];f[--u]=d?Br(d):Er}o.push(s(mi,t[0],t.index,a,_(f))),l=n.lastIndex}return n.lastIndex=c,_(o)})),Un=0;function On(e,n){for(;n.b;n=n.b)e(n.a)}function Wn(e){for(var n=0;e.b;e=e.b)n++;return n}var Gn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(e){setTimeout(e,1e3/60)},qn=a((function(e,n,r,t,o){return{$:0,a:e,b:n,c:r,d:t,e:o}})),Yn=r((function(e,n){var r=e.blend;r.toggle=e.toggle,r.enabled||(e.gl.enable(e.gl.BLEND),r.enabled=!0),r.a===n.a&&r.d===n.d||(e.gl.blendEquationSeparate(n.a,n.d),r.a=n.a,r.d=n.d),r.b===n.b&&r.c===n.c&&r.e===n.e&&r.f===n.f||(e.gl.blendFuncSeparate(n.b,n.c,n.e,n.f),r.b=n.b,r.c=n.c,r.e=n.e,r.f=n.f),r.g===n.g&&r.h===n.h&&r.i===n.i&&r.j===n.j||(e.gl.blendColor(n.g,n.h,n.i,n.j),r.g=n.g,r.h=n.h,r.i=n.i,r.j=n.j)})),Xn=r((function(e,n){var r=e.depthTest;r.toggle=e.toggle,r.enabled||(e.gl.enable(e.gl.DEPTH_TEST),r.enabled=!0),r.a!==n.a&&(e.gl.depthFunc(n.a),r.a=n.a),r.b!==n.b&&(e.gl.depthMask(n.b),r.b=n.b),r.c===n.c&&r.d===n.d||(e.gl.depthRange(n.c,n.d),r.c=n.c,r.d=n.d)})),Zn=r((function(e,n){var r=e.stencilTest;r.toggle=e.toggle,r.enabled||(e.gl.enable(e.gl.STENCIL_TEST),r.enabled=!0),r.d===n.d&&r.a===n.a&&r.b===n.b||(e.gl.stencilFuncSeparate(e.gl.FRONT,n.d,n.a,n.b),r.d=n.d),r.e===n.e&&r.f===n.f&&r.g===n.g||(e.gl.stencilOpSeparate(e.gl.FRONT,n.e,n.f,n.g),r.e=n.e,r.f=n.f,r.g=n.g),r.c!==n.c&&(e.gl.stencilMask(n.c),r.c=n.c),r.h===n.h&&r.a===n.a&&r.b===n.b||(e.gl.stencilFuncSeparate(e.gl.BACK,n.h,n.a,n.b),r.h=n.h,r.a=n.a,r.b=n.b),r.i===n.i&&r.j===n.j&&r.k===n.k||(e.gl.stencilOpSeparate(e.gl.BACK,n.i,n.j,n.k),r.i=n.i,r.j=n.j,r.k=n.k)})),Kn=r((function(e,n){var r=e.scissor;r.toggle=e.toggle,r.enabled||(e.gl.enable(e.gl.SCISSOR_TEST),r.enabled=!0),r.a===n.a&&r.b===n.b&&r.c===n.c&&r.d===n.d||(e.gl.scissor(n.a,n.b,n.c,n.d),r.a=n.a,r.b=n.b,r.c=n.c,r.d=n.d)})),Qn=r((function(e,n){var r=e.colorMask;r.toggle=e.toggle,r.enabled=!0,r.a===n.a&&r.b===n.b&&r.c===n.c&&r.d===n.d||(e.gl.colorMask(n.a,n.b,n.c,n.d),r.a=n.a,r.b=n.b,r.c=n.c,r.d=n.d)})),Jn=r((function(e,n){var r=e.cullFace;r.toggle=e.toggle,r.enabled||(e.gl.enable(e.gl.CULL_FACE),r.enabled=!0),r.a!==n.a&&(e.gl.cullFace(n.a),r.a=n.a)})),er=r((function(e,n){var r=e.polygonOffset;r.toggle=e.toggle,r.enabled||(e.gl.enable(e.gl.POLYGON_OFFSET_FILL),r.enabled=!0),r.a===n.a&&r.b===n.b||(e.gl.polygonOffset(n.a,n.b),r.a=n.a,r.b=n.b)})),nr=r((function(e,n){var r=e.sampleCoverage;r.toggle=e.toggle,r.enabled||(e.gl.enable(e.gl.SAMPLE_COVERAGE),r.enabled=!0),r.a===n.a&&r.b===n.b||(e.gl.sampleCoverage(n.a,n.b),r.a=n.a,r.b=n.b)})),rr=function(e){e.scissor.enabled&&(e.gl.disable(e.gl.SCISSOR_TEST),e.scissor.enabled=!1)},tr=function(e){var n=e.colorMask;n.a&&n.b&&n.c&&n.d||(e.gl.colorMask(!0,!0,!0,!0),n.a=!0,n.b=!0,n.c=!0,n.d=!0)},or=["blend","depthTest","stencilTest","scissor","colorMask","cullFace","polygonOffset","sampleCoverage","sampleAlphaToCoverage"],ar=[function(e){e.blend.enabled&&(e.gl.disable(e.gl.BLEND),e.blend.enabled=!1)},function(e){e.depthTest.enabled&&(e.gl.disable(e.gl.DEPTH_TEST),e.depthTest.enabled=!1)},function(e){e.stencilTest.enabled&&(e.gl.disable(e.gl.STENCIL_TEST),e.stencilTest.enabled=!1)},rr,tr,function(e){e.gl.disable(e.gl.CULL_FACE)},function(e){e.gl.disable(e.gl.POLYGON_OFFSET_FILL)},function(e){e.gl.disable(e.gl.SAMPLE_COVERAGE)},function(e){e.gl.disable(e.gl.SAMPLE_ALPHA_TO_COVERAGE)}];function ir(e,n,r){var t=e.createShader(r);return e.shaderSource(t,"#extension GL_OES_standard_derivatives : enable\n"+n),e.compileShader(t),t}function cr(e,n){switch(n){case e.FLOAT:return{size:1,arraySize:1,type:Float32Array,baseType:e.FLOAT};case e.FLOAT_VEC2:return{size:2,arraySize:1,type:Float32Array,baseType:e.FLOAT};case e.FLOAT_VEC3:return{size:3,arraySize:1,type:Float32Array,baseType:e.FLOAT};case e.FLOAT_VEC4:return{size:4,arraySize:1,type:Float32Array,baseType:e.FLOAT};case e.FLOAT_MAT4:return{size:4,arraySize:4,type:Float32Array,baseType:e.FLOAT};case e.INT:return{size:1,arraySize:1,type:Int32Array,baseType:e.INT}}}function lr(e,n,r,t){for(var o=r.a.d4,a=[],i=0;o>i;i++)a.push(String.fromCharCode(97+i));var c=cr(e,n.type);if(void 0===c)throw Error("No info available for: "+n.type);var l=0,u=c.size*c.arraySize*o,f=new c.type(Wn(r.b)*u);On((function(e){!function(e,n,r,t,i){var c;if(1===o)for(c=0;n>c;c++)e[r++]=1===n?t[i]:t[i][c];else a.forEach((function(o){for(c=0;n>c;c++)e[r++]=1===n?t[o][i]:t[o][i][c]}))}(f,c.size*c.arraySize,l,e,t[n.name]||n.name),l+=u}),r.b);var s=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,s),e.bufferData(e.ARRAY_BUFFER,f,e.STATIC_DRAW),s}function ur(e,n){return e+"#"+n}var fr=r((function(e,n){var r=e.f,t=r.gl;return t?(t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),r.depthTest.b||(t.depthMask(!0),r.depthTest.b=!0),r.stencilTest.c!==r.STENCIL_WRITEMASK&&(t.stencilMask(r.STENCIL_WRITEMASK),r.stencilTest.c=r.STENCIL_WRITEMASK),rr(r),tr(r),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT|t.STENCIL_BUFFER_BIT),On((function(n){if(n.d.b.b){var o,a,i,c,l;if(n.b.id&&n.c.id&&(o=ur(n.b.id,n.c.id),a=r.programs[o]),!a){var u,f;n.b.id?u=r.shaders[n.b.id]:n.b.id=Un++,u||(u=ir(t,n.b.src,t.VERTEX_SHADER),r.shaders[n.b.id]=u),n.c.id?f=r.shaders[n.c.id]:n.c.id=Un++,f||(f=ir(t,n.c.src,t.FRAGMENT_SHADER),r.shaders[n.c.id]=f);var s=function(e,n,r){var t=e.createProgram();if(e.attachShader(t,n),e.attachShader(t,r),e.linkProgram(t),!e.getProgramParameter(t,e.LINK_STATUS))throw"Link failed: "+e.getProgramInfoLog(t)+"\nvs info-log: "+e.getShaderInfoLog(n)+"\nfs info-log: "+e.getShaderInfoLog(r);return t}(t,u,f);(a={glProgram:s,attributes:Object.assign({},n.b.attributes,n.c.attributes),currentUniforms:{},activeAttributes:[],activeAttributeLocations:[]}).uniformSetters=function(e,n,r,t){var o=r.glProgram,a=r.currentUniforms,i=0,c=n.f;function l(n,r){var t=r.name,o=e.getUniformLocation(n,t);switch(r.type){case e.INT:return function(n){a[t]!==n&&(e.uniform1i(o,n),a[t]=n)};case e.FLOAT:return function(n){a[t]!==n&&(e.uniform1f(o,n),a[t]=n)};case e.FLOAT_VEC2:return function(n){a[t]!==n&&(e.uniform2f(o,n[0],n[1]),a[t]=n)};case e.FLOAT_VEC3:return function(n){a[t]!==n&&(e.uniform3f(o,n[0],n[1],n[2]),a[t]=n)};case e.FLOAT_VEC4:return function(n){a[t]!==n&&(e.uniform4f(o,n[0],n[1],n[2],n[3]),a[t]=n)};case e.FLOAT_MAT4:return function(n){a[t]!==n&&(e.uniformMatrix4fv(o,!1,new Float32Array(n)),a[t]=n)};case e.SAMPLER_2D:var l=i++;return function(n){e.activeTexture(e.TEXTURE0+l);var r=c.textures.get(n);r||(r=n.fp(e),c.textures.set(n,r)),e.bindTexture(e.TEXTURE_2D,r),a[t]!==n&&(e.uniform1i(o,l),a[t]=n)};case e.BOOL:return function(n){a[t]!==n&&(e.uniform1i(o,n),a[t]=n)};default:return function(){}}}for(var u={},f=e.getProgramParameter(o,e.ACTIVE_UNIFORMS),s=0;f>s;s++){var d=e.getActiveUniform(o,s);u[t[d.name]||d.name]=l(o,d)}return u}(t,e,a,Object.assign({},n.b.uniforms,n.c.uniforms));var d=t.getProgramParameter(s,t.ACTIVE_ATTRIBUTES);for(i=0;d>i;i++){var v=t.getActiveAttrib(s,i),m=t.getAttribLocation(s,v.name);a.activeAttributes.push(v),a.activeAttributeLocations.push(m)}o=ur(n.b.id,n.c.id),r.programs[o]=a}r.lastProgId!==o&&(t.useProgram(a.glProgram),r.lastProgId=o),c=a.uniformSetters,Object.keys(l=n.e).forEach((function(e){var n=c[e];n&&n(l[e])}));var p=r.buffers.get(n.d);for(p||(p=function(e,n){if(n.a.ed>0){var r=e.createBuffer(),t=function(e,n){var r,t=new Uint32Array(Wn(e)*n),o=0;return On((function(e){if(1===n)t[o++]=e;else for(r=0;n>r;r++)t[o++]=e[String.fromCharCode(97+r)]}),e),t}(n.c,n.a.ed);return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r),e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW),{numIndices:t.length,indexBuffer:r,buffers:{}}}return{numIndices:n.a.d4*Wn(n.b),indexBuffer:null,buffers:{}}}(t,n.d),r.buffers.set(n.d,p)),i=0;a.activeAttributes.length>i;i++){m=a.activeAttributeLocations[i],void 0===p.buffers[(v=a.activeAttributes[i]).name]&&(p.buffers[v.name]=lr(t,v,n.d,a.attributes)),t.bindBuffer(t.ARRAY_BUFFER,p.buffers[v.name]);var b=cr(t,v.type);if(1===b.arraySize)t.enableVertexAttribArray(m),t.vertexAttribPointer(m,b.size,b.baseType,!1,0,0);else for(var g=4*b.size,h=g*b.arraySize,x=0;b.arraySize>x;x++)t.enableVertexAttribArray(m+x),t.vertexAttribPointer(m+x,b.size,b.baseType,!1,h,g*x)}for(r.toggle=!r.toggle,On(nd(r),n.a),i=0;9>i;i++){var C=r[or[i]];C.toggle!==r.toggle&&C.enabled&&(ar[i](r),C.enabled=!1,C.toggle=r.toggle)}p.indexBuffer?(t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,p.indexBuffer),t.drawElements(n.d.a.eK,p.numIndices,t.UNSIGNED_INT,0)):t.drawArrays(n.d.a.eK,0,p.numIndices)}}),e.g),n):n})),sr=t((function(e,n,r){return function(e,n,r,t){return{$:3,d:un(e),g:n,h:r,i:t}}(n,{g:r,f:{},h:e},hr,xr)})),dr=r((function(e,n){e.contextAttributes.alpha=!0,e.contextAttributes.premultipliedAlpha=n.a})),vr=r((function(e,n){e.contextAttributes.depth=!0,e.sceneSettings.push((function(e){e.clearDepth(n.a)}))})),mr=r((function(e,n){e.contextAttributes.stencil=!0,e.sceneSettings.push((function(e){e.clearStencil(n.a)}))})),pr=r((function(e){e.contextAttributes.antialias=!0})),br=r((function(e,n){e.sceneSettings.push((function(e){e.clearColor(n.a,n.b,n.c,n.d)}))})),gr=r((function(e){e.contextAttributes.preserveDrawingBuffer=!0}));function hr(e){var n={contextAttributes:{alpha:!1,depth:!1,stencil:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1},sceneSettings:[]};On((function(e){return u(ed,n,e)}),e.h);var r=Ke.createElement("canvas"),t=r.getContext&&(r.getContext("webgl",n.contextAttributes)||r.getContext("experimental-webgl",n.contextAttributes));return t&&"undefined"!=typeof WeakMap?(n.sceneSettings.forEach((function(e){e(t)})),t.getExtension("OES_standard_derivatives"),t.getExtension("OES_element_index_uint"),e.f.gl=t,e.f.toggle=!1,e.f.blend={enabled:!1,toggle:!1},e.f.depthTest={enabled:!1,toggle:!1},e.f.stencilTest={enabled:!1,toggle:!1},e.f.scissor={enabled:!1,toggle:!1},e.f.colorMask={enabled:!1,toggle:!1},e.f.cullFace={enabled:!1,toggle:!1},e.f.polygonOffset={enabled:!1,toggle:!1},e.f.sampleCoverage={enabled:!1,toggle:!1},e.f.sampleAlphaToCoverage={enabled:!1,toggle:!1},e.f.shaders=[],e.f.programs={},e.f.lastProgId=null,e.f.buffers=new WeakMap,e.f.textures=new WeakMap,e.f.STENCIL_WRITEMASK=t.getParameter(t.STENCIL_WRITEMASK),Gn((function(){return u(fr,e,r)}))):(r=Ke.createElement("div")).innerHTML='<a href="https://get.webgl.org/">Enable WebGL</a> to see this content!',r}function xr(e,n){return n.f=e.f,fr(n)}var Cr=r((function(e,n){return new Float64Array([e,n])}));new Float64Array(3),new Float64Array(3),new Float64Array(3);var Pr=t((function(e,n,r){return new Float64Array([e,n,r])})),Mr=r((function(e,n){return new Float64Array([n[0]*e,n[1]*e,n[2]*e])})),Tr=o((function(e,n,r,t){return new Float64Array([e,n,r,t])}));new Float64Array(16),new Float64Array(16),new Float64Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);var yr=$,Lr=x,wr=t((function(e,n,t){var o=t.c,a=t.d,i=r((function(n,r){return f(Lr,n.$?e:i,r,n.a)}));return f(Lr,i,f(Lr,e,n,a),o)})),Sr=t((function(e,n,r){for(;;){if(-2===r.$)return n;var t=r.d,o=e,a=f(e,r.b,r.c,f(Sr,e,n,r.e));e=o,n=a,r=t}})),Nr=function(e){return f(Sr,t((function(e,n,r){return u(yr,L(e,n),r)})),z,e)},zr=1,Dr=2,$r=0,_r=function(e){return{$:1,a:e}},Ar=r((function(e,n){return{$:3,a:e,b:n}})),kr=r((function(e,n){return{$:0,a:e,b:n}})),Fr=r((function(e,n){return{$:1,a:e,b:n}})),Vr=function(e){return{$:0,a:e}},Rr=function(e){return{$:2,a:e}},Br=function(e){return{$:0,a:e}},Er={$:1},Ir=Ce,jr=J,Hr=r((function(e,n){return u(Z,e,A(n))})),Ur=r((function(e,n){return _(u(X,e,n))})),Or=t((function(e,n,r){for(;;){if(!r.b)return n;var t=r.b,o=e,a=u(e,r.a,n);e=o,n=a,r=t}})),Wr=function(e){return f(Or,r((function(e,n){return n+1})),0,e)},Gr=k,qr=t((function(e,n,r){for(;;){if(T(e,n)>=1)return r;var t=e,o=n-1,a=u(yr,n,r);e=t,n=o,r=a}})),Yr=r((function(e,n){return f(qr,e,n,z)})),Xr=r((function(e,n){return f(Gr,e,u(Yr,0,Wr(n)-1),n)})),Zr=function(e){var n=e.charCodeAt(0);return 55296>n||n>56319?n:1024*(n-55296)+e.charCodeAt(1)-56320+65536},Kr=function(e){return f(Or,yr,z,e)},Qr=function(e){var n=e.charCodeAt(0);return isNaN(n)?Er:Br(55296>n||n>56319?L(e[0],e.slice(1)):L(e[0]+e[1],e.slice(2)))},Jr=32,et=o((function(e,n,r,t){return{$:0,a:e,b:n,c:r,d:t}})),nt=[],rt=j,tt=r((function(e,n){return W(n)/W(e)})),ot=function(e){return e},at=rt(u(tt,2,Jr)),it=s(et,0,at,nt,nt),ct=b,lt=function(e){return{$:1,a:e}},ut=H,ft=function(e){return e.length},st=r((function(e,n){return T(e,n)>0?e:n})),dt=F,vt=g,mt=r((function(e,n){for(;;){var r=u(vt,Jr,e),t=r.b,o=u(yr,{$:0,a:r.a},n);if(!t.b)return Kr(o);e=t,n=o}})),pt=r((function(e,n){for(;;){var r=rt(n/Jr);if(1===r)return u(vt,Jr,e).a;e=u(mt,e,z),n=r}})),bt=r((function(e,n){if(n.o){var r=n.o*Jr,t=ut(u(tt,Jr,r-1)),o=e?Kr(n.D):n.D,a=u(pt,o,n.o);return s(et,ft(n.t)+r,u(st,5,t*at),a,n.t)}return s(et,ft(n.t),at,nt,n.t)})),gt=a((function(e,n,r,t,o){for(;;){if(0>n)return u(bt,!1,{D:t,o:r/Jr|0,t:o});var a=lt(f(ct,Jr,n,e));e=e,n-=Jr,r=r,t=u(yr,a,t),o=o}})),ht=r((function(e,n){if(e>0){var r=e%Jr;return d(gt,n,e-r-Jr,e,z,f(ct,r,e-r,n))}return it})),xt=function(e){return!e.$},Ct=ce,Pt=ae,Mt=te,Tt=function(e){return{$:2,a:e}},yt=function(e){return{$:6,a:e}},Lt=function(e){return{$:4,a:e}},wt=t((function(e,n,r){return n(e(r))})),St=le,Nt=ue,zt=function(e){return{$:0,a:e}},Dt=function(e){switch(e.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},$t=function(e){return e},_t=function(e){return e.length},At=K,kt=r((function(e,n){return 1>e?n:f(At,e,_t(n),n)})),Ft=Q,Vt=Te,Rt=Vt(0),Bt=o((function(e,n,r,t){if(t.b){var o=t.a,a=t.b;if(a.b){var i=a.a,c=a.b;if(c.b){var l=c.a,d=c.b;if(d.b){var v=d.b;return u(e,o,u(e,i,u(e,l,u(e,d.a,r>500?f(Or,e,n,Kr(v)):s(Bt,e,n,r+1,v)))))}return u(e,o,u(e,i,u(e,l,n)))}return u(e,o,u(e,i,n))}return u(e,o,n)}return n})),Et=t((function(e,n,r){return s(Bt,e,n,0,r)})),It=r((function(e,n){return f(Et,r((function(n,r){return u(yr,e(n),r)})),z,n)})),jt=Le,Ht=r((function(e,n){return u(jt,(function(n){return Vt(e(n))}),n)})),Ut=t((function(e,n,r){return u(jt,(function(n){return u(jt,(function(r){return Vt(u(e,n,r))}),r)}),n)})),Ot=function(e){return f(Et,Ut(yr),Vt(z),e)},Wt=Be,Gt=r((function(e,n){var r=n;return Ne(u(jt,Wt(e),r))}));Fe.Task=Ve(Rt,t((function(e,n){return u(Ht,(function(){return 0}),Ot(u(It,Gt(e),n)))})),t((function(){return Vt(0)})),r((function(e,n){return u(Ht,e,n)})));var qt=Ie("Task"),Yt=r((function(e,n){return qt(u(Ht,e,n))})),Xt=An,Zt=r((function(e,n){return{$:0,a:e,b:n}})),Kt=function(e){return{$:7,a:e}},Qt=r((function(e,n){return{$:5,a:e,b:n}})),Jt=r((function(e,n){return{$:3,a:e,b:n}})),eo=je,no=He,ro=function(e){return{$:1,a:e}},to=t((function(e,n,r){return{dh:r,eX:n,e0:e}})),oo=Vt(f(to,z,Er,0)),ao=function(e){return ye((function(n){var r=e.f;2===r.$&&r.c&&r.c(),e.f=null,n(Te(0))}))},io=ye((function(e){e(Te(Date.now()))})),co=ye((function(e){var n=Fn((function(){e(Te(Date.now()))}));return function(){kn(n)}})),lo=Ee,uo=Ne,fo=t((function(e,n,r){var t=r.eX,o=r.dh,a=L(t,n);return 1===a.a.$?a.b.b?u(jt,(function(e){return u(jt,(function(r){return Vt(f(to,n,Br(e),r))}),io)}),uo(u(jt,lo(e),co))):oo:a.b.b?Vt(f(to,n,t,o)):u(jt,(function(){return oo}),ao(a.a.a))})),so=$t,vo=t((function(e,n,r){var t=r.e0,o=r.dh,a=function(r){return u(Wt,e,(0,r.a)(r.$?n-o:so(n)))};return u(jt,(function(e){return u(jt,(function(){return Vt(f(to,t,Br(e),n))}),Ot(u(It,a,t)))}),uo(u(jt,lo(e),co)))})),mo=t((function(e,n,r){return e(n(r))}));Fe["Browser.AnimationManager"]=Ve(oo,fo,vo,0,r((function(e,n){return n.$?ro(u(mo,e,n.a)):{$:0,a:u(mo,e,n.a)}})));var po=Ie("Browser.AnimationManager"),bo=t((function(e,n,r){return{$:0,a:e,b:n,c:r}})),go=r((function(e,n){return{eP:n,e0:e}})),ho={$:-2},xo=ho,Co=Vt(u(go,z,xo)),Po=function(e){return L(N(e.a?"w_":"d_",e.b),e)},Mo=a((function(e,n,r,t,o){return{$:-1,a:e,b:n,c:r,d:t,e:o}})),To=a((function(e,n,r,t,o){if(-1!==o.$||o.a){if(-1!==t.$||t.a||-1!==t.d.$||t.d.a)return d(Mo,e,n,r,t,o);var a=t.d;return i=t.e,d(Mo,0,t.b,t.c,d(Mo,1,a.b,a.c,a.d,a.e),d(Mo,1,n,r,i,o))}var i,c=o.b,l=o.c,u=o.d,f=o.e;return-1!==t.$||t.a?d(Mo,e,c,l,d(Mo,0,n,r,t,u),f):d(Mo,0,n,r,d(Mo,1,t.b,t.c,t.d,i=t.e),d(Mo,1,c,l,u,f))})),yo=y,Lo=t((function(e,n,r){if(-2===r.$)return d(Mo,0,e,n,ho,ho);var t=r.a,o=r.b,a=r.c,i=r.d,c=r.e;switch(u(yo,e,o)){case 0:return d(To,t,o,a,f(Lo,e,n,i),c);case 1:return d(Mo,t,o,n,i,c);default:return d(To,t,o,a,i,f(Lo,e,n,c))}})),wo=t((function(e,n,r){var t=f(Lo,e,n,r);return-1!==t.$||t.a?t:d(Mo,1,t.b,t.c,t.d,t.e)})),So=function(e){return f(Or,r((function(e,n){return f(wo,e.a,e.b,n)})),xo,e)},No=t((function(e,n,r){for(;;){if(-2===r.$)return n;var t=r.e,o=e,a=f(e,r.b,r.c,f(No,e,n,r.d));e=o,n=a,r=t}})),zo=i((function(e,n,o,a,i,c){var l=f(No,t((function(r,t,a){e:for(;;){var i=a.a,c=a.b;if(i.b){var l=i.a,u=l.a,d=l.b,v=i.b;if(0>T(u,r)){r=r,t=t,a=L(v,f(e,u,d,c));continue e}return T(u,r)>0?L(i,f(o,r,t,c)):L(v,s(n,u,d,t,c))}return L(i,f(o,r,t,c))}})),L(Nr(a),c),i),u=l.a,d=l.b;return f(Or,r((function(n,r){return f(e,n.a,n.b,r)})),d,u)})),Do=r((function(e,n){return{d8:n,ef:e}})),$o=t((function(e,n,r){return u(Ht,(function(e){return L(n,e)}),f(En,r.a?Bn:Rn,r.b,(function(r){return u(lo,e,u(Do,n,r))})))})),_o=r((function(e,n){return f(No,wo,n,e)})),Ao=t((function(e,n,r){var a=t((function(n,r,t){var o=t.c;return w(t.a,t.b,u(yr,f($o,e,n,r),o))})),i=t((function(e,n,r){var t=r.b,o=r.c;return w(u(yr,n,r.a),t,o)})),c=o((function(e,n,r,t){var o=t.c;return w(t.a,f(wo,e,n,t.b),o)})),l=u(It,Po,n),s=v(zo,i,c,a,r.eP,So(l),w(z,xo,z)),d=s.b,m=s.c;return u(jt,(function(e){return Vt(u(go,l,u(_o,d,So(e))))}),u(jt,(function(){return Ot(m)}),Ot(u(It,ao,s.a))))})),ko=t((function(e,n,r){var t=e(n);return t.$?r:u(yr,t.a,r)})),Fo=r((function(e,n){return f(Et,ko(e),z,n)}));Fe["Browser.Events"]=Ve(Co,Ao,t((function(e,n,r){var t=n.ef,o=n.d8,a=u(Fo,(function(e){var n=e.b.c;return P(e.a,t)?u(In,n,o):Er}),r.e0);return u(jt,(function(){return Vt(r)}),Ot(u(It,Wt(e),a)))})),0,r((function(e,n){return f(bo,n.a,n.b,u(St,e,n.c))})));var Vo,Ro,Bo,Eo,Io,jo,Ho,Uo,Oo,Wo,Go,qo,Yo,Xo,Zo,Ko,Qo,Jo,ea,na,ra,ta,oa,aa,ia,ca,la,ua,fa,sa,da,va,ma,pa,ba,ga,ha,xa,Ca=Ie("Browser.Events"),Pa=t((function(e,n,r){return Ca(f(bo,e,n,r))})),Ma=u(Pa,0,"click"),Ta=u(Pa,0,"keydown"),ya=u(Pa,0,"keyup"),La=u(Pa,0,"mousedown"),wa=u(Pa,0,"mousemove"),Sa=u(Pa,0,"mouseup"),Na=ne,za=re,Da=r((function(e,n){return e(n?1:0)})),$a=function(e){var n=void 0!==Ke.hidden?{fI:"hidden",fn:"visibilitychange"}:void 0!==Ke.mozHidden?{fI:"mozHidden",fn:"mozvisibilitychange"}:void 0!==Ke.msHidden?{fI:"msHidden",fn:"msvisibilitychange"}:void 0!==Ke.webkitHidden?{fI:"webkitHidden",fn:"webkitvisibilitychange"}:{fI:"hidden",fn:"visibilitychange"};return f(Pa,0,n.fn,u(St,Da(e),u(Pt,"target",u(Pt,n.fI,za))))},_a=oe,Aa=function(e){return{$:3,b:e}},ka=Ye("touchCancel",Aa(u(Ct,(function(e){return u(Ct,(function(n){return u(Ct,(function(r){return zt({bF:r,dj:n,dk:e})}),u(Pt,"identifier",Na))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),Fa=Ye("touchEnd",Aa(u(Ct,(function(e){return u(Ct,(function(n){return u(Ct,(function(r){return zt({bF:r,dj:n,dk:e})}),u(Pt,"identifier",Na))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),Va=Ye("touchMove",Aa(u(Ct,(function(e){return u(Ct,(function(n){return u(Ct,(function(r){return zt({bF:r,dj:n,dk:e})}),u(Pt,"identifier",Na))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),Ra=Ye("touchStart",Aa(u(Ct,(function(e){return u(Ct,(function(n){return u(Ct,(function(r){return zt({bF:r,dj:n,dk:e})}),u(Pt,"identifier",Na))}),u(Pt,"pageX",Mt))}),u(Pt,"pageY",Mt)))),Ba=eo(u(It,no(yt),_([(Vo=Jt,f(Pa,1,"resize",u(Pt,"target",f(Nt,Vo,u(Pt,"innerWidth",Na),u(Pt,"innerHeight",Na))))),ya(u(St,Zt(!1),u(Pt,"key",_a))),Ta(u(St,Zt(!0),u(Pt,"key",_a))),(xa=u(wt,dt(.001),(function(e){return{$:1,a:e}})),po(ro(xa))),$a(Lt),Ma(zt({$:6})),La(zt(Kt(!0))),Sa(zt(Kt(!1))),wa(f(Nt,Qt,u(Pt,"pageX",Mt),u(Pt,"pageY",Mt))),Ra((function(e){return{$:8,a:e}})),Va((function(e){return{$:9,a:e}})),Fa((function(e){return{$:10,a:e}})),ka((function(e){return{$:11,a:e}}))]))),Ea=o((function(e,n,r,t){return{cQ:t,a5:r,b2:e,b3:n}})),Ia=xo,ja={cI:!1,a5:!1,cX:!1,S:Ia,ar:!1,bh:!1,dF:!1,dG:!1,cD:!1},Ha=r((function(e,n){return S(n,{cQ:e})})),Ua=r((function(e,n){return S(n,{a5:e})})),Oa=t((function(e,n,r){return S(r,{b2:e,b3:n})})),Wa=function(e){if(-1===e.$&&-1===e.d.$&&-1===e.e.$){if(-1!==e.e.d.$||e.e.d.a){var n=e.d,r=e.e;return i=r.b,c=r.c,t=r.d,f=r.e,d(Mo,1,e.b,e.c,d(Mo,0,n.b,n.c,n.d,n.e),d(Mo,0,i,c,t,f))}var t,o=e.d,a=e.e,i=a.b,c=a.c,l=(t=a.d).d,u=t.e,f=a.e;return d(Mo,0,t.b,t.c,d(Mo,1,e.b,e.c,d(Mo,0,o.b,o.c,o.d,o.e),l),d(Mo,1,i,c,u,f))}return e},Ga=function(e){if(-1===e.$&&-1===e.d.$&&-1===e.e.$){if(-1!==e.d.d.$||e.d.d.a){var n=e.d,r=e.e;return u=r.b,f=r.c,s=r.d,v=r.e,d(Mo,1,t=e.b,o=e.c,d(Mo,0,n.b,n.c,n.d,c=n.e),d(Mo,0,u,f,s,v))}var t=e.b,o=e.c,a=e.d,i=a.d,c=a.e,l=e.e,u=l.b,f=l.c,s=l.d,v=l.e;return d(Mo,0,a.b,a.c,d(Mo,1,i.b,i.c,i.d,i.e),d(Mo,1,t,o,c,d(Mo,0,u,f,s,v)))}return e},qa=c((function(e,n,r,t,o,a,i){if(-1!==a.$||a.a){e:for(;;){if(-1===i.$&&1===i.a){if(-1===i.d.$){if(1===i.d.a)return Ga(n);break e}return Ga(n)}break e}return n}return d(Mo,r,a.b,a.c,a.d,d(Mo,0,t,o,a.e,i))})),Ya=function(e){if(-1===e.$&&-1===e.d.$){var n=e.a,r=e.b,t=e.c,o=e.d,a=o.d,i=e.e;if(1===o.a){if(-1!==a.$||a.a){var c=Wa(e);if(-1===c.$){var l=c.e;return d(To,c.a,c.b,c.c,Ya(c.d),l)}return ho}return d(Mo,n,r,t,Ya(o),i)}return d(Mo,n,r,t,Ya(o),i)}return ho},Xa=r((function(e,n){if(-2===n.$)return ho;var r=n.a,t=n.b,o=n.c,a=n.d,i=n.e;if(0>T(e,t)){if(-1===a.$&&1===a.a){var c=a.d;if(-1!==c.$||c.a){var l=Wa(n);if(-1===l.$){var f=l.e;return d(To,l.a,l.b,l.c,u(Xa,e,l.d),f)}return ho}return d(Mo,r,t,o,u(Xa,e,a),i)}return d(Mo,r,t,o,u(Xa,e,a),i)}return u(Za,e,m(qa,e,n,r,t,o,a,i))})),Za=r((function(e,n){if(-1===n.$){var r=n.a,t=n.b,o=n.c,a=n.d,i=n.e;if(P(e,t)){var c=function(e){for(;;){if(-1!==e.$||-1!==e.d.$)return e;e=e.d}}(i);return-1===c.$?d(To,r,c.b,c.c,a,Ya(i)):ho}return d(To,r,t,o,a,u(Xa,e,i))}return ho})),Ka=r((function(e,n){var r=u(Xa,e,n);return-1!==r.$||r.a?r:d(Mo,1,r.b,r.c,r.d,r.e)})),Qa=r((function(e,n){return{dZ:-n/2,c_:n,ar:-e/2,bh:e/2,bY:n/2,dR:e}})),Ja=r((function(e,n){return f(wo,e,0,n)})),ei=r((function(e,n){return u(Ka,e,n)})),ni=t((function(e,n,r){var t=u(e?Ja:ei,n,r.S);switch(n){case" ":return S(r,{S:t,dG:e});case"Enter":return S(r,{cX:e,S:t});case"Shift":return S(r,{S:t,dF:e});case"Backspace":return S(r,{cI:e,S:t});case"ArrowUp":return S(r,{S:t,cD:e});case"ArrowDown":return S(r,{a5:e,S:t});case"ArrowLeft":return S(r,{S:t,ar:e});case"ArrowRight":return S(r,{S:t,bh:e});default:return S(r,{S:t})}})),ri=r((function(e,n){switch(e.$){case 1:var r=e.a;return S(n,n.M.cQ?{M:u(Ha,!1,n.M),bm:n.bm+r}:{bm:n.bm+r});case 2:var t=e.a.gr;return S(n,{ak:u(Qa,t.dR,t.c_)});case 3:return S(n,{ak:u(Qa,e.a,e.b)});case 0:return S(n,{bG:f(ni,e.a,e.b,n.bG)});case 5:return S(n,{M:f(Oa,n.ak.ar+e.a,n.ak.bY-e.b,n.M)});case 6:return S(n,{M:u(Ha,!0,n.M)});case 7:return S(n,{M:u(Ua,e.a,n.M)});case 8:case 9:return S(n,{am:f(Or,(function(e){return u(wo,e.bF,{b2:n.ak.ar+e.dj,b3:n.ak.bY-e.dk})}),n.am,e.a)});case 10:case 11:return S(n,{am:f(Or,(function(e){return Ka(e.bF)}),n.am,e.a)});default:return S(n,{bG:ja,M:s(Ea,n.M.b2,n.M.b3,!1,!1)})}})),ti=r((function(e,n){return{V:n,_:e}})),oi=f(Nt,r((function(e,n){return L(e,n)})),u(Pt,"A1",_a),u(Pt,"A2",_a)),ai=fe,ii=s(ai,t((function(e,n,r){return w(e,n,r)})),u(Pt,"A1",Mt),u(Pt,"A2",Mt),u(Pt,"A3",Mt)),ci=f(Nt,r((function(e,n){return L(e,n)})),u(Pt,"A1",_a),u(Pt,"A2",ii)),li=f(Nt,ti,u(Pt,"floats",Aa(ci)),u(Pt,"colors",Aa(oi))),ui=se,fi=r((function(e,n){return{V:n,aS:"",_:e,aE:""}})),si=u(fi,z,z),di=r((function(e,n){return n.$?Er:e(n.a)})),vi=r((function(e,n){return n.$?_r(n.a):e(n.a)})),mi=o((function(e,n,r,t){return{fL:n,fX:e,f1:r,gf:t}})),pi=Hn,bi=r((function(e,n){return n.$?_r(e):Vr(n.a)})),gi=jn,hi=function(e){return e.b?Br(e.a):Er},xi=r((function(e,n){return n.$?Er:Br(e(n.a))})),Ci=r((function(e,n){return n.$?_r(n.a):Vr(e(n.a))})),Pi=r((function(e,n){return Zr(n)-Zr(e)})),Mi=t((function(e,n,r){var t=Zr(r);return 1>T(Zr(e),t)&&1>T(t,Zr(n))})),Ti=r((function(e,n){var r=f(Mi,"0","9",n)?Vr(u(Pi,"0",n)):f(Mi,"a","z",n)?Vr(10+u(Pi,"a",n)):f(Mi,"A","Z",n)?Vr(10+u(Pi,"A",n)):_r({$:0,a:n});return u(vi,(function(r){return 0>T(r,e)?Vr(r):_r({$:1,a:n})}),r)})),yi=r((function(e,n){var r=Qr(n);if(1===r.$)return Vr(0);var t=r.a,o=t.b;return u(vi,(function(n){return u(vi,(function(r){return Vr(n+r*e)}),u(yi,e,o))}),u(Ti,e,t.a))})),Li=function(e){for(var n=e.length,r=Array(n),t=0;n>t;){var o=e.charCodeAt(t);55296>o||o>56319?(r[n-t]=e[t],t++):(r[n-t]=e[t+1],r[n-++t]=e[t-1],t++)}return r.join("")},wi=r((function(e,n){return 2>e||e>36?_r({$:2,a:e}):u(yi,e,Li(n))})),Si=wi(16),Ni=o((function(e,n,r,t){return{$:0,a:e,b:n,c:r,d:t}})),zi=t((function(e,n,r){return s(Ni,e,n,r,1)})),Di=o((function(e,n,r,t){return s(Ni,e,n,r,t)})),$i=V,_i=U,Ai=r((function(e,n){var r=u($i,10,e);return _i(n*r)/r})),ki=Y,Fi=function(e){return f(ki,yr,z,e)},Vi=(Ro=function(e){var n=Fi(e);if(n.b&&!n.b.b){var r=n.a;return A(_([r,r])).join("")}return e},u(wt,(function(e){return e.toLowerCase()}),u(wt,(function(e){return u(xi,(function(n){return f(pi,1,n,e)}),u(gi,{fk:!1,fZ:!1},"^#?(?:(?:([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2}))|(?:([a-f\\d])([a-f\\d])([a-f\\d]))|(?:([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2}))|(?:([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])))$"))}),u(wt,di(hi),u(wt,xi((function(e){return e.gf})),u(wt,xi(Fo($t)),u(wt,bi("Parsing hex regex failed"),vi((function(e){var n=u(It,u(wt,Ro,u(wt,Si,Ci(ot))),e);e:for(;;){if(n.b&&!n.a.$&&n.b.b&&!n.b.a.$&&n.b.b.b&&!n.b.b.a.$){if(n.b.b.b.b){if(n.b.b.b.a.$||n.b.b.b.b.b)break e;var r=n.b,t=r.b;return Vr(s(Di,n.a.a/255,r.a.a/255,t.a.a/255,u(Ai,2,t.b.a.a/255)))}var o=n.b;return Vr(f(zi,n.a.a/255,o.a.a/255,o.b.a.a/255))}break e}return _r("Parsing ints from hex failed")}))))))))),Ri=r((function(e,n){return L(n.a,e(n.b))})),Bi=s(Ni,1,1,1,1),Ei=r((function(e,n){return n.$?e:n.a})),Ii=u(wt,ui(li),u(wt,Ci((function(e){return{V:u(It,Ri(u(wt,Vi,Ei(Bi))),e.V),aS:"",_:e._,aE:""}})),Ei(si))),ji=function(e){return f(Or,r((function(e,n){return f(Me,e.a,e.b,n)})),{},e)},Hi=Pe,Ui=function(e){var n=e.b;return ji(_([L("A1",Hi(e.a)),L("A2",Hi(n))]))},Oi=Pe,Wi=function(e){var n=e.b,r=e.c;return ji(_([L("A1",Oi(e.a)),L("A2",Oi(n)),L("A3",Oi(r))]))},Gi=function(e){var n=e.b;return ji(_([L("A1",Hi(e.a)),L("A2",Wi(n))]))},qi=r((function(e,n){return f(Or,function(e){return r((function(n,r){return r.push(e(n)),r}))}(e),[],n)})),Yi=q,Xi=function(e){return u(Yi,e,"")},Zi=t((function(e,n,r){return e>0?f(Zi,e>>1,N(n,n),1&e?N(r,n):r):r})),Ki=r((function(e,n){return f(Zi,e,n,"")})),Qi=t((function(e,n,r){return N(u(Ki,e-_t(r),Xi(n)),r)})),Ji=function(e){return 0>e||e>1114111?"�":e>65535?String.fromCharCode(Math.floor((e-=65536)/1024)+55296,e%1024+56320):String.fromCharCode(e)},ec=R,nc=function(e){var n=function(e){return 10>e?jr(e):Xi(Ji(87+e))};return 16>e?n(e):N(nc(e/16|0),n(u(ec,16,e)))},rc=u(wt,nc,u(Qi,2,"0")),tc=function(e){return{a4:e.d,cN:e.c,cZ:e.b,dy:e.a}},oc=function(e){var n=tc(e),r=n.dy,t=n.cZ,o=n.cN;return u(Hr,"",u(yr,"#",u(It,u(wt,_i,rc),_([255*r,255*t,255*o]))))},ac=u(wt,(function(e){return{V:u(It,Ri(oc),e.V),_:e._}}),u(wt,(function(e){return ji(_([L("floats",u(qi,Gi,e._)),L("colors",u(qi,Ui,e.V))]))}),Ir(0))),ic=function(e){return 0>e?-e:e},cc=function(e){if(0===e.length||/[\sxbo]/.test(e))return Er;var n=+e;return n==n?Br(n):Er},lc=r((function(e,n){return n.$?e:n.a})),uc=t((function(e,n,r){return u(lc,NaN,cc(u(e,n,r)))})),fc=function(e){return!e},sc=r((function(e,n){for(;;){if(!n.b)return!1;var r=n.b;if(e(n.a))return!0;e=e,n=r}})),dc=r((function(e,n){var r=u(sc,(function(e){return"0"!==e&&"."!==e}),Fi(n));return N(e&&r?"-":"",n)})),vc=J,mc=function(e){var n=e.a,r=e.b;if("9"===n){var t=Qr(r);return 1===t.$?"01":u(Yi,"0",mc(t.a))}var o=Zr(n);return o>=48&&57>o?u(Yi,Ji(o+1),r):"0"},pc=function(e){return e===1/0||e===-1/0},bc=G,gc=t((function(e,n,r){return N(r,u(Ki,e-_t(r),Xi(n)))})),hc=function(e){var n=u(Ur,".",e);return n.b?L(n.a,n.b.b?n.b.a:"0"):L("0","0")},xc=r((function(e,n){var r=n.b;return L(e(n.a),r)})),Cc=t((function(e,n,r){if(pc(r)||bc(r))return vc(r);var t=0>r,o=hc(function(e){var n=u(Ur,"e",vc(ic(e)));if(n.b){if(n.b.b){var r=n.a,t=n.b.a,o=u(lc,0,function(e){for(var n=0,r=e.charCodeAt(0),t=43==r||45==r?1:0,o=t;e.length>o;++o){var a=e.charCodeAt(o);if(48>a||a>57)return Er;n=10*n+a-48}return o==t?Er:Br(45==r?-n:n)}(u(Ft,"+",t)?u(kt,1,t):t)),a=hc(r),i=N(a.a,a.b),c=0>o?u(lc,"0",u(xi,(function(e){return e.a+"."+e.b}),u(xi,xc(Xi),Qr(N(u(Ki,ic(o),"0"),i))))):f(gc,o+1,"0",i);return N(0>e?"-":"",c)}return N(0>e?"-":"",r=n.a)}return""}(ic(r))),a=o.a,i=o.b,c=_t(a)+n,l=N(u(Ki,1-c,"0"),f(gc,c,"0",N(a,i))),s=_t(l),d=u(st,1,c),v=u(e,t,f(At,d,s,l)),m=f(At,0,d,l),p=v?Li(u(lc,"1",u(xi,mc,Qr(Li(m))))):m,b=_t(p),g="0"===p?p:n>0?0>T(n,_t(i))?f(At,0,b-n,p)+"."+f(At,b-n,b,p):N(a+".",f(gc,n,"0",i)):N(p,u(Ki,ic(n),"0"));return u(dc,t,g)})),Pc=Cc(r((function(e,n){var r,t=Qr(n);return 1!==t.$&&("5"===t.a.a?""!==t.a.b||!e:(r=Zr(t.a.a))>53&&e||r>=53&&!e)}))),Mc=uc(Pc),Tc=t((function(e,n,r){var t=u(tt,10,ic(n-e));return u(Mc,0>t?3:1>t?2:2>t?1:0,r)})),yc=r((function(e,n){switch(e.$){case 2:var r=Ii(n.aE);return S(r,{aS:r.aS,aE:r.aE});case 3:return S(n,{aE:e.a});case 4:return S(n,{aS:ac(n)});case 0:var t=e.a,o=e.b;return S(n,{_:u(It,(function(e){var n=e.a,r=e.b,a=r.a,i=r.c;return P(n,t)?L(n,w(a,f(Tc,a,i,o),i)):e}),n._)});default:return t=e.a,o=e.b,S(n,{V:u(It,(function(e){var n=e.a;return P(n,t)?L(n,o):e}),n.V)})}})),Lc=o((function(e,n,r,t){var o=t.L;switch(r.$){case 0:return t;case 1:return S(t,{bq:r.a});case 2:return S(t,{bx:!1});case 3:return S(t,{bx:!0});case 4:return S(t,{aq:f(n,t.L,r.a,t.aq)});case 5:return S(t,{L:S(o,{cd:u(yc,r.a,o.cd)})});default:var a=r.a,i=1===a.$?u(e,o,t.aq):t.aq;return S(t,{L:u(ri,a,t.L),aq:i})}})),wc=(ha=function(){return{eZ:(e=Rn.body,n=Rn.documentElement,{dR:Math.max(e.scrollWidth,e.offsetWidth,n.scrollWidth,n.offsetWidth,n.clientWidth),c_:Math.max(e.scrollHeight,e.offsetHeight,n.scrollHeight,n.offsetHeight,n.clientHeight)}),gr:{b2:Bn.pageXOffset,b3:Bn.pageYOffset,dR:Rn.documentElement.clientWidth,c_:Rn.documentElement.clientHeight}};var e,n},ye((function(e){Fn((function(){e(Te(ha()))}))}))),Sc=r((function(e,n){return{cd:n,cV:e.cV,bG:ja,M:s(Ea,0,0,!1,!1),ak:u(Qa,600,600),bm:0,am:xo}})),Nc=je,zc=Nc(z),Dc=function(e){return{$:5,a:e}},$c=function(e){return{$:4,a:e}},_c={$:2},Ac={$:0},kc=function(e){return{$:1,a:e}},Fc={$:3},Vc=r((function(e){return e})),Rc=nn("button"),Bc=nn("div"),Ec=function(e){return e?"Level Editor":"Configurations"},Ic=function(e){return u(lc,0,hi(u(Fo,(function(n){return P(Ec(n),e)?Br(n):Er}),_([0,1]))))},jc=tn,Hc=jc,Uc=on,Oc=r((function(e,n){return u(Uc,e,{$:0,a:n})})),Wc=r((function(e,n){return f(Et,Pt,n,e)})),Gc=u(Wc,_(["target","value"]),_a),qc=function(e){return u(Oc,"change",u(St,e,Gc))},Yc=function(e){return u(Oc,"click",zt(e))},Xc=nn("option"),Zc=nn("select"),Kc=an,Qc=Kc,Jc=Je,el=Jc,nl=r((function(e,n){return u(cn,e,Hi(n))})),rl=nl("value"),tl=r((function(e,n){return{$:1,a:e,b:n}})),ol=r((function(e,n){return{$:0,a:e,b:n}})),al=s(Ni,0,0,0,1),il=u(Rc,_([u(Qc,"cursor","pointer"),Yc({$:4})]),_([el("Export Configurations as json")])),cl=nn("h3"),ll=nn("p"),ul=Pe,fl=r((function(e,n){return u(cn,e,ul(n))})),sl=fl("readOnly"),dl=nn("textarea"),vl=function(e){return u(Bc,z,_([u(dl,_([sl(!0)]),_([el(e.aS)]))]))},ml=function(e){return u(Bc,z,_([u(cl,z,_([el("Export Configurations")])),u(ll,z,_([il])),u(ll,z,_([vl(e)]))]))},pl=nl("htmlFor"),bl=nn("hr"),gl=nl("id"),hl=u(Rc,_([u(Qc,"cursor","pointer"),Yc({$:2})]),_([el("Import Configurations")])),xl=function(e){return{$:3,a:e}},Cl=function(e){return L(e,!0)},Pl=r((function(e,n){return u(Uc,e,{$:1,a:n})})),Ml=function(e){return u(Pl,"input",u(St,Cl,u(St,e,Gc)))},Tl=function(e){return u(Bc,z,_([u(dl,_([Ml(xl)]),_([el(e.aE)]))]))},yl=function(e){return u(Bc,z,_([u(cl,z,_([el("Import Configurations")])),u(ll,z,_([Tl(e)])),u(ll,z,_([hl]))]))},Ll=nn("input"),wl=nn("label"),Sl=nl("max"),Nl=nl("min"),zl=nl("name"),Dl=nn("span"),$l=nl("type"),_l=t((function(e,n,t){var o,a,i,c=u(Bc,_([u(Qc,"position","fixed"),u(Qc,"top","0px"),u(Qc,"left","0px"),u(Qc,"width",vc(t.L.ak.dR)+"px"),u(Qc,"height",vc(t.L.ak.c_)+"px"),u(Qc,"font-size","16px")]),_([u(Hc,Vc(Ac),u(e,t.L,t.aq))])),l=t.bq?u(Hc,$c,u(n,t.L,t.aq)):u(Hc,Dc,(o=t.L.cd,a=function(e){var n=e.a,r=e.b,t=r.a,o=r.b,a=r.c;return u(Bc,_([u(Qc,"margin-top","15px")]),_([u(Bc,z,_([u(wl,_([pl(n)]),_([el(n),el(": "),u(Dl,_([u(Qc,"font-family","monospace"),u(Qc,"font-weight","bold")]),_([el(vc(o))]))]))])),u(Ll,_([$l("range"),gl(n),zl(n),Nl(vc(t)),Sl(vc(a)),Ml((function(e){return u(ol,n,u(lc,0,cc(e)))})),u(nl,"step","any"),u(Qc,"width","200px"),rl(vc(o))]),z)]))},i=function(e){var n=e.a,r=e.b;return u(Bc,_([u(Qc,"margin-top","15px")]),_([u(Bc,z,_([u(wl,_([pl(n)]),_([el(n)]))])),u(Ll,_([$l("color"),u(Qc,"width","200px"),u(Qc,"height","30px"),gl(n),zl(n),Ml((function(e){return u(tl,n,u(Ei,al,Vi(e)))})),rl(oc(r))]),z)]))},u(Bc,_([u(Qc,"margin-left","20px"),u(Qc,"height","100%"),u(Qc,"overflow","scroll")]),_([u(Bc,z,u(It,a,o._)),u(Bc,z,u(It,i,o.V)),u(bl,z,z),ml(o),yl(o)])))),f=u(Bc,_([u(Qc,"margin-left","0px")]),_([u(Zc,_([qc(u(wt,Ic,kc)),rl(Ec(t.bq)),u(Qc,"width","200px"),u(Qc,"height","40px"),u(Qc,"font-size","20px")]),u(It,(function(e){return u(Xc,_([rl(Ec(e))]),_([el(Ec(e))]))}),_([0,1])))])),s=r((function(e,n){return u(Rc,_([u(Qc,"font-size","30px"),u(Qc,"width","40px"),u(Qc,"height","40px"),Yc(e)]),_([el(n)]))})),d=u(Bc,_([u(Qc,"position","fixed"),u(Qc,"top","0px"),u(Qc,"left","0px"),u(Qc,"width",vc(250)+"px"),u(Qc,"height",vc(t.L.ak.c_)+"px"),u(Qc,"font-family",'-apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif'),u(Qc,"font-size","16px")]),_(t.bx?[u(Bc,_([u(Qc,"height","100px")]),_([u(s,_c,"✕"),f])),u(Bc,_([u(Qc,"height",vc(t.L.ak.c_-100)+"px")]),_([l]))]:[u(s,Fc,"≡")]));return u(Bc,_([u(Qc,"touch-action","none"),u(Qc,"user-select","none")]),_([c,d]))})),Al=i((function(e,n,t,o,a,i){return Xt({fM:function(e){var n=u(Sc,e,t);return L({bq:0,L:n,bx:!1,aq:o(n),dQ:0},u(Yt,u(wt,Tt,yt),wc))},gg:function(e){return 1===e.dQ?u(no,yt,$a(Lt)):Ba},go:r((function(e,r){return L(s(Lc,n,i,e,r),zc)})),gq:u(_l,e,a)})})),kl={ff:150,bL:1,gm:(Bo=function(e){var n=e.a;return L(L(e.b,e.c),n?1:0)},{a:xo,ad:Bo})},Fl=fi,Vl=Fl,Rl=3.141592653589793,Bl=function(e){return e*Rl/180},El=u(Vl,_([L("camera x",w(-40,0,40)),L("camera y",w(-40,0,0)),L("camera z",w(1,20,50)),L("trixel scale",w(.5,1,1)),L("minimum rotation degree",w(-Bl(180),0,0)),L("maximum rotation degree",w(0,0,Bl(180))),L("rotation period",w(1,5,20))]),z),Il=t((function(e,n,r){return{$:0,a:e,b:n,c:r}})),jl=function(e){var n=e.cC,r=e.cF,t=function(e){return e-ut(e)};return 1>t(n)+t(r)?f(Il,0,ut(n),ut(r)):f(Il,1,ut(n),ut(r))},Hl=t((function(e,n,r){var t=r;return S(t,{a:f(wo,t.ad(e),L(e,n),t.a)})})),Ul=t((function(e,n,r){return S(r,{gm:f(Hl,e,n,r.gm)})})),Ol=r((function(e,n){return S(n,{r:e(n.r)})})),Wl=r((function(e,n){return S(n,{l:u(Ol,e,n.l)})})),Gl=r((function(e,n){return e.M.a5?u(Wl,u(Ul,jl(n.bd),n.av),n):n})),ql=r((function(e,n){return u(lc,0,hi(u(Fo,(function(n){var r=n.b.b;return P(n.a,e)?Br(r):Er}),n._)))})),Yl=r((function(e,n){return u(ql,e,n.cd)})),Xl=Yl,Zl=function(e){return Rl*(e/180)},Kl=O,Ql=r((function(e,n){var r=n.a3-e.a3,t=n.b3-e.b3,o=n.b2-e.b2,a=u(st,ic(o),u(st,ic(t),ic(r)));if(a){var i=r/a,c=t/a,l=o/a,f=Kl(l*l+c*c+i*i);return Br({b2:l/f,b3:c/f,a3:i/f})}return Er})),Jl=r((function(e,n){return{b2:n.b3*e.a3-n.a3*e.b3,b3:n.a3*e.b2-n.b2*e.a3,a3:n.b2*e.b3-n.b3*e.b2}})),eu=function(e){var n=e,r=u(st,ic(n.b2),u(st,ic(n.b3),ic(n.a3)));if(r){var t=n.a3/r,o=n.b3/r,a=n.b2/r,i=Kl(a*a+o*o+t*t);return Br({b2:a/i,b3:o/i,a3:t/i})}return Er},nu=r((function(e,n){return{b2:n.b2-e.b2,b3:n.b3-e.b3,a3:n.a3-e.a3}})),ru=r((function(e,n){return n.b2*e.b2+n.b3*e.b3+n.a3*e.a3})),tu=r((function(e,n){return T(n,e)>0})),ou=r((function(e,n){return 0>T(n,e)})),au=r((function(e,n){return{b2:n.b2-e.b2,b3:n.b3-e.b3,a3:n.a3-e.a3}})),iu=r((function(e,n){var r=n.b2*e.b2+n.b3*e.b3+n.a3*e.a3;return{b2:e.b2*r,b3:e.b3*r,a3:e.a3*r}})),cu={b2:0,b3:0,a3:0},lu=t((function(e,n,r){return u(di,(function(t){return u(di,(function(o){var a,i=u(Jl,n,e),c=u(ru,r,i),l=u(tu,0,c)?i:u(ou,0,c)?{b2:-(a=i).b2,b3:-a.b3,a3:-a.a3}:cu;return u(xi,(function(e){return w(t,o,e)}),eu(l))}),eu(u(au,u(iu,t,n),n)))}),eu(e))})),uu=function(e){var n=function(e){var n=e,r=ic(n.a3),t=ic(n.b3),o=ic(n.b2);if(1>T(o,t)){if(1>T(o,r)){var a=Kl(n.a3*n.a3+n.b3*n.b3);return{b2:0,b3:-n.a3/a,a3:n.b3/a}}return a=Kl(n.b3*n.b3+n.b2*n.b2),{b2:-n.b3/a,b3:n.b2/a,a3:0}}return 1>T(t,r)?(a=Kl(n.a3*n.a3+n.b2*n.b2),{b2:n.a3/a,b3:0,a3:-n.b2/a}):(a=Kl(n.b2*n.b2+n.b3*n.b3),{b2:-n.b3/a,b3:n.b2/a,a3:0})}(e);return L(n,{b2:e.b3*n.a3-e.a3*n.b3,b3:e.a3*n.b2-e.b2*n.a3,a3:e.b2*n.b3-e.b3*n.b2})},fu=r((function(e,n){var r=uu(e);return{di:n,dT:r.a,dU:r.b,dV:e}})),su=function(e){var n=u(nu,e.fC,e.fz),r=e.gn,t=f(lu,n,r,u(Jl,n,r));if(t.$){var o=eu(n);if(o.$){var a=uu(e.gn);return{di:e.fz,dT:a.b,dU:e.gn,dV:a.a}}return u(fu,o.a,e.fz)}var i=t.a;return{di:e.fz,dT:i.c,dU:i.b,dV:i.a}},du={b2:0,b3:0,a3:0},vu=function(e){return ic(e)},mu=function(e){return.5*e},pu=I,bu={b2:0,b3:1,a3:0},gu=function(e){return a=(o={fz:{b2:u(Xl,"camera x",e),b3:u(Xl,"camera y",e),a3:u(Xl,"camera z",e)},fC:{b2:0,b3:0,a3:0},gn:{b2:0,b3:1,a3:0}}).fC,i=o.fz,c=o.gn,n={e6:Zl(40),dP:su({fz:i,fC:a,gn:u(lc,bu,u(Ql,du,c))})},t=mu(vu(n.e6)),{dx:(r=pu(t),{$:0,a:r}),dP:n.dP};var n,r,t,o,a,i,c},hu=function(e){var n=e.b2,r=e.b3;return{cC:2/Kl(3)*n,cF:-1/Kl(3)*n+r}},xu=t((function(e,n,r){return{b2:e,b3:n,a3:r}})),Cu=r((function(e,n){return n.b2*e.b2+n.b3*e.b3+n.a3*e.a3})),Pu=function(e){return e.fs},Mu=r((function(e,n){return e*n})),Tu=function(e){return e.di},yu=r((function(e,n){var r=e.di,t=e.f0;return(n.b2-r.b2)*t.b2+(n.b3-r.b3)*t.b3+(n.a3-r.a3)*t.a3})),Lu=t((function(e,n,r){return{b2:r.b2+n*e.b2,b3:r.b3+n*e.b3,a3:r.a3+n*e.a3}})),wu=r((function(e,n){var r=Pu(n),t=u(Cu,e.f0,r);if(t){var o=Tu(n);return Br(f(Lu,r,u(Mu,-1/t,u(yu,e,o)),o))}return Er})),Su=r((function(e,n){return{b2:e,b3:n}})),Nu=r((function(e,n){return e*n})),zu=function(e){return e.fd},Du=r((function(e,n){return n/e})),$u=function(e){return e.di},_u=function(e){return $u(e)},Au=function(e){return-e},ku={b2:0,b3:0,a3:-1},Fu=r((function(e,n){return n/e})),Vu=r((function(e,n){var r=e.dV,t=e.dU,o=e.dT;return{b2:o.b2*n.b2+t.b2*n.b3+r.b2*n.a3,b3:o.b3*n.b2+t.b3*n.b3+r.b3*n.a3,a3:o.a3*n.b2+t.a3*n.b3+r.a3*n.a3}})),Ru=r((function(e,n){return{fs:n,di:e}})),Bu=function(e){return{b2:-e.b2,b3:-e.b3,a3:-e.a3}},Eu=function(e){return e.dV},Iu=function(e){return Bu(Eu(e))},ju=r((function(e,n){var r=e.di,t=e.dT;return(n.b2-r.b2)*t.b2+(n.b3-r.b3)*t.b3})),Hu=t((function(e,n,r){return{b2:e,b3:n,a3:r}})),Uu=o((function(e,n,r,t){var o=e.di,a=e.dV,i=e.dU,c=e.dT;return{b2:o.b2+n*c.b2+r*i.b2+t*a.b2,b3:o.b3+n*c.b3+r*i.b3+t*a.b3,a3:o.a3+n*c.a3+r*i.a3+t*a.a3}})),Ou=r((function(e,n){var r=e.di,t=e.dU;return(n.b2-r.b2)*t.b2+(n.b3-r.b3)*t.b3})),Wu=t((function(e,n,r){var t=e,o=u(Ou,zu(n),r),a=u(ju,zu(n),r),i=t.dP,c=function(e){return e.d3}(n).b,l=t.dx;if(l.$){var d=u(Fu,c,l.a);return u(Ru,s(Uu,i,u(Nu,d,a),u(Nu,d,o),0),Iu(t.dP))}var v=Au(u(Du,l.a,u(Mu,.5,c))),m=u(Vu,i,u(lc,ku,eu(f(Hu,a,o,v))));return u(Ru,_u(t.dP),m)})),Gu=B,qu=E,Yu=function(e){var n=e;return{b2:Gu(n),b3:qu(n)}},Xu=r((function(e,n){return{di:n,dT:e,dU:(r=e,{b2:-r.b3,b3:r.b2})};var r})),Zu=r((function(e,n){return u(Xu,Yu(e),n)})),Ku=t((function(e,n,r){var t=e.a,o=e.b;return{fd:u(Zu,n,r),d3:L(vu(t),vu(o))}})),Qu=function(e){return e.b2},Ju=r((function(e,n){return{b2:e,b3:n}})),ef=function(e){return e.b3},nf=function(e){return e.a3},rf=o((function(e,n,r,t){var o=r.b2,a=r.b3,i=f(Ku,L(n.dR,n.c_),Zl(0),u(Su,0,0));return u(xi,(function(e){return f(xu,Qu(e),ef(e),nf(e))}),u(wu,t,f(Wu,e,i,u(Ju,o,a))))})),tf=r((function(e,n){return{b2:n.b2+e.b2,b3:n.b3+e.b3,a3:n.a3+e.a3}})),of=r((function(e,n){return{f0:e,di:n}})),af=r((function(e,n){return u(of,n.f0,u(tf,e,n.di))})),cf=r((function(e,n){return{f0:n,di:e}})),lf={b2:0,b3:0,a3:1},uf=lf,ff=u(cf,du,uf),sf=o((function(e,n,r,t){return s(rf,n,r,t,u(af,f(Hu,0,0,e),ff))})),df=sf(0),vf=r((function(e,n){return f(No,r((function(r,t){var o=f(df,gu(e),e.ak,t);if(1===o.$)return $t;var a=o.a;return Wl(u(Ul,jl(hu({b2:a.b2,b3:a.b3})),n.av))})),n,e.am)})),mf=r((function(e,n){var r=n;return S(r,{a:u(Ka,r.ad(e),r.a)})})),pf=r((function(e,n){return S(n,{gm:u(mf,e,n.gm)})})),bf=r((function(e,n){return e.bG.dF&&e.M.a5?u(Wl,pf(jl(n.bd)),n):n})),gf=r((function(e,n){var r=f(df,gu(e),e.ak,e.M);if(1===r.$)return n;var t=r.a;return S(n,{bd:hu({b2:t.b2,b3:t.b3})})})),hf=r((function(e,n){return u(bf,e,u(vf,e,u(Gl,e,u(gf,e,n))))})),xf=r((function(e,n){return S(n,{n:u(yr,n.r,n.n),r:e})})),Cf=function(e){var n=e.F;if(n.b){var r=n.a;return Br({F:n.b,n:u(yr,e.r,e.n),r:r})}return Er},Pf=function(e){var n=e.n;if(n.b){var r=n.a,t=n.b;return Br({F:u(yr,e.r,e.F),n:t,r:r})}return Er},Mf=function(e){var n=e,r=n.n;if(r.b)return S(n,{n:r.b,r:r.a});var t=n.F;return t.b?S(n,{F:t.b,r:t.a}):n},Tf=r((function(e,n){return S(n,{ff:e})})),yf=r((function(e,n){return S(n,{bL:e})})),Lf=t((function(e,n,r){switch(n.$){case 0:return u(Wl,yf(n.a),r);case 1:return S(r,{av:n.a});case 2:return u(Wl,Tf(r.av),r);case 3:return S(r,{l:u(lc,r.l,Pf(r.l))});case 4:return S(r,{l:u(lc,r.l,Cf(r.l))});case 5:return S(r,{l:u(xf,kl,r.l)});case 6:return S(r,{l:Mf(r.l)});default:return S(r,{l:(t=r.l,o=t,a=o.F,S(o,a.b?{F:a.b,n:N(o.n,_([a.a]))}:{F:o.n,n:z}))})}var t,o,a})),wf=function(e){return e.r},Sf=r((function(e,n){return{$:0,a:e,b:n}})),Nf=u(Sf,f(zi,.001462,466e-6,.013866),_([f(zi,.002267,.00127,.01857),f(zi,.003299,.002249,.024239),f(zi,.004547,.003392,.030909),f(zi,.006006,.004692,.038558),f(zi,.007676,.006136,.046836),f(zi,.009561,.007713,.055143),f(zi,.011663,.009417,.06346),f(zi,.013995,.011225,.071862),f(zi,.016561,.013136,.080282),f(zi,.019373,.015133,.088767),f(zi,.022447,.017199,.097327),f(zi,.025793,.019331,.10593),f(zi,.029432,.021503,.114621),f(zi,.033385,.023702,.123397),f(zi,.037668,.025921,.132232),f(zi,.042253,.028139,.141141),f(zi,.046915,.030324,.150164),f(zi,.051644,.032474,.159254),f(zi,.056449,.034569,.168414),f(zi,.06134,.03659,.177642),f(zi,.066331,.038504,.186962),f(zi,.071429,.040294,.196354),f(zi,.076637,.041905,.205799),f(zi,.081962,.043328,.215289),f(zi,.087411,.044556,.224813),f(zi,.09299,.045583,.234358),f(zi,.098702,.046402,.243904),f(zi,.104551,.047008,.25343),f(zi,.110536,.047399,.262912),f(zi,.116656,.047574,.272321),f(zi,.122908,.047536,.281624),f(zi,.129285,.047293,.290788),f(zi,.135778,.046856,.299776),f(zi,.142378,.046242,.308553),f(zi,.149073,.045468,.317085),f(zi,.15585,.044559,.325338),f(zi,.162689,.043554,.333277),f(zi,.169575,.042489,.340874),f(zi,.176493,.041402,.348111),f(zi,.183429,.040329,.354971),f(zi,.190367,.039309,.361447),f(zi,.197297,.0384,.367535),f(zi,.204209,.037632,.373238),f(zi,.211095,.03703,.378563),f(zi,.217949,.036615,.383522),f(zi,.224763,.036405,.388129),f(zi,.231538,.036405,.3924),f(zi,.238273,.036621,.396353),f(zi,.244967,.037055,.400007),f(zi,.25162,.037705,.403378),f(zi,.258234,.038571,.406485),f(zi,.26481,.039647,.409345),f(zi,.271347,.040922,.411976),f(zi,.27785,.042353,.414392),f(zi,.284321,.043933,.416608),f(zi,.290763,.045644,.418637),f(zi,.297178,.04747,.420491),f(zi,.303568,.049396,.422182),f(zi,.309935,.051407,.423721),f(zi,.316282,.05349,.425116),f(zi,.32261,.055634,.426377),f(zi,.328921,.057827,.427511),f(zi,.335217,.06006,.428524),f(zi,.3415,.062325,.429425),f(zi,.347771,.064616,.430217),f(zi,.354032,.066925,.430906),f(zi,.360284,.069247,.431497),f(zi,.366529,.071579,.431994),f(zi,.372768,.073915,.4324),f(zi,.379001,.076253,.432719),f(zi,.385228,.078591,.432955),f(zi,.391453,.080927,.433109),f(zi,.397674,.083257,.433183),f(zi,.403894,.08558,.433179),f(zi,.410113,.087896,.433098),f(zi,.416331,.090203,.432943),f(zi,.422549,.092501,.432714),f(zi,.428768,.09479,.432412),f(zi,.434987,.097069,.432039),f(zi,.441207,.099338,.431594),f(zi,.447428,.101597,.43108),f(zi,.453651,.103848,.430498),f(zi,.459875,.106089,.429846),f(zi,.4661,.108322,.429125),f(zi,.472328,.110547,.428334),f(zi,.478558,.112764,.427475),f(zi,.484789,.114974,.426548),f(zi,.491022,.117179,.425552),f(zi,.497257,.119379,.424488),f(zi,.503493,.121575,.423356),f(zi,.50973,.123769,.422156),f(zi,.515967,.12596,.420887),f(zi,.522206,.12815,.419549),f(zi,.528444,.130341,.418142),f(zi,.534683,.132534,.416667),f(zi,.54092,.134729,.415123),f(zi,.547157,.136929,.413511),f(zi,.553392,.139134,.411829),f(zi,.559624,.141346,.410078),f(zi,.565854,.143567,.408258),f(zi,.572081,.145797,.406369),f(zi,.578304,.148039,.404411),f(zi,.584521,.150294,.402385),f(zi,.590734,.152563,.40029),f(zi,.59694,.154848,.398125),f(zi,.603139,.157151,.395891),f(zi,.60933,.159474,.393589),f(zi,.615513,.161817,.391219),f(zi,.621685,.164184,.388781),f(zi,.627847,.166575,.386276),f(zi,.633998,.168992,.383704),f(zi,.640135,.171438,.381065),f(zi,.64626,.173914,.378359),f(zi,.652369,.176421,.375586),f(zi,.658463,.178962,.372748),f(zi,.66454,.181539,.369846),f(zi,.670599,.184153,.366879),f(zi,.676638,.186807,.363849),f(zi,.682656,.189501,.360757),f(zi,.688653,.192239,.357603),f(zi,.694627,.195021,.354388),f(zi,.700576,.197851,.351113),f(zi,.7065,.200728,.347777),f(zi,.712396,.203656,.344383),f(zi,.718264,.206636,.340931),f(zi,.724103,.20967,.337424),f(zi,.729909,.212759,.333861),f(zi,.735683,.215906,.330245),f(zi,.741423,.219112,.326576),f(zi,.747127,.222378,.322856),f(zi,.752794,.225706,.319085),f(zi,.758422,.229097,.315266),f(zi,.76401,.232554,.311399),f(zi,.769556,.236077,.307485),f(zi,.775059,.239667,.303526),f(zi,.780517,.243327,.299523),f(zi,.785929,.247056,.295477),f(zi,.791293,.250856,.29139),f(zi,.796607,.254728,.287264),f(zi,.801871,.258674,.283099),f(zi,.807082,.262692,.278898),f(zi,.812239,.266786,.274661),f(zi,.817341,.270954,.27039),f(zi,.822386,.275197,.266085),f(zi,.827372,.279517,.26175),f(zi,.832299,.283913,.257383),f(zi,.837165,.288385,.252988),f(zi,.841969,.292933,.248564),f(zi,.846709,.297559,.244113),f(zi,.851384,.30226,.239636),f(zi,.855992,.307038,.235133),f(zi,.860533,.311892,.230606),f(zi,.865006,.316822,.226055),f(zi,.869409,.321827,.221482),f(zi,.873741,.326906,.216886),f(zi,.878001,.33206,.212268),f(zi,.882188,.337287,.207628),f(zi,.886302,.342586,.202968),f(zi,.890341,.347957,.198286),f(zi,.894305,.353399,.193584),f(zi,.898192,.358911,.18886),f(zi,.902003,.364492,.184116),f(zi,.905735,.37014,.17935),f(zi,.90939,.375856,.174563),f(zi,.912966,.381636,.169755),f(zi,.916462,.387481,.164924),f(zi,.919879,.393389,.16007),f(zi,.923215,.399359,.155193),f(zi,.92647,.405389,.150292),f(zi,.929644,.411479,.145367),f(zi,.932737,.417627,.140417),f(zi,.935747,.423831,.13544),f(zi,.938675,.430091,.130438),f(zi,.941521,.436405,.125409),f(zi,.944285,.442772,.120354),f(zi,.946965,.449191,.115272),f(zi,.949562,.45566,.110164),f(zi,.952075,.462178,.105031),f(zi,.954506,.468744,.099874),f(zi,.956852,.475356,.094695),f(zi,.959114,.482014,.089499),f(zi,.961293,.488716,.084289),f(zi,.963387,.495462,.079073),f(zi,.965397,.502249,.073859),f(zi,.967322,.509078,.068659),f(zi,.969163,.515946,.063488),f(zi,.970919,.522853,.058367),f(zi,.97259,.529798,.053324),f(zi,.974176,.53678,.048392),f(zi,.975677,.543798,.043618),f(zi,.977092,.55085,.03905),f(zi,.978422,.557937,.034931),f(zi,.979666,.565057,.031409),f(zi,.980824,.572209,.028508),f(zi,.981895,.579392,.02625),f(zi,.982881,.586606,.024661),f(zi,.983779,.593849,.02377),f(zi,.984591,.601122,.023606),f(zi,.985315,.608422,.024202),f(zi,.985952,.61575,.025592),f(zi,.986502,.623105,.027814),f(zi,.986964,.630485,.030908),f(zi,.987337,.63789,.034916),f(zi,.987622,.64532,.039886),f(zi,.987819,.652773,.045581),f(zi,.987926,.66025,.05175),f(zi,.987945,.667748,.058329),f(zi,.987874,.675267,.065257),f(zi,.987714,.682807,.072489),f(zi,.987464,.690366,.07999),f(zi,.987124,.697944,.087731),f(zi,.986694,.70554,.095694),f(zi,.986175,.713153,.103863),f(zi,.985566,.720782,.112229),f(zi,.984865,.728427,.120785),f(zi,.984075,.736087,.129527),f(zi,.983196,.743758,.138453),f(zi,.982228,.751442,.147565),f(zi,.981173,.759135,.156863),f(zi,.980032,.766837,.166353),f(zi,.978806,.774545,.176037),f(zi,.977497,.782258,.185923),f(zi,.976108,.789974,.196018),f(zi,.974638,.797692,.206332),f(zi,.973088,.805409,.216877),f(zi,.971468,.813122,.227658),f(zi,.969783,.820825,.238686),f(zi,.968041,.828515,.249972),f(zi,.966243,.836191,.261534),f(zi,.964394,.843848,.273391),f(zi,.962517,.851476,.285546),f(zi,.960626,.859069,.29801),f(zi,.95872,.866624,.31082),f(zi,.956834,.874129,.323974),f(zi,.954997,.881569,.337475),f(zi,.953215,.888942,.351369),f(zi,.951546,.896226,.365627),f(zi,.950018,.903409,.380271),f(zi,.948683,.910473,.395289),f(zi,.947594,.917399,.410665),f(zi,.946809,.924168,.426373),f(zi,.946392,.930761,.442367),f(zi,.946403,.937159,.458592),f(zi,.946903,.943348,.47497),f(zi,.947937,.949318,.491426),f(zi,.949545,.955063,.50786),f(zi,.95174,.960587,.524203),f(zi,.954529,.965896,.540361),f(zi,.957896,.971003,.556275),f(zi,.961812,.975924,.571925),f(zi,.966249,.980678,.587206),f(zi,.971162,.985282,.602154),f(zi,.976511,.989753,.61676),f(zi,.982257,.994109,.631017),f(zi,.988362,.998364,.644924)])),zf=u(Sf,f(zi,.001462,466e-6,.013866),_([f(zi,.002258,.001295,.018331),f(zi,.003279,.002305,.023708),f(zi,.004512,.00349,.029965),f(zi,.007588,.006356,.044973),f(zi,.009426,.008022,.052844),f(zi,.011465,.009828,.06075),f(zi,.013708,.011771,.068667),f(zi,.016156,.01384,.076603),f(zi,.018815,.016026,.084584),f(zi,.021692,.01832,.09261),f(zi,.024792,.020715,.100676),f(zi,.028123,.023201,.108787),f(zi,.031696,.025765,.116965),f(zi,.03552,.028397,.125209),f(zi,.039608,.03109,.133515),f(zi,.04383,.03383,.141886),f(zi,.048062,.036607,.150327),f(zi,.05232,.039407,.158841),f(zi,.056615,.04216,.167446),f(zi,.060949,.044794,.176129),f(zi,.06533,.047318,.184892),f(zi,.069764,.049726,.193735),f(zi,.074257,.052017,.20266),f(zi,.078815,.054184,.211667),f(zi,.083446,.056225,.220755),f(zi,.088155,.058133,.229922),f(zi,.092949,.059904,.239164),f(zi,.097833,.061531,.248477),f(zi,.102815,.06301,.257854),f(zi,.107899,.064335,.267289),f(zi,.113094,.065492,.276784),f(zi,.118405,.066479,.286321),f(zi,.123833,.067295,.295879),f(zi,.12938,.067935,.305443),f(zi,.135053,.068391,.315),f(zi,.140858,.068654,.324538),f(zi,.146785,.068738,.334011),f(zi,.152839,.068637,.343404),f(zi,.159018,.068354,.352688),f(zi,.165308,.067911,.361816),f(zi,.171713,.067305,.370771),f(zi,.178212,.066576,.379497),f(zi,.184801,.065732,.387973),f(zi,.19146,.064818,.396152),f(zi,.198177,.063862,.404009),f(zi,.204935,.062907,.411514),f(zi,.211718,.061992,.418647),f(zi,.218512,.061158,.425392),f(zi,.225302,.060445,.431742),f(zi,.232077,.059889,.437695),f(zi,.238826,.059517,.443256),f(zi,.245543,.059352,.448436),f(zi,.25222,.059415,.453248),f(zi,.258857,.059706,.45771),f(zi,.265447,.060237,.46184),f(zi,.271994,.060994,.46566),f(zi,.278493,.061978,.46919),f(zi,.284951,.063168,.472451),f(zi,.291366,.064553,.475462),f(zi,.29774,.066117,.478243),f(zi,.304081,.067835,.480812),f(zi,.310382,.069702,.483186),f(zi,.316654,.07169,.48538),f(zi,.322899,.073782,.487408),f(zi,.329114,.075972,.489287),f(zi,.335308,.078236,.491024),f(zi,.341482,.080564,.492631),f(zi,.347636,.082946,.494121),f(zi,.353773,.085373,.495501),f(zi,.359898,.087831,.496778),f(zi,.366012,.090314,.49796),f(zi,.372116,.092816,.499053),f(zi,.378211,.095332,.500067),f(zi,.384299,.097855,.501002),f(zi,.390384,.100379,.501864),f(zi,.396467,.102902,.502658),f(zi,.402548,.10542,.503386),f(zi,.408629,.10793,.504052),f(zi,.414709,.110431,.504662),f(zi,.420791,.11292,.505215),f(zi,.426877,.115395,.505714),f(zi,.432967,.117855,.50616),f(zi,.439062,.120298,.506555),f(zi,.445163,.122724,.506901),f(zi,.451271,.125132,.507198),f(zi,.457386,.127522,.507448),f(zi,.463508,.129893,.507652),f(zi,.46964,.132245,.507809),f(zi,.47578,.134577,.507921),f(zi,.481929,.136891,.507989),f(zi,.488088,.139186,.508011),f(zi,.494258,.141462,.507988),f(zi,.500438,.143719,.50792),f(zi,.506629,.145958,.507806),f(zi,.512831,.148179,.507648),f(zi,.519045,.150383,.507443),f(zi,.52527,.152569,.507192),f(zi,.531507,.154739,.506895),f(zi,.537755,.156894,.506551),f(zi,.544015,.159033,.506159),f(zi,.550287,.161158,.505719),f(zi,.556571,.163269,.50523),f(zi,.562866,.165368,.504692),f(zi,.569172,.167454,.504105),f(zi,.57549,.16953,.503466),f(zi,.581819,.171596,.502777),f(zi,.588158,.173652,.502035),f(zi,.594508,.175701,.501241),f(zi,.600868,.177743,.500394),f(zi,.607238,.179779,.499492),f(zi,.613617,.181811,.498536),f(zi,.620005,.18384,.497524),f(zi,.626401,.185867,.496456),f(zi,.632805,.187893,.495332),f(zi,.639216,.189921,.49415),f(zi,.645633,.191952,.49291),f(zi,.652056,.193986,.491611),f(zi,.658483,.196027,.490253),f(zi,.664915,.198075,.488836),f(zi,.671349,.200133,.487358),f(zi,.677786,.202203,.485819),f(zi,.684224,.204286,.484219),f(zi,.690661,.206384,.482558),f(zi,.697098,.208501,.480835),f(zi,.703532,.210638,.479049),f(zi,.709962,.212797,.477201),f(zi,.716387,.214982,.47529),f(zi,.722805,.217194,.473316),f(zi,.729216,.219437,.471279),f(zi,.735616,.221713,.46918),f(zi,.742004,.224025,.467018),f(zi,.748378,.226377,.464794),f(zi,.754737,.228772,.462509),f(zi,.761077,.231214,.460162),f(zi,.767398,.233705,.457755),f(zi,.773695,.236249,.455289),f(zi,.779968,.238851,.452765),f(zi,.786212,.241514,.450184),f(zi,.792427,.244242,.447543),f(zi,.798608,.24704,.444848),f(zi,.804752,.249911,.442102),f(zi,.810855,.252861,.439305),f(zi,.816914,.255895,.436461),f(zi,.822926,.259016,.433573),f(zi,.828886,.262229,.430644),f(zi,.834791,.26554,.427671),f(zi,.840636,.268953,.424666),f(zi,.846416,.272473,.421631),f(zi,.852126,.276106,.418573),f(zi,.857763,.279857,.415496),f(zi,.86332,.283729,.412403),f(zi,.868793,.287728,.409303),f(zi,.874176,.291859,.406205),f(zi,.879464,.296125,.403118),f(zi,.884651,.30053,.400047),f(zi,.889731,.305079,.397002),f(zi,.8947,.309773,.393995),f(zi,.899552,.314616,.391037),f(zi,.904281,.31961,.388137),f(zi,.908884,.324755,.385308),f(zi,.913354,.330052,.382563),f(zi,.917689,.3355,.379915),f(zi,.921884,.341098,.377376),f(zi,.925937,.346844,.374959),f(zi,.929845,.352734,.372677),f(zi,.933606,.358764,.370541),f(zi,.937221,.364929,.368567),f(zi,.940687,.371224,.366762),f(zi,.944006,.377643,.365136),f(zi,.94718,.384178,.363701),f(zi,.95021,.39082,.362468),f(zi,.953099,.397563,.361438),f(zi,.955849,.4044,.360619),f(zi,.958464,.411324,.360014),f(zi,.960949,.418323,.35963),f(zi,.96331,.42539,.359469),f(zi,.965549,.432519,.359529),f(zi,.967671,.439703,.35981),f(zi,.96968,.446936,.360311),f(zi,.971582,.45421,.36103),f(zi,.973381,.46152,.361965),f(zi,.975082,.468861,.363111),f(zi,.97669,.476226,.364466),f(zi,.97821,.483612,.366025),f(zi,.979645,.491014,.367783),f(zi,.981,.498428,.369734),f(zi,.982279,.505851,.371874),f(zi,.983485,.51328,.374198),f(zi,.984622,.520713,.376698),f(zi,.985693,.528148,.379371),f(zi,.9867,.535582,.38221),f(zi,.987646,.543015,.38521),f(zi,.988533,.550446,.388365),f(zi,.989363,.557873,.391671),f(zi,.990138,.565296,.395122),f(zi,.990871,.572706,.398714),f(zi,.991558,.580107,.402441),f(zi,.992196,.587502,.406299),f(zi,.992785,.594891,.410283),f(zi,.993326,.602275,.41439),f(zi,.993834,.609644,.418613),f(zi,.994309,.616999,.42295),f(zi,.994738,.62435,.427397),f(zi,.995122,.631696,.431951),f(zi,.99548,.639027,.436607),f(zi,.99581,.646344,.441361),f(zi,.996096,.653659,.446213),f(zi,.996341,.660969,.45116),f(zi,.99658,.668256,.456192),f(zi,.996775,.675541,.461314),f(zi,.996925,.682828,.466526),f(zi,.997077,.690088,.471811),f(zi,.997186,.697349,.477182),f(zi,.997254,.704611,.482635),f(zi,.997325,.711848,.488154),f(zi,.997351,.719089,.493755),f(zi,.997351,.726324,.499428),f(zi,.997341,.733545,.505167),f(zi,.997285,.740772,.510983),f(zi,.997228,.747981,.516859),f(zi,.997138,.75519,.522806),f(zi,.997019,.762398,.528821),f(zi,.996898,.769591,.534892),f(zi,.996727,.776795,.541039),f(zi,.996571,.783977,.547233),f(zi,.996369,.791167,.553499),f(zi,.996162,.798348,.55982),f(zi,.995932,.805527,.566202),f(zi,.99568,.812706,.572645),f(zi,.995424,.819875,.57914),f(zi,.995131,.827052,.585701),f(zi,.994851,.834213,.592307),f(zi,.994524,.841387,.598983),f(zi,.994222,.84854,.605696),f(zi,.993866,.855711,.612482),f(zi,.993545,.862859,.619299),f(zi,.99317,.870024,.626189),f(zi,.992831,.877168,.633109),f(zi,.99244,.88433,.640099),f(zi,.992089,.89147,.647116),f(zi,.991688,.898627,.654202),f(zi,.991332,.905763,.661309),f(zi,.99093,.912915,.668481),f(zi,.99057,.920049,.675675),f(zi,.990175,.927196,.682926),f(zi,.989815,.934329,.690198),f(zi,.989434,.94147,.697519),f(zi,.989077,.948604,.704863),f(zi,.988717,.955742,.712242),f(zi,.988367,.962878,.719649),f(zi,.988033,.970012,.727077),f(zi,.987691,.977154,.734536),f(zi,.987387,.984288,.742002),f(zi,.987053,.991438,.749504)])),Df=u(Sf,f(zi,.2081,.1663,.5292),_([f(zi,.2091,.1721,.5411),f(zi,.2101,.1779,.553),f(zi,.2109,.1837,.565),f(zi,.2116,.1895,.5771),f(zi,.2121,.1954,.5892),f(zi,.2124,.2013,.6013),f(zi,.2125,.2072,.6135),f(zi,.2123,.2132,.6258),f(zi,.2118,.2192,.6381),f(zi,.2111,.2253,.6505),f(zi,.2099,.2315,.6629),f(zi,.2084,.2377,.6753),f(zi,.2063,.244,.6878),f(zi,.2038,.2503,.7003),f(zi,.2006,.2568,.7129),f(zi,.1968,.2632,.7255),f(zi,.1921,.2698,.7381),f(zi,.1867,.2764,.7507),f(zi,.1802,.2832,.7634),f(zi,.1728,.2902,.7762),f(zi,.1641,.2975,.789),f(zi,.1541,.3052,.8017),f(zi,.1427,.3132,.8145),f(zi,.1295,.3217,.8269),f(zi,.1147,.3306,.8387),f(zi,.0986,.3397,.8495),f(zi,.0816,.3486,.8588),f(zi,.0646,.3572,.8664),f(zi,.0482,.3651,.8722),f(zi,.0329,.3724,.8765),f(zi,.0213,.3792,.8796),f(zi,.0136,.3853,.8815),f(zi,.0086,.3911,.8827),f(zi,.006,.3965,.8833),f(zi,.0051,.4017,.8834),f(zi,.0054,.4066,.8831),f(zi,.0067,.4113,.8825),f(zi,.0089,.4159,.8816),f(zi,.0116,.4203,.8805),f(zi,.0148,.4246,.8793),f(zi,.0184,.4288,.8779),f(zi,.0223,.4329,.8763),f(zi,.0264,.437,.8747),f(zi,.0306,.441,.8729),f(zi,.0349,.4449,.8711),f(zi,.0394,.4488,.8692),f(zi,.0437,.4526,.8672),f(zi,.0477,.4564,.8652),f(zi,.0514,.4602,.8632),f(zi,.0549,.464,.8611),f(zi,.0582,.4677,.8589),f(zi,.0612,.4714,.8568),f(zi,.064,.4751,.8546),f(zi,.0666,.4788,.8525),f(zi,.0689,.4825,.8503),f(zi,.071,.4862,.8481),f(zi,.0729,.4899,.846),f(zi,.0746,.4937,.8439),f(zi,.0761,.4974,.8418),f(zi,.0773,.5012,.8398),f(zi,.0782,.5051,.8378),f(zi,.0789,.5089,.8359),f(zi,.0794,.5129,.8341),f(zi,.0795,.5169,.8324),f(zi,.0793,.521,.8308),f(zi,.0788,.5251,.8293),f(zi,.0778,.5295,.828),f(zi,.0764,.5339,.827),f(zi,.0746,.5384,.8261),f(zi,.0724,.5431,.8253),f(zi,.0698,.5479,.8247),f(zi,.0668,.5527,.8243),f(zi,.0636,.5577,.8239),f(zi,.06,.5627,.8237),f(zi,.0562,.5677,.8234),f(zi,.0523,.5727,.8231),f(zi,.0484,.5777,.8228),f(zi,.0445,.5826,.8223),f(zi,.0408,.5874,.8217),f(zi,.0372,.5922,.8209),f(zi,.0342,.5968,.8198),f(zi,.0317,.6012,.8186),f(zi,.0296,.6055,.8171),f(zi,.0279,.6097,.8154),f(zi,.0265,.6137,.8135),f(zi,.0255,.6176,.8114),f(zi,.0248,.6214,.8091),f(zi,.0243,.625,.8066),f(zi,.0239,.6285,.8039),f(zi,.0237,.6319,.801),f(zi,.0235,.6352,.798),f(zi,.0233,.6384,.7948),f(zi,.0231,.6415,.7916),f(zi,.023,.6445,.7881),f(zi,.0229,.6474,.7846),f(zi,.0227,.6503,.781),f(zi,.0227,.6531,.7773),f(zi,.0232,.6558,.7735),f(zi,.0238,.6585,.7696),f(zi,.0246,.6611,.7656),f(zi,.0263,.6637,.7615),f(zi,.0282,.6663,.7574),f(zi,.0306,.6688,.7532),f(zi,.0338,.6712,.749),f(zi,.0373,.6737,.7446),f(zi,.0418,.6761,.7402),f(zi,.0467,.6784,.7358),f(zi,.0516,.6808,.7313),f(zi,.0574,.6831,.7267),f(zi,.0629,.6854,.7221),f(zi,.0692,.6877,.7173),f(zi,.0755,.6899,.7126),f(zi,.082,.6921,.7078),f(zi,.0889,.6943,.7029),f(zi,.0956,.6965,.6979),f(zi,.1031,.6986,.6929),f(zi,.1104,.7007,.6878),f(zi,.118,.7028,.6827),f(zi,.1258,.7049,.6775),f(zi,.1335,.7069,.6723),f(zi,.1418,.7089,.6669),f(zi,.1499,.7109,.6616),f(zi,.1585,.7129,.6561),f(zi,.1671,.7148,.6507),f(zi,.1758,.7168,.6451),f(zi,.1849,.7186,.6395),f(zi,.1938,.7205,.6338),f(zi,.2033,.7223,.6281),f(zi,.2128,.7241,.6223),f(zi,.2224,.7259,.6165),f(zi,.2324,.7275,.6107),f(zi,.2423,.7292,.6048),f(zi,.2527,.7308,.5988),f(zi,.2631,.7324,.5929),f(zi,.2735,.7339,.5869),f(zi,.2845,.7354,.5809),f(zi,.2953,.7368,.5749),f(zi,.3064,.7381,.5689),f(zi,.3177,.7394,.563),f(zi,.3289,.7406,.557),f(zi,.3405,.7417,.5512),f(zi,.352,.7428,.5453),f(zi,.3635,.7438,.5396),f(zi,.3753,.7446,.5339),f(zi,.3869,.7454,.5283),f(zi,.3986,.7461,.5229),f(zi,.4103,.7467,.5175),f(zi,.4218,.7473,.5123),f(zi,.4334,.7477,.5072),f(zi,.4447,.7482,.5021),f(zi,.4561,.7485,.4972),f(zi,.4672,.7487,.4924),f(zi,.4783,.7489,.4877),f(zi,.4892,.7491,.4831),f(zi,.5,.7491,.4786),f(zi,.5106,.7492,.4741),f(zi,.5212,.7492,.4698),f(zi,.5315,.7491,.4655),f(zi,.5418,.749,.4613),f(zi,.5519,.7489,.4571),f(zi,.5619,.7487,.4531),f(zi,.5718,.7485,.449),f(zi,.5816,.7482,.4451),f(zi,.5913,.7479,.4412),f(zi,.6009,.7476,.4374),f(zi,.6103,.7473,.4335),f(zi,.6197,.7469,.4298),f(zi,.629,.7465,.4261),f(zi,.6382,.746,.4224),f(zi,.6473,.7456,.4188),f(zi,.6564,.7451,.4152),f(zi,.6653,.7446,.4116),f(zi,.6742,.7441,.4081),f(zi,.683,.7435,.4046),f(zi,.6918,.743,.4011),f(zi,.7004,.7424,.3976),f(zi,.7091,.7418,.3942),f(zi,.7176,.7412,.3908),f(zi,.7261,.7405,.3874),f(zi,.7346,.7399,.384),f(zi,.743,.7392,.3806),f(zi,.7513,.7385,.3773),f(zi,.7596,.7378,.3739),f(zi,.7679,.7372,.3706),f(zi,.7761,.7364,.3673),f(zi,.7843,.7357,.3639),f(zi,.7924,.735,.3606),f(zi,.8005,.7343,.3573),f(zi,.8085,.7336,.3539),f(zi,.8166,.7329,.3506),f(zi,.8246,.7322,.3472),f(zi,.8325,.7315,.3438),f(zi,.8405,.7308,.3404),f(zi,.8484,.7301,.337),f(zi,.8563,.7294,.3336),f(zi,.8642,.7288,.33),f(zi,.872,.7282,.3265),f(zi,.8798,.7276,.3229),f(zi,.8877,.7271,.3193),f(zi,.8954,.7266,.3156),f(zi,.9032,.7262,.3117),f(zi,.911,.7259,.3078),f(zi,.9187,.7256,.3038),f(zi,.9264,.7256,.2996),f(zi,.9341,.7256,.2953),f(zi,.9417,.7259,.2907),f(zi,.9493,.7264,.2859),f(zi,.9567,.7273,.2808),f(zi,.9639,.7285,.2754),f(zi,.9708,.7303,.2696),f(zi,.9773,.7326,.2634),f(zi,.9831,.7355,.257),f(zi,.9882,.739,.2504),f(zi,.9922,.7431,.2437),f(zi,.9952,.7476,.2373),f(zi,.9973,.7524,.231),f(zi,.9986,.7573,.2251),f(zi,.9991,.7624,.2195),f(zi,.999,.7675,.2141),f(zi,.9985,.7726,.209),f(zi,.9976,.7778,.2042),f(zi,.9964,.7829,.1995),f(zi,.995,.788,.1949),f(zi,.9933,.7931,.1905),f(zi,.9914,.7981,.1863),f(zi,.9894,.8032,.1821),f(zi,.9873,.8083,.178),f(zi,.9851,.8133,.174),f(zi,.9828,.8184,.17),f(zi,.9805,.8235,.1661),f(zi,.9782,.8286,.1622),f(zi,.9759,.8337,.1583),f(zi,.9736,.8389,.1544),f(zi,.9713,.8441,.1505),f(zi,.9692,.8494,.1465),f(zi,.9672,.8548,.1425),f(zi,.9654,.8603,.1385),f(zi,.9638,.8659,.1343),f(zi,.9623,.8716,.1301),f(zi,.9611,.8774,.1258),f(zi,.96,.8834,.1215),f(zi,.9593,.8895,.1171),f(zi,.9588,.8958,.1126),f(zi,.9586,.9022,.1082),f(zi,.9587,.9088,.1036),f(zi,.9591,.9155,.099),f(zi,.9599,.9225,.0944),f(zi,.961,.9296,.0897),f(zi,.9624,.9368,.085),f(zi,.9641,.9443,.0802),f(zi,.9662,.9518,.0753),f(zi,.9685,.9595,.0703),f(zi,.971,.9673,.0651),f(zi,.9736,.9752,.0597),f(zi,.9763,.9831,.0538)])),$f=u(Sf,f(zi,.050383,.029803,.527975),_([f(zi,.063536,.028426,.533124),f(zi,.075353,.027206,.538007),f(zi,.086222,.026125,.542658),f(zi,.096379,.025165,.547103),f(zi,.10598,.024309,.551368),f(zi,.115124,.023556,.555468),f(zi,.123903,.022878,.559423),f(zi,.132381,.022258,.56325),f(zi,.140603,.021687,.566959),f(zi,.148607,.021154,.570562),f(zi,.156421,.020651,.574065),f(zi,.16407,.020171,.577478),f(zi,.171574,.019706,.580806),f(zi,.17895,.019252,.584054),f(zi,.186213,.018803,.587228),f(zi,.193374,.018354,.59033),f(zi,.200445,.017902,.593364),f(zi,.207435,.017442,.596333),f(zi,.21435,.016973,.599239),f(zi,.221197,.016497,.602083),f(zi,.227983,.016007,.604867),f(zi,.234715,.015502,.607592),f(zi,.241396,.014979,.610259),f(zi,.248032,.014439,.612868),f(zi,.254627,.013882,.615419),f(zi,.261183,.013308,.617911),f(zi,.267703,.012716,.620346),f(zi,.274191,.012109,.622722),f(zi,.280648,.011488,.625038),f(zi,.287076,.010855,.627295),f(zi,.293478,.010213,.62949),f(zi,.299855,.009561,.631624),f(zi,.30621,.008902,.633694),f(zi,.312543,.008239,.6357),f(zi,.318856,.007576,.63764),f(zi,.32515,.006915,.639512),f(zi,.331426,.006261,.641316),f(zi,.337683,.005618,.643049),f(zi,.343925,.004991,.64471),f(zi,.35015,.004382,.646298),f(zi,.356359,.003798,.64781),f(zi,.362553,.003243,.649245),f(zi,.368733,.002724,.650601),f(zi,.374897,.002245,.651876),f(zi,.381047,.001814,.653068),f(zi,.387183,.001434,.654177),f(zi,.393304,.001114,.655199),f(zi,.399411,859e-6,.656133),f(zi,.405503,678e-6,.656977),f(zi,.41158,577e-6,.65773),f(zi,.417642,564e-6,.65839),f(zi,.423689,646e-6,.658956),f(zi,.429719,831e-6,.659425),f(zi,.435734,.001127,.659797),f(zi,.441732,.00154,.660069),f(zi,.447714,.00208,.66024),f(zi,.453677,.002755,.66031),f(zi,.459623,.003574,.660277),f(zi,.46555,.004545,.660139),f(zi,.471457,.005678,.659897),f(zi,.477344,.00698,.659549),f(zi,.48321,.00846,.659095),f(zi,.489055,.010127,.658534),f(zi,.494877,.01199,.657865),f(zi,.500678,.014055,.657088),f(zi,.506454,.016333,.656202),f(zi,.512206,.018833,.655209),f(zi,.517933,.021563,.654109),f(zi,.523633,.024532,.652901),f(zi,.529306,.027747,.651586),f(zi,.534952,.031217,.650165),f(zi,.54057,.03495,.64864),f(zi,.546157,.038954,.64701),f(zi,.551715,.043136,.645277),f(zi,.557243,.047331,.643443),f(zi,.562738,.051545,.641509),f(zi,.568201,.055778,.639477),f(zi,.573632,.060028,.637349),f(zi,.579029,.064296,.635126),f(zi,.584391,.068579,.632812),f(zi,.589719,.072878,.630408),f(zi,.595011,.07719,.627917),f(zi,.600266,.081516,.625342),f(zi,.605485,.085854,.622686),f(zi,.610667,.090204,.619951),f(zi,.615812,.094564,.61714),f(zi,.620919,.098934,.614257),f(zi,.625987,.103312,.611305),f(zi,.631017,.107699,.608287),f(zi,.636008,.112092,.605205),f(zi,.640959,.116492,.602065),f(zi,.645872,.120898,.598867),f(zi,.650746,.125309,.595617),f(zi,.65558,.129725,.592317),f(zi,.660374,.134144,.588971),f(zi,.665129,.138566,.585582),f(zi,.669845,.142992,.582154),f(zi,.674522,.147419,.578688),f(zi,.67916,.151848,.575189),f(zi,.683758,.156278,.57166),f(zi,.688318,.160709,.568103),f(zi,.69284,.165141,.564522),f(zi,.697324,.169573,.560919),f(zi,.701769,.174005,.557296),f(zi,.706178,.178437,.553657),f(zi,.710549,.182868,.550004),f(zi,.714883,.187299,.546338),f(zi,.719181,.191729,.542663),f(zi,.723444,.196158,.538981),f(zi,.72767,.200586,.535293),f(zi,.731862,.205013,.531601),f(zi,.736019,.209439,.527908),f(zi,.740143,.213864,.524216),f(zi,.744232,.218288,.520524),f(zi,.748289,.222711,.516834),f(zi,.752312,.227133,.513149),f(zi,.756304,.231555,.509468),f(zi,.760264,.235976,.505794),f(zi,.764193,.240396,.502126),f(zi,.76809,.244817,.498465),f(zi,.771958,.249237,.494813),f(zi,.775796,.253658,.491171),f(zi,.779604,.258078,.487539),f(zi,.783383,.2625,.483918),f(zi,.787133,.266922,.480307),f(zi,.790855,.271345,.476706),f(zi,.794549,.27577,.473117),f(zi,.798216,.280197,.469538),f(zi,.801855,.284626,.465971),f(zi,.805467,.289057,.462415),f(zi,.809052,.293491,.45887),f(zi,.812612,.297928,.455338),f(zi,.816144,.302368,.451816),f(zi,.819651,.306812,.448306),f(zi,.823132,.311261,.444806),f(zi,.826588,.315714,.441316),f(zi,.830018,.320172,.437836),f(zi,.833422,.324635,.434366),f(zi,.836801,.329105,.430905),f(zi,.840155,.33358,.427455),f(zi,.843484,.338062,.424013),f(zi,.846788,.342551,.420579),f(zi,.850066,.347048,.417153),f(zi,.853319,.351553,.413734),f(zi,.856547,.356066,.410322),f(zi,.85975,.360588,.406917),f(zi,.862927,.365119,.403519),f(zi,.866078,.36966,.400126),f(zi,.869203,.374212,.396738),f(zi,.872303,.378774,.393355),f(zi,.875376,.383347,.389976),f(zi,.878423,.387932,.3866),f(zi,.881443,.392529,.383229),f(zi,.884436,.397139,.37986),f(zi,.887402,.401762,.376494),f(zi,.89034,.406398,.37313),f(zi,.89325,.411048,.369768),f(zi,.896131,.415712,.366407),f(zi,.898984,.420392,.363047),f(zi,.901807,.425087,.359688),f(zi,.904601,.429797,.356329),f(zi,.907365,.434524,.35297),f(zi,.910098,.439268,.34961),f(zi,.9128,.444029,.346251),f(zi,.915471,.448807,.34289),f(zi,.918109,.453603,.339529),f(zi,.920714,.458417,.336166),f(zi,.923287,.463251,.332801),f(zi,.925825,.468103,.329435),f(zi,.928329,.472975,.326067),f(zi,.930798,.477867,.322697),f(zi,.933232,.48278,.319325),f(zi,.93563,.487712,.315952),f(zi,.93799,.492667,.312575),f(zi,.940313,.497642,.309197),f(zi,.942598,.502639,.305816),f(zi,.944844,.507658,.302433),f(zi,.947051,.512699,.299049),f(zi,.949217,.517763,.295662),f(zi,.951344,.52285,.292275),f(zi,.953428,.52796,.288883),f(zi,.95547,.533093,.28549),f(zi,.957469,.53825,.282096),f(zi,.959424,.543431,.278701),f(zi,.961336,.548636,.275305),f(zi,.963203,.553865,.271909),f(zi,.965024,.559118,.268513),f(zi,.966798,.564396,.265118),f(zi,.968526,.5697,.261721),f(zi,.970205,.575028,.258325),f(zi,.971835,.580382,.254931),f(zi,.973416,.585761,.25154),f(zi,.974947,.591165,.248151),f(zi,.976428,.596595,.244767),f(zi,.977856,.602051,.241387),f(zi,.979233,.607532,.238013),f(zi,.980556,.613039,.234646),f(zi,.981826,.618572,.231287),f(zi,.983041,.624131,.227937),f(zi,.984199,.629718,.224595),f(zi,.985301,.63533,.221265),f(zi,.986345,.640969,.217948),f(zi,.987332,.646633,.214648),f(zi,.98826,.652325,.211364),f(zi,.989128,.658043,.2081),f(zi,.989935,.663787,.204859),f(zi,.990681,.669558,.201642),f(zi,.991365,.675355,.198453),f(zi,.991985,.681179,.195295),f(zi,.992541,.68703,.19217),f(zi,.993032,.692907,.189084),f(zi,.993456,.69881,.186041),f(zi,.993814,.704741,.183043),f(zi,.994103,.710698,.180097),f(zi,.994324,.716681,.177208),f(zi,.994474,.722691,.174381),f(zi,.994553,.728728,.171622),f(zi,.994561,.734791,.168938),f(zi,.994495,.74088,.166335),f(zi,.994355,.746995,.163821),f(zi,.994141,.753137,.161404),f(zi,.993851,.759304,.159092),f(zi,.993482,.765499,.156891),f(zi,.993033,.77172,.154808),f(zi,.992505,.777967,.152855),f(zi,.991897,.784239,.151042),f(zi,.991209,.790537,.149377),f(zi,.990439,.796859,.14787),f(zi,.989587,.803205,.146529),f(zi,.988648,.809579,.145357),f(zi,.987621,.815978,.144363),f(zi,.986509,.822401,.143557),f(zi,.985314,.828846,.142945),f(zi,.984031,.835315,.142528),f(zi,.982653,.841812,.142303),f(zi,.98119,.848329,.142279),f(zi,.979644,.854866,.142453),f(zi,.977995,.861432,.142808),f(zi,.976265,.868016,.143351),f(zi,.974443,.874622,.144061),f(zi,.97253,.88125,.144923),f(zi,.970533,.887896,.145919),f(zi,.968443,.894564,.147014),f(zi,.966271,.901249,.14818),f(zi,.964021,.90795,.14937),f(zi,.961681,.914672,.15052),f(zi,.959276,.921407,.151566),f(zi,.956808,.928152,.152409),f(zi,.954287,.934908,.152921),f(zi,.951726,.941671,.152925),f(zi,.949151,.948435,.152178),f(zi,.946602,.95519,.150328),f(zi,.944152,.961916,.146861),f(zi,.941896,.96859,.140956),f(zi,.940015,.975158,.131326)])),_f=u(Sf,f(zi,.267004,.004874,.329415),_([f(zi,.26851,.009605,.335427),f(zi,.269944,.014625,.341379),f(zi,.271305,.019942,.347269),f(zi,.272594,.025563,.353093),f(zi,.273809,.031497,.358853),f(zi,.274952,.037752,.364543),f(zi,.276022,.044167,.370164),f(zi,.277018,.050344,.375715),f(zi,.277941,.056324,.381191),f(zi,.278791,.062145,.386592),f(zi,.279566,.067836,.391917),f(zi,.280267,.073417,.397163),f(zi,.280894,.078907,.402329),f(zi,.281446,.08432,.407414),f(zi,.281924,.089666,.412415),f(zi,.282327,.094955,.417331),f(zi,.282656,.100196,.42216),f(zi,.28291,.105393,.426902),f(zi,.283091,.110553,.431554),f(zi,.283197,.11568,.436115),f(zi,.283229,.120777,.440584),f(zi,.283187,.125848,.44496),f(zi,.283072,.130895,.449241),f(zi,.282884,.13592,.453427),f(zi,.282623,.140926,.457517),f(zi,.28229,.145912,.46151),f(zi,.281887,.150881,.465405),f(zi,.281412,.155834,.469201),f(zi,.280868,.160771,.472899),f(zi,.280255,.165693,.476498),f(zi,.279574,.170599,.479997),f(zi,.278826,.17549,.483397),f(zi,.278012,.180367,.486697),f(zi,.277134,.185228,.489898),f(zi,.276194,.190074,.493001),f(zi,.275191,.194905,.496005),f(zi,.274128,.199721,.498911),f(zi,.273006,.20452,.501721),f(zi,.271828,.209303,.504434),f(zi,.270595,.214069,.507052),f(zi,.269308,.218818,.509577),f(zi,.267968,.223549,.512008),f(zi,.26658,.228262,.514349),f(zi,.265145,.232956,.516599),f(zi,.263663,.237631,.518762),f(zi,.262138,.242286,.520837),f(zi,.260571,.246922,.522828),f(zi,.258965,.251537,.524736),f(zi,.257322,.25613,.526563),f(zi,.255645,.260703,.528312),f(zi,.253935,.265254,.529983),f(zi,.252194,.269783,.531579),f(zi,.250425,.27429,.533103),f(zi,.248629,.278775,.534556),f(zi,.246811,.283237,.535941),f(zi,.244972,.287675,.53726),f(zi,.243113,.292092,.538516),f(zi,.241237,.296485,.539709),f(zi,.239346,.300855,.540844),f(zi,.237441,.305202,.541921),f(zi,.235526,.309527,.542944),f(zi,.233603,.313828,.543914),f(zi,.231674,.318106,.544834),f(zi,.229739,.322361,.545706),f(zi,.227802,.326594,.546532),f(zi,.225863,.330805,.547314),f(zi,.223925,.334994,.548053),f(zi,.221989,.339161,.548752),f(zi,.220057,.343307,.549413),f(zi,.21813,.347432,.550038),f(zi,.21621,.351535,.550627),f(zi,.214298,.355619,.551184),f(zi,.212395,.359683,.55171),f(zi,.210503,.363727,.552206),f(zi,.208623,.367752,.552675),f(zi,.206756,.371758,.553117),f(zi,.204903,.375746,.553533),f(zi,.203063,.379716,.553925),f(zi,.201239,.38367,.554294),f(zi,.19943,.387607,.554642),f(zi,.197636,.391528,.554969),f(zi,.19586,.395433,.555276),f(zi,.1941,.399323,.555565),f(zi,.192357,.403199,.555836),f(zi,.190631,.407061,.556089),f(zi,.188923,.41091,.556326),f(zi,.187231,.414746,.556547),f(zi,.185556,.41857,.556753),f(zi,.183898,.422383,.556944),f(zi,.182256,.426184,.55712),f(zi,.180629,.429975,.557282),f(zi,.179019,.433756,.55743),f(zi,.177423,.437527,.557565),f(zi,.175841,.44129,.557685),f(zi,.174274,.445044,.557792),f(zi,.172719,.448791,.557885),f(zi,.171176,.45253,.557965),f(zi,.169646,.456262,.55803),f(zi,.168126,.459988,.558082),f(zi,.166617,.463708,.558119),f(zi,.165117,.467423,.558141),f(zi,.163625,.471133,.558148),f(zi,.162142,.474838,.55814),f(zi,.160665,.47854,.558115),f(zi,.159194,.482237,.558073),f(zi,.157729,.485932,.558013),f(zi,.15627,.489624,.557936),f(zi,.154815,.493313,.55784),f(zi,.153364,.497,.557724),f(zi,.151918,.500685,.557587),f(zi,.150476,.504369,.55743),f(zi,.149039,.508051,.55725),f(zi,.147607,.511733,.557049),f(zi,.14618,.515413,.556823),f(zi,.144759,.519093,.556572),f(zi,.143343,.522773,.556295),f(zi,.141935,.526453,.555991),f(zi,.140536,.530132,.555659),f(zi,.139147,.533812,.555298),f(zi,.13777,.537492,.554906),f(zi,.136408,.541173,.554483),f(zi,.135066,.544853,.554029),f(zi,.133743,.548535,.553541),f(zi,.132444,.552216,.553018),f(zi,.131172,.555899,.552459),f(zi,.129933,.559582,.551864),f(zi,.128729,.563265,.551229),f(zi,.127568,.566949,.550556),f(zi,.126453,.570633,.549841),f(zi,.125394,.574318,.549086),f(zi,.124395,.578002,.548287),f(zi,.123463,.581687,.547445),f(zi,.122606,.585371,.546557),f(zi,.121831,.589055,.545623),f(zi,.121148,.592739,.544641),f(zi,.120565,.596422,.543611),f(zi,.120092,.600104,.54253),f(zi,.119738,.603785,.5414),f(zi,.119512,.607464,.540218),f(zi,.119423,.611141,.538982),f(zi,.119483,.614817,.537692),f(zi,.119699,.61849,.536347),f(zi,.120081,.622161,.534946),f(zi,.120638,.625828,.533488),f(zi,.12138,.629492,.531973),f(zi,.122312,.633153,.530398),f(zi,.123444,.636809,.528763),f(zi,.12478,.640461,.527068),f(zi,.126326,.644107,.525311),f(zi,.128087,.647749,.523491),f(zi,.130067,.651384,.521608),f(zi,.132268,.655014,.519661),f(zi,.134692,.658636,.517649),f(zi,.137339,.662252,.515571),f(zi,.14021,.665859,.513427),f(zi,.143303,.669459,.511215),f(zi,.146616,.67305,.508936),f(zi,.150148,.676631,.506589),f(zi,.153894,.680203,.504172),f(zi,.157851,.683765,.501686),f(zi,.162016,.687316,.499129),f(zi,.166383,.690856,.496502),f(zi,.170948,.694384,.493803),f(zi,.175707,.6979,.491033),f(zi,.180653,.701402,.488189),f(zi,.185783,.704891,.485273),f(zi,.19109,.708366,.482284),f(zi,.196571,.711827,.479221),f(zi,.202219,.715272,.476084),f(zi,.20803,.718701,.472873),f(zi,.214,.722114,.469588),f(zi,.220124,.725509,.466226),f(zi,.226397,.728888,.462789),f(zi,.232815,.732247,.459277),f(zi,.239374,.735588,.455688),f(zi,.24607,.73891,.452024),f(zi,.252899,.742211,.448284),f(zi,.259857,.745492,.444467),f(zi,.266941,.748751,.440573),f(zi,.274149,.751988,.436601),f(zi,.281477,.755203,.432552),f(zi,.288921,.758394,.428426),f(zi,.296479,.761561,.424223),f(zi,.304148,.764704,.419943),f(zi,.311925,.767822,.415586),f(zi,.319809,.770914,.411152),f(zi,.327796,.77398,.40664),f(zi,.335885,.777018,.402049),f(zi,.344074,.780029,.397381),f(zi,.35236,.783011,.392636),f(zi,.360741,.785964,.387814),f(zi,.369214,.788888,.382914),f(zi,.377779,.791781,.377939),f(zi,.386433,.794644,.372886),f(zi,.395174,.797475,.367757),f(zi,.404001,.800275,.362552),f(zi,.412913,.803041,.357269),f(zi,.421908,.805774,.35191),f(zi,.430983,.808473,.346476),f(zi,.440137,.811138,.340967),f(zi,.449368,.813768,.335384),f(zi,.458674,.816363,.329727),f(zi,.468053,.818921,.323998),f(zi,.477504,.821444,.318195),f(zi,.487026,.823929,.312321),f(zi,.496615,.826376,.306377),f(zi,.506271,.828786,.300362),f(zi,.515992,.831158,.294279),f(zi,.525776,.833491,.288127),f(zi,.535621,.835785,.281908),f(zi,.545524,.838039,.275626),f(zi,.555484,.840254,.269281),f(zi,.565498,.84243,.262877),f(zi,.575563,.844566,.256415),f(zi,.585678,.846661,.249897),f(zi,.595839,.848717,.243329),f(zi,.606045,.850733,.236712),f(zi,.616293,.852709,.230052),f(zi,.626579,.854645,.223353),f(zi,.636902,.856542,.21662),f(zi,.647257,.8584,.209861),f(zi,.657642,.860219,.203082),f(zi,.668054,.861999,.196293),f(zi,.678489,.863742,.189503),f(zi,.688944,.865448,.182725),f(zi,.699415,.867117,.175971),f(zi,.709898,.868751,.169257),f(zi,.720391,.87035,.162603),f(zi,.730889,.871916,.156029),f(zi,.741388,.873449,.149561),f(zi,.751884,.874951,.143228),f(zi,.762373,.876424,.137064),f(zi,.772852,.877868,.131109),f(zi,.783315,.879285,.125405),f(zi,.79376,.880678,.120005),f(zi,.804182,.882046,.114965),f(zi,.814576,.883393,.110347),f(zi,.82494,.88472,.106217),f(zi,.83527,.886029,.102646),f(zi,.845561,.887322,.099702),f(zi,.85581,.888601,.097452),f(zi,.866013,.889868,.095953),f(zi,.876168,.891125,.09525),f(zi,.886271,.892374,.095374),f(zi,.89632,.893616,.096335),f(zi,.906311,.894855,.098125),f(zi,.916242,.896091,.100717),f(zi,.926106,.89733,.104071),f(zi,.935904,.89857,.108131),f(zi,.945636,.899815,.112838),f(zi,.9553,.901065,.118128),f(zi,.964894,.902323,.123941),f(zi,.974417,.90359,.130215),f(zi,.983868,.904867,.136897),f(zi,.993248,.906157,.143936)])),Af=function(e){switch(e){case 0:return Nf;case 1:return zf;case 2:return Df;case 3:return $f;default:return _f}},kf=r((function(e,n){var t=n.a,o=n.b,a=u(ec,Wr(n.b)+1,e);return a?u(r((function(e,n){e:for(;;){if(n.b){var r=n.a;if(e){e-=1,n=n.b;continue e}return r}return t}})),a-1,o):t})),Ff=r((function(e,n){return u(kf,e,Af(n))})),Vf=r((function(e,n){return{$:0,a:e,b:n}})),Rf=r((function(e,n){return{$:2,a:e,b:n}})),Bf=function(e){return{$:5,a:e}},Ef=r((function(e,n){return{$:4,a:e,b:n}})),If=r((function(e,n){return{$:3,a:e,b:n}})),jf=r((function(e,n){return{$:1,a:e,b:n}})),Hf=t((function(e,n,r){return{b2:e,b3:n,a3:r}})),Uf=function(e){return e.fd},Of=function(e){return e.d3},Wf=function(e){return e.dT},Gf=function(e){return e.dU},qf=r((function(e,n){return{di:u(tf,e,$u(n)),dT:Wf(n),dU:Gf(n),dV:Eu(n)}})),Yf=r((function(e,n){return{fd:u(qf,e,Uf(n)),d3:Of(n)}})),Xf=r((function(e,n){var r=n;return u(Ru,u(tf,e,r.di),r.fs)})),Zf=r((function(e,n){var r=n;return{m:u(Xf,e,r.m),fS:r.fS,f7:r.f7}})),Kf=r((function(e,n){var r=n.b;return L(e(n.a),e(r))})),Qf=r((function(e,n){return u(Kf,tf(e),n)})),Jf=function(e){return e.fm},es=function(e){return e.f7},ns=r((function(e,n){return{fm:n,f7:vu(e)}})),rs=r((function(e,n){return u(ns,es(n),u(tf,e,Jf(n)))})),ts=r((function(e,n){var r=n.b,t=n.c;return w(e(n.a),e(r),e(t))})),os=r((function(e,n){return u(ts,tf(e),n)})),as=r((function(e,n){var r=e.a,t=e.b,o=e.c,a=f(Hf,r,t,o);switch(n.$){case 0:return u(Vf,n.a,u(Yf,a,n.b));case 1:return u(jf,n.a,u(os,a,n.b));case 3:return u(If,n.a,u(rs,a,n.b));case 2:return u(Rf,n.a,u(Zf,a,n.b));case 4:return u(Ef,n.a,u(Qf,a,n.b));default:var i=n.a;return Bf(u(It,as(w(r,t,o)),i))}})),is=function(e){return as(w(e,0,0))},cs=function(e){return as(w(0,e,0))},ls=t((function(e,n,r){var t=e,o=r,a=.5*n,i=Gu(a),c=qu(a),l=t.fs,u=l.b2*c,f=i*u,s=u*u,d=l.b3*c,v=i*d,m=u*d,p=d*d,b=l.a3*c,g=i*b,h=u*b,x=d*b,C=b*b;return{b2:(1-2*(p+C))*o.b2+2*(m-g)*o.b3+2*(h+v)*o.a3,b3:2*(m+g)*o.b2+(1-2*(s+C))*o.b3+2*(x-f)*o.a3,a3:2*(h-v)*o.b2+2*(x+f)*o.b3+(1-2*(s+p))*o.a3}})),us=t((function(e,n,r){var t=e,o=r,a=.5*n,i=Gu(a),c=qu(a),l=t.di,u=o.b2-l.b2,f=o.b3-l.b3,s=o.a3-l.a3,d=t.fs,v=d.b2*c,m=i*v,p=v*v,b=d.b3*c,g=i*b,h=v*b,x=b*b,C=d.a3*c,P=i*C,M=v*C,T=b*C,y=C*C;return{b2:l.b2+(1-2*(x+y))*u+2*(h-P)*f+2*(M+g)*s,b3:l.b3+2*(h+P)*u+(1-2*(p+y))*f+2*(T-m)*s,a3:l.a3+2*(M-g)*u+2*(T+m)*f+(1-2*(p+x))*s}})),fs=t((function(e,n,r){return{di:f(us,e,n,$u(r)),dT:f(ls,e,n,Wf(r)),dU:f(ls,e,n,Gf(r)),dV:f(ls,e,n,Eu(r))}})),ss=t((function(e,n,r){return{fd:f(fs,e,n,Uf(r)),d3:Of(r)}})),ds=r((function(e,n){var r=u(us,e,n),t=u(ls,e,n);return function(e){var n=e;return u(Ru,r(n.di),t(n.fs))}})),vs=t((function(e,n,r){var t=r;return{m:f(ds,e,n,t.m),fS:t.fS,f7:t.f7}})),ms=t((function(e,n,r){return u(Kf,u(us,e,n),r)})),ps=t((function(e,n,r){return u(ns,es(r),f(us,e,n,Jf(r)))})),bs=t((function(e,n,r){return u(ts,u(us,e,n),r)})),gs=t((function(e,n,r){switch(r.$){case 0:return u(Vf,r.a,f(ss,e,n,r.b));case 1:return u(jf,r.a,f(bs,e,n,r.b));case 3:return u(If,r.a,f(ps,e,n,r.b));case 2:return u(Rf,r.a,f(vs,e,n,r.b));case 4:return u(Ef,r.a,f(ms,e,n,r.b));default:var t=r.a;return Bf(u(It,u(gs,e,n),t))}})),hs=r((function(e,n){var r=e.b;return u(gs,u(Ru,e.a,{b2:r.a,b3:r.b,a3:r.c}),n)})),xs=u(Ru,du,uf),Cs=r((function(e,n){return f(gs,xs,e,n)})),Ps=t((function(e,n,r){return{b2:e.b2+n*(r.b2-e.b2),b3:e.b3+n*(r.b3-e.b3),a3:e.a3+n*(r.a3-e.a3)}})),Ms=t((function(e,n,r){var t=Uf(r),o=Wf(t),a=Gf(t),i=Eu(t),c=f(Ps,e,n,$u(t)),l=0>n?{di:c,dT:Bu(o),dU:Bu(a),dV:Bu(i)}:{di:c,dT:o,dU:a,dV:i},s=Of(r),d=s.b,v=s.c;return{fd:l,d3:w(vu(u(Mu,n,s.a)),vu(u(Mu,n,d)),vu(u(Mu,n,v)))}})),Ts=function(e){return e.m},ys=function(e){return Pu(Ts(e))},Ls=function(e){return e.fS},ws=function(e){return e.f7},Ss=t((function(e,n,r){var t=vu(u(Mu,n,ws(r))),o=vu(u(Mu,n,Ls(r))),a=0>n?Bu(ys(r)):ys(r),i=f(Ps,e,n,function(e){return Tu(Ts(e))}(r));return{m:u(Ru,i,a),fS:o,f7:t}})),Ns=t((function(e,n,r){return u(Kf,u(Ps,e,n),r)})),zs=t((function(e,n,r){return u(ns,u(Mu,ic(n),es(r)),f(Ps,e,n,Jf(r)))})),Ds=t((function(e,n,r){return u(ts,u(Ps,e,n),r)})),$s=r((function(e,n){switch(n.$){case 0:return u(Vf,n.a,f(Ms,du,e,n.b));case 1:return u(jf,n.a,f(Ds,du,e,n.b));case 3:return u(If,n.a,f(zs,du,e,n.b));case 2:return u(Rf,n.a,f(Ss,du,e,n.b));case 4:return u(Ef,n.a,f(Ns,du,e,n.b));default:var r=n.a;return Bf(u(It,$s(e),r))}})),_s=r((function(e,n){var r=e.b2,t=e.b3,o=e.a3;return u(wt,as(w(-r,-t,-o)),u(wt,$s(n),as(w(r,t,o))))})),As=function(e){var n=e.cC,r=e.cF;return{b2:Kl(3)/2*n,b3:.5*n+r}},ks=t((function(e,n,r){return w(e,n,r)})),Fs=t((function(e,n,r){return{b2:e,b3:n,a3:r}})),Vs=r((function(e,n){var r=n.a,t=n.b,o=n.c;return u(jf,e,f(ks,f(Fs,r.b2,r.b3,r.a3),f(Fs,t.b2,t.b3,t.a3),f(Fs,o.b2,o.b3,o.a3)))})),Rs=r((function(e,n){return(n-ut(n/e)*e)/e})),Bs=o((function(e,n,r,t){return e+(n-e)*(1+Gu(6.283185307179586*u(Rs,r,t)))/2})),Es=t((function(e,n,r){var t,o=r.a,a=o.a,i=o.b,c=o.c,l=r.b,d=u(Xl,"minimum rotation degree",e),v=u(Xl,"maximum rotation degree",e),m={b2:(t=As(a?{cC:2/3,cF:2/3}:{cC:1/3,cF:1/3})).b2,b3:t.b3,a3:0},p=s(Bs,d,v,u(Xl,"rotation period",e),e.bm),b=u(wt,$t,u(hs,L(m,w(0,0,1)),p)),g=u(Vs,u(Ff,l,n),w({b2:0,b3:0,a3:0},{b2:Gu(Bl(30)),b3:qu(Bl(30)),a3:0},{b2:0,b3:1,a3:0})),h=u(cs,1+qu(Bl(30)),u(is,Gu(Bl(30)),u(Cs,Bl(180),g))),x=As({cC:i,cF:c});return u(cs,x.b3,u(is,x.b2,b(f(_s,m,u(Xl,"trixel scale",e),a?h:g))))})),Is=function(e){return Bf(e)},js=r((function(e,n){var r=wf(n.l);return Is(u(It,u(Es,e,r.bL),function(e){return n=e.a,f(Sr,t((function(e,n,r){return u(yr,n,r)})),z,n);var n}(r.gm)))})),Hs=function(e){return{$:0,a:e}},Us={$:3},Os=o((function(e,n,r,t){return{$:4,a:e,b:n,c:r,d:t}})),Ws=Os,Gs=r((function(e,n){return n.b?f(Et,yr,n,e):e})),qs=function(e){return f(Et,Gs,z,e)},Ys=r((function(e,n){return qs(u(It,e,n))})),Xs=function(e){return u(ln,"height",jr(e))},Zs=function(e){return rn(function(e){return"script"==e?"p":e}(e))},Ks=function(e){return{$:2,a:e}},Qs=function(e){return u(Hr,"",e)},Js=function(e){var n,r=e.b,t=e.c,o=e.d,a=function(e){return _i(1e4*e)/100};return Qs(_(["rgba(",vc(a(e.a)),"%,",vc(a(r)),"%,",vc(a(t)),"%,",vc((n=o,_i(1e3*n)/1e3)),")"]))},ed=r((function(e,n){switch(n.$){case 0:return u(dr,e,n);case 1:return u(vr,e,n);case 2:return u(mr,e,n);case 3:return u(pr,e,n);case 4:return u(br,e,n);default:return u(gr,e,n)}})),nd=r((function(e,n){switch(n.$){case 0:return u(Yn,e,n);case 1:return u(Xn,e,n);case 2:return u(Zn,e,n);case 3:return u(Kn,e,n);case 4:return u(Qn,e,n);case 5:return u(Jn,e,n);case 6:return u(er,e,n);case 7:return u(nr,e,n);default:return function(e){var n=e.sampleAlphaToCoverage;n.toggle=e.toggle,n.enabled||(e.gl.enable(e.gl.SAMPLE_ALPHA_TO_COVERAGE),n.enabled=!0)}(e)}})),rd=t((function(e,n,r){return f(sr,e,n,r)})),td=Tr,od=s(td,1,1,1,1),ad=t((function(e,n,r){return u(It,(function(e){return u(e,n,r)}),e)})),id=t((function(e,n,r){return{$:0,a:e,b:n,c:r}})),cd=r((function(e,n){var r=n.b2,t=n.b3;return f(id,e*r/t,e,e*(1-r-t)/t)})),ld=Pr,ud=r((function(e,n){return f(ld,3.2406*(t=(r=u(cd,e,n)).a)-1.5372*(o=r.b)-.4986*(a=r.c),-.9689*t+1.8758*o+.0415*a,.0557*t-.204*o+1.057*a);var r,t,o,a})),fd=r((function(e,n){return{ee:P(e.ee,n.ee),u:e.u*n.u+e.v*n.x+e.w*n.A,v:e.u*n.v+e.v*n.y+e.w*n.B,w:e.u*n.w+e.v*n.z+e.w*n.C,x:e.x*n.u+e.y*n.x+e.z*n.A,y:e.x*n.v+e.y*n.y+e.z*n.B,z:e.x*n.w+e.y*n.z+e.z*n.C,A:e.A*n.u+e.B*n.x+e.C*n.A,B:e.A*n.v+e.B*n.y+e.C*n.B,C:e.A*n.w+e.B*n.z+e.C*n.C,N:n.N+(e.N*n.u+e.O*n.x+e.P*n.A)*n.cz,O:n.O+(e.N*n.v+e.O*n.y+e.P*n.B)*n.cz,P:n.P+(e.N*n.w+e.O*n.z+e.P*n.C)*n.cz,cz:e.cz*n.cz}})),sd=function(e){var n=new Float64Array(16);return n[0]=e.em,n[1]=e.eq,n[2]=e.eu,n[3]=e.ey,n[4]=e.en,n[5]=e.er,n[6]=e.ev,n[7]=e.ez,n[8]=e.eo,n[9]=e.es,n[10]=e.ew,n[11]=e.eA,n[12]=e.ep,n[13]=e.et,n[14]=e.ex,n[15]=e.eB,n},dd=a((function(e,n,r,t,o){return v(o,e,s(td,t.cz,t.cz,t.cz,t.ee?1:-1),function(e){return sd({em:e.u,en:e.x,eo:e.A,ep:e.N,eq:e.v,er:e.y,es:e.B,et:e.O,eu:e.w,ev:e.z,ew:e.C,ex:e.P,ey:0,ez:0,eA:0,eB:1})}(t),t.ee,n,r)})),vd=i((function(e,n,r,t,o,a){e:for(;;)switch(o.$){case 0:return a;case 5:var i=o.b;e=e,n=n,r=r,t=u(fd,o.a,t),o=i,a=a;continue e;case 1:return{T:u(yr,d(dd,e,n,r,t,o.b),a.T),af:a.af,gb:a.gb};case 3:return{T:a.T,af:u(yr,d(dd,e,n,r,t,o.b),a.af),gb:a.gb};case 2:return{T:a.T,af:a.af,gb:u(yr,d(dd,e,n,r,t,o.a),a.gb)};default:var c=o.a;return f(Or,s(vd,e,n,r,t),a,c)}})),md=o((function(e,n,r,t){return{$:4,a:e,b:n,c:r,d:t}})),pd=md,bd=o((function(e,n,r,t){return{$:1,a:e,b:n,c:r,d:t}})),gd=r((function(e,n){return{$:6,a:e,b:n}})),hd=gd,xd=_([s(bd,518,!1,0,1),s(pd,!1,!1,!1,!1),u(hd,0,1)]),Cd=519,Pd=7681,Md={src:"\n        precision lowp float;\n\n        void main() {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n    ",attributes:{},uniforms:{}},Td=qn,yd=r((function(e,n){return{$:0,a:e,b:n}})),Ld=yd({d4:1,ed:0,eK:5}),wd=Cr,Sd=Ld(_([{cv:u(wd,-1,-1)},{cv:u(wd,1,-1)},{cv:u(wd,-1,1)},{cv:u(wd,1,1)}])),Nd={src:"\n        precision lowp float;\n\n        attribute vec2 position;\n\n        void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n        }\n    ",attributes:{position:"cv"},uniforms:{}},zd=function(e){return function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){return function(f){return{$:2,a:e,b:n,c:r,d:t,e:o,f:a,g:i,h:c,i:l,j:u,k:f}}}}}}}}}}}},Dd=t((function(e,n,t){var o=e.dz,a=e.c9,i=e.dS,c=r((function(e,n){return n(e)})),l=r((function(e,n){return n(e)})),s=function(e){return u(wt,c(e.bU),u(wt,l(e.bz),u(wt,l(e.b4),l(e.b5))))};return u(s,t,u(s,n,f(zd,o,a,i)))})),$d=function(e){return f(Dd,{c9:e.c9,dz:e.dz,dS:e.dS},{bz:e.bz,bU:e.bU,b4:e.b4,b5:e.b5},{bz:e.bz,bU:e.bU,b4:e.b4,b5:e.b5})},_d=function(e){return d(Td,_([$d(e),s(pd,!1,!1,!1,!1)]),Nd,Md,Sd,{})},Ad=_d({bz:Pd,c9:0,dz:8,bU:Cd,dS:15,b4:Pd,b5:Pd}),kd=7680,Fd=function(e){return _d({bz:kd,c9:15,dz:8,bU:516,dS:(n=e,u($i,2,n+4)),b4:5386,b5:5386});var n},Vd=t((function(e,n,r){return qs(_([f(ad,e,r,xd),_([Fd(n),Ad])]))})),Rd=r((function(e,n){return qs(u(Xr,Vd(e),n))})),Bd=s(bd,513,!0,0,1),Ed=t((function(e,n,r){return{$:0,a:e,b:n,c:r}})),Id=r((function(e,n){return f(Ed,32774,e,n)})),jd=function(e){var n=e.cx,t=e.cg,o=e.b9,a=e.b6,i=e.cb,c=e.a4;return u(r((function(e,r){var i=e.b,c=e.c,l=r.a,u=r.b,f=r.c;return function(e){return function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){return{$:0,a:e,b:n,c:r,d:t,e:o,f:a,g:i,h:c,i:l,j:u}}}}}}}}}}}(e.a)(i)(c)(l)(u)(f)(n)(t)(o)(a)})),i,c)}({b6:0,a4:u(Id,1,771),b9:0,cb:u(Id,770,771),cg:0,cx:0}),Hd=_([Bd,jd]),Ud=function(e){return e.eF},Od=function(e){return e.eI},Wd=r((function(e,n){return n-e})),Gd=function(e){return w(u(Wd,function(e){return e.eG}(e),function(e){return e.eD}(e)),u(Wd,function(e){return e.eH}(e),function(e){return e.eE}(e)),u(Wd,Od(e),Ud(e)))},qd=function(e){return{di:{b2:e.N,b3:e.O,a3:e.P},dT:{b2:e.u,b3:e.v,a3:e.w},dU:{b2:e.x,b3:e.y,a3:e.z},dV:{b2:e.A,b3:e.B,a3:e.C}}},Yd=r((function(e,n){var r=e.dV,t=e.dU,o=e.dT;return{b2:n.b2*o.b2+n.b3*o.b3+n.a3*o.a3,b3:n.b2*t.b2+n.b3*t.b3+n.a3*t.a3,a3:n.b2*r.b2+n.b3*r.b3+n.a3*r.a3}})),Xd=r((function(e,n){var r=e.di,t=n.b2-r.b2,o=n.b3-r.b3,a=n.a3-r.a3,i=e.dV,c=e.dU,l=e.dT;return{b2:t*l.b2+o*l.b3+a*l.a3,b3:t*c.b2+o*c.b3+a*c.a3,a3:t*i.b2+o*i.b3+a*i.a3}})),Zd=r((function(e,n){return{di:u(Xd,e,$u(n)),dT:u(Yd,e,Wf(n)),dU:u(Yd,e,Gf(n)),dV:u(Yd,e,Eu(n))}})),Kd=r((function(e,n){return u(st,e,n)})),Qd=r((function(e,n){return 0>T(e,n)?e:n})),Jd=r((function(e,n){return u(Qd,e,n)})),ev=r((function(e,n){var r=n,t=e;return{eD:u(Kd,t.eD,r.eD),eE:u(Kd,t.eE,r.eE),eF:u(Kd,t.eF,r.eF),eG:u(Jd,t.eG,r.eG),eH:u(Jd,t.eH,r.eH),eI:u(Jd,t.eI,r.eI)}})),nv=r((function(e,n){return n+e})),rv=r((function(e,n){var r=e.a,t=e.c,o=mu(vu(e.b)),a=mu(vu(r)),i=mu(vu(t)),c=function(e){return w(e.b2,e.b3,e.a3)}(n),l=c.a,f=c.b,s=c.c;return{eD:u(nv,a,l),eE:u(nv,o,f),eF:u(nv,i,s),eG:u(Wd,a,l),eH:u(Wd,o,f),eI:u(Wd,i,s)}})),tv=o((function(e,n,r,t){var o=r.fm,a=2*r.fG*n,i=2*r.fF*n,c=2*r.fE*n,l=o.a3*n,s=o.b3*n,d=o.b2*n,v=Eu(e),m=ic(c*v.b2)+ic(i*v.b3)+ic(a*v.a3),p=Gf(e),b=ic(c*p.b2)+ic(i*p.b3)+ic(a*p.a3),g=Wf(e),h=ic(c*g.b2)+ic(i*g.b3)+ic(a*g.a3),x=u(rv,w(h,b,m),u(Xd,e,f(Fs,d,s,l)));return Br(t.$?x:u(ev,t.a,x))})),ov=o((function(e,n,r,t){e:for(;;){if(!t.b)return r;var o=t.a,a=t.b;switch(o.$){case 0:e=c=e,n=l=n,r=f=r,t=a;continue e;case 1:var i=s(tv,e,n,o.a,r);e=c=e,n=l=n,r=f=i,t=a;continue e;case 2:e=c=e,n=l=n,r=f=r,t=a;continue e;case 3:i=s(tv,e,n,o.a,r),e=c=e,n=l=n,r=f=i,t=a;continue e;case 4:var c=e,l=n,f=s(ov,e,n,r,o.a);e=c,n=l,r=f,t=a;continue e;default:var d=o.a,v=o.b,m=u(Zd,qd(d),e),p=n*d.cz;e=c=e,n=l=n,r=f=s(ov,m,p,r,_([v])),t=a;continue e}}})),av=function(e){return e[0]},iv=function(e){return e[1]},cv=function(e){return e[2]},lv=function(e){return{$:4,a:e}},uv=r((function(e,n){for(;;){if(!e.b)return n;var r=e.a;e=e.b,n=u(yr,r,n)}})),fv=function(e){return lv(u(uv,e,z))},sv={ee:!0,u:1,v:0,w:0,x:0,y:1,z:0,A:0,B:0,C:1,N:0,O:0,P:0,cz:1},dv=_d({bz:Pd,c9:0,dz:8,bU:Cd,dS:255,b4:Pd,b5:Pd}),vv={b9:0,fl:!1,cg:0,dt:0,cx:0,dL:0,b2:0,b3:0,a3:0},mv=r((function(e,n){return sd({em:e.b2,en:e.cx,eo:n.b2,ep:n.cx,eq:e.b3,er:e.cg,es:n.b3,et:n.cg,eu:e.a3,ev:e.b9,ew:n.a3,ex:n.b9,ey:e.dL,ez:e.dt,eA:n.dL,eB:n.dt})})),pv=L({bI:u(mv,vv,vv),ck:u(mv,vv,vv),cl:u(mv,vv,vv),cm:u(mv,vv,vv)},s(td,0,0,0,0)),bv=function(e){return s(bd,515,e.an,e.ah,e.ag)},gv=_([bv({ag:1,ah:0,an:!0}),$d({bz:kd,c9:240,dz:0,bU:514,dS:0,b4:kd,b5:kd}),jd]),hv=r((function(e,n){var r=e,t=n.fB,o=n.fc,a=vu(n.f$),i=vu(t),c=r.dx;if(c.$){var l=c.a;return pc(i)?sd({em:2/(o*l),en:0,eo:0,ep:0,eq:0,er:2/l,es:0,et:0,eu:0,ev:0,ew:0,ex:-1,ey:0,ez:0,eA:0,eB:1}):sd({em:2/(o*l),en:0,eo:0,ep:0,eq:0,er:2/l,es:0,et:0,eu:0,ev:0,ew:-2/(i-a),ex:-(i+a)/(i-a),ey:0,ez:0,eA:0,eB:1})}var u=c.a;return pc(i)?sd({em:1/(o*u),en:0,eo:0,ep:0,eq:0,er:1/u,es:0,et:0,eu:0,ev:0,ew:-1,ex:-2*a,ey:0,ez:0,eA:-1,eB:0}):sd({em:1/(o*u),en:0,eo:0,ep:0,eq:0,er:1/u,es:0,et:0,eu:0,ev:0,ew:-(i+a)/(i-a),ex:-2*i*a/(i-a),ey:0,ez:0,eA:-1,eB:0})})),xv=r((function(e,n){return 1==(1&e>>n)?0:1})),Cv=t((function(e,n,r){return qs(u(It,(function(r){var t=r<<4;return f(ad,e,L(n,s(td,u(xv,r,0),u(xv,r,1),u(xv,r,2),u(xv,r,3))),function(e){return _([bv({ag:1,ah:0,an:!0}),$d({bz:kd,c9:240,dz:e,bU:514,dS:0,b4:kd,b5:kd}),jd])}(t))}),u(Yr,1,u($i,2,r)-1)))})),Pv={b2:1,b3:0,a3:0},Mv=bu,Tv={di:du,dT:Pv,dU:Mv,dV:uf},yv=r((function(e,n){var r,t,o,a,i;return t=$u(r=u(Zd,n,e)),o=Eu(r),a=Gf(r),i=Wf(r),sd({em:i.b2,en:a.b2,eo:o.b2,ep:t.b2,eq:i.b3,er:a.b3,es:o.b3,et:t.b3,eu:i.a3,ev:a.a3,ew:o.a3,ex:t.a3,ey:0,ez:0,eA:0,eB:1})})),Lv=function(e){return Wf(e)},wv=function(e){return Gf(e)},Sv=r((function(e,n){var r,t=_([(1,{$:1,a:1}),Ks(0),Hs(!0),s(Ws,0,0,0,0)]),o=function(){var n=e.fa;switch(n.$){case 0:return w(t,"0",1);case 1:return w(u(yr,Us,t),"1",1);default:return w(t,"0",n.a)}}(),a=o.a,i=o.b,c=o.c,l=e.d3,d=l.a,m=l.b,p=u(Qc,"height",jr(m)+"px"),b=d,g=b/m,h=u(Ys,(function(n){return function(e){var n=function(e){return e.dP}(e.fj),r={di:_u(n),dT:Lv(n),dU:wv(n),dV:Bu(Iu(n))},t=fv(e.d7),o=s(ov,r,1,Er,_([t]));if(1===o.$)return z;var a=o.a,i=u(yv,Tv,n),c=u(Mu,.99,u(Kd,vu(e.d0),Au(Ud(a)))),l=Gd(a),d=function(e){var n=e,r=u(st,ic(n.b2),u(st,ic(n.b3),ic(n.a3)));if(r){var t=n.a3/r,o=n.b3/r,a=n.b2/r;return Kl(a*a+o*o+t*t)*r}return 0}(f(Hu,l.a,l.b,l.c)),m=u(Mu,1.01,u(nv,d,Au(Od(a)))),p=u(hv,e.fj,{fc:e.fc,fB:m,f$:c}),b=function(e){return{em:e[0],eq:e[1],eu:e[2],ey:e[3],en:e[4],er:e[5],ev:e[6],ez:e[7],eo:e[8],es:e[9],ew:e[10],eA:e[11],ep:e[12],et:e[13],ex:e[14],eB:e[15]}}(p).eB,g=b?Bu(Iu(n)):_u(n),h=function(){var n=e.gl;switch(n.$){case 0:return L(0,0);case 1:return L(1,0);case 2:return L(2,0);case 3:return L(3,n.a);case 4:return L(4,n.a);default:return L(5,0)}}(),x=h.a,C=h.b,P=u(ud,e.fy,e.gs),M=sd({em:0,en:g.b2,eo:av(P),ep:e.e1,eq:0,er:g.b3,es:iv(P),et:d,eu:0,ev:g.a3,ew:cv(P),ex:x,ey:0,ez:b,eA:0,eB:C}),T=v(vd,M,i,p,sv,t,{T:z,af:z,gb:z}),y=e.fU;switch(y.$){case 0:return qs(_([f(ad,T.T,L(w=y.a,od),Hd),f(ad,T.af,pv,Hd)]));case 1:var w=y.a;return qs(_([f(ad,T.T,pv,Hd),_([dv]),f(ad,T.gb,w.bI,xd),_([Fd(0)]),f(ad,T.T,L(w,od),gv),f(ad,T.af,pv,Hd)]));default:var S=y.a,N=y.b;return qs(_([f(ad,T.T,L(N,od),Hd),_([dv]),u(Rd,T.gb,S),f(Cv,T.T,N,Wr(S)),f(ad,T.af,pv,Hd)]))}}({fc:g,fj:e.fj,d0:e.d0,d7:n.d7,fy:n.fy,fU:n.fU,e1:c,gl:n.gl,gs:n.gs})}),n),x=u(Qc,"width",jr(b)+"px"),C=Js(e.dY);return f(Zs,"div",_([u(Qc,"padding","0px"),x,p]),_([L(i,f(rd,a,_([(r=_i(b*c),u(ln,"width",jr(r))),Xs(_i(m*c)),x,p,u(Qc,"display","block"),u(Qc,"background-color",C)]),h))]))})),Nv={b2:.31271,b3:.32902},zv=r((function(e,n){var r=e,t=n.fs,o=t.b2,a=t.b3,i=t.a3,c=u(ud,n.c$,n.cO);return{b9:cv(c),fl:r,cg:iv(c),dt:0,cx:av(c),dL:1,b2:-o,b3:-a,a3:-i}})),Dv={$:0},$v=function(e){return function(e){for(;;){if(P(e.fN,0)&&P(e.fO,0))return vv;if(!u(tu,vu(e.fN),vu(e.fO))){var n=ic(e.fO/Rl),r=ic(e.fN/Rl),t=e.gn,o=t.b2,a=t.b3,i=t.a3,c=u(ud,1,e.cO);return{b9:r*cv(c),fl:!1,cg:r*iv(c),dt:n/r,cx:r*av(c),dL:3,b2:o,b3:a,a3:i}}e={cO:e.cO,fN:e.fO,fO:e.fN,gn:Bu(e.gn)}}}({cO:e.cO,fN:e.c$,fO:0,gn:e.gn})},_v=t((function(e,n,r){return 0>T(r,e)?e:T(r,n)>0?n:r})),Av=function(e){var n=f(_v,1667,25e3,e),r=n>4e3?-3025846900/(n*n*n)+2107037.9/(n*n)+.2226347*1e3/n+.24039:-266123900.00000003/(n*n*n)-.2343589*1e6/(n*n)+877.6956/n+.17991;return{b2:r,b3:n>2222?n>4e3?r*r*r*3.081758-r*r*5.8733867+3.75112997*r-.37001483:r*r*r*-.9549476-r*r*1.37418593+2.09137015*r-.16748867:r*r*r*-1.1063814-r*r*1.3481102+2.18555832*r-.20219683}},kv=Av(12e3),Fv=Av(5600),Vv=r((function(e,n){return{$:2,a:e,b:n}})),Rv=function(e){return{$:0,a:e}},Bv=function(e){return e.fl},Ev=Rv(pv.a),Iv=r((function(e,n){return f(Et,r((function(n,r){var t=r.a,o=r.b;return e(n)?L(u(yr,n,t),o):L(t,u(yr,n,o))})),L(z,z),n)})),jv=function(e){return sd({em:e.b2,en:e.cx,eo:0,ep:0,eq:e.b3,er:e.cg,es:0,et:0,eu:e.a3,ev:e.b9,ew:0,ex:0,ey:e.dL,ez:e.dt,eA:0,eB:0})},Hv=l((function(e,n,r,t,o,a,i,c){var l=u(Iv,Bv,_([e,n,r,t])),f=l.a;if(f.b){var s=N(f,l.b);if(s.b&&s.b.b&&s.b.b.b&&s.b.b.b.b&&!s.b.b.b.b.b){var d=s.a,v=s.b,m=v.a,p=v.b,b=p.a,g=p.b.a;return u(Vv,u(It,jv,f),{bI:u(mv,d,m),ck:u(mv,b,g),cl:u(mv,o,a),cm:u(mv,i,c)})}return Ev}return Rv({bI:u(mv,e,n),ck:u(mv,r,t),cl:u(mv,o,a),cm:u(mv,i,c)})})),Uv=t((function(e,n,r){return p(Hv,e,n,r,vv,vv,vv,vv,vv)})),Ov=o((function(e,n,r,t){return{$:2,a:e,b:n,c:r,d:t}})),Wv=o((function(e,n,r,t){return{$:3,a:e,b:n,c:r,d:t}})),Gv=o((function(e,n,r,t){return{$:4,a:e,b:n,c:r,d:t}})),qv=o((function(e,n,r,t){return{$:6,a:e,b:n,c:r,d:t}})),Yv=o((function(e,n,r,t){return{$:7,a:e,b:n,c:r,d:t}})),Xv=o((function(e,n,r,t){return{$:5,a:e,b:n,c:r,d:t}})),Zv=o((function(e,n,r,t){return{$:1,a:e,b:n,c:r,d:t}})),Kv=function(e){switch(e.$){case 0:return e;case 1:return s(Zv,e.a,e.b,e.c,1);case 2:return s(Ov,e.a,e.b,e.c,1);case 3:return s(Wv,e.a,e.b,e.c,1);case 4:return s(Gv,e.a,e.b,e.c,1);case 5:return s(Xv,e.a,e.b,e.c,1);case 6:return s(qv,e.a,e.b,e.c,1);case 7:return s(Yv,e.a,e.b,e.c,1);case 8:case 9:default:return e}},Qv={$:0},Jv=l((function(e,n,r,t,o,a,i,c){for(;;){if(!c.b)return{eD:n,eE:t,eF:a,eG:e,eH:r,eI:o};var l=c.b,f=i(c.a);e=u(Jd,f.eG,e),n=u(Kd,f.eD,n),r=u(Jd,f.eH,r),t=u(Kd,f.eE,t),o=u(Jd,f.eI,o),a=u(Kd,f.eF,a),i=i,c=l}})),em=t((function(e,n,r){var t=e(n);return p(Jv,t.eG,t.eD,t.eH,t.eE,t.eI,t.eF,e,r)})),nm=r((function(e,n){return 1>T(n,e)})),rm=function(e){return u(nm,e.eD,e.eG)&&u(nm,e.eE,e.eH)&&u(nm,e.eF,e.eI)?e:{eD:u(Kd,e.eG,e.eD),eE:u(Kd,e.eH,e.eE),eF:u(Kd,e.eI,e.eF),eG:u(Jd,e.eG,e.eD),eH:u(Jd,e.eH,e.eE),eI:u(Jd,e.eI,e.eF)}},tm=function(e){return e},om=function(e){var n=e.a,r=e.b,t=e.c,o=Qu(n),a=ef(n),i=nf(n),c=Qu(r),l=ef(r),f=nf(r),s=Qu(t),d=ef(t),v=nf(t);return rm({eD:u(Kd,o,u(Kd,c,s)),eE:u(Kd,a,u(Kd,l,d)),eF:u(Kd,i,u(Kd,f,v)),eG:u(Jd,o,u(Jd,c,s)),eH:u(Jd,a,u(Jd,l,d)),eI:u(Jd,i,u(Jd,f,v))})},am=function(e){return new Float64Array([e.b2,e.b3,e.a3])},im=function(e){return am(e)},cm=function(e){return am(e)},lm=r((function(e,n){var r=e,t=n,o=u(st,ic(t.b2),u(st,ic(t.b3),ic(t.a3)));if(o){var a=t.a3/o,i=t.b3/o,c=t.b2/o,l=Kl(c*c+i*i+a*a);return{b2:r*c/l,b3:r*i/l,a3:r*a/l}}return cu}))(1),um=t((function(e,n,r){return lm(u(Jl,u(nu,n,r),u(nu,e,n)))})),fm=function(e){var n=e.a,r=e.b,t=e.c,o=cm(f(um,n,r,t));return w({s:o,cv:im(n)},{s:o,cv:im(r)},{s:o,cv:im(t)})},sm=r((function(e,n){return{$:2,a:e,b:n}}))({d4:3,ed:0,eK:4}),dm=t((function(e,n,r){return{b2:e,b3:n,a3:r}})),vm=(Eo=u(Mu,-.5,1),Io=u(Mu,-.5,1),Ho=f(dm,jo=u(Mu,-.5,1),Io,Eo),Oo=f(dm,jo,Io,Uo=u(Mu,.5,1)),Go=f(dm,jo,Wo=u(Mu,.5,1),Eo),qo=f(dm,jo,Wo,Uo),Xo=f(dm,Yo=u(Mu,.5,1),Io,Eo),Zo=f(dm,Yo,Wo,Eo),Ko=f(dm,Yo,Io,Uo),Qo=f(dm,Yo,Wo,Uo),Kv(function(e){if(e.b){var n=e.a,r=e.b,t=sm(u(It,fm,e));return s(Ov,f(em,om,n,r),e,t,0)}return Qv}(_([f(ks,Ho,Zo,Xo),f(ks,Ho,Go,Zo),f(ks,Oo,Ko,Qo),f(ks,Oo,Qo,qo),f(ks,Xo,Zo,Qo),f(ks,Xo,Qo,Ko),f(ks,Ho,qo,Go),f(ks,Ho,Oo,qo),f(ks,Ho,Xo,Ko),f(ks,Ho,Ko,Oo),f(ks,Go,Qo,Zo),f(ks,Go,qo,Qo)])))),mm={$:0},pm=t((function(e,n,r){return{$:1,a:e,b:n,c:r}})),bm=t((function(e,n,r){var t=n.a,o=n.b,a=e(n.c),i=e(o),c=e(t),l=cm(f(um,c,i,a)),s={s:l,cv:im(c)},d={s:l,cv:im(i)},v={s:l,cv:im(a)};return u(yr,s,u(yr,d,u(yr,v,r)))})),gm=function(e){return e.H},hm=o((function(e,n,r,t){return 1===n.$||1===r.$||1===t.$?Er:Br(f(e,n.a,r.a,t.a))})),xm=4294967295>>>32-at,Cm=h,Pm=t((function(e,n,r){for(;;){var t=u(Cm,xm&n>>>e,r);if(t.$)return u(Cm,xm&n,t.a);e-=at,n=n,r=t.a}})),Mm=r((function(e,n){var r=n.a,t=n.b,o=n.c,a=n.d;return 0>e||T(e,r)>-1?Er:T(e,function(e){return e>>>5<<5}(r))>-1?Br(u(Cm,xm&e,a)):Br(f(Pm,t,e,o))})),Tm=function(e){return e.aA},ym=r((function(e,n){return u(Mm,e,Tm(n))})),Lm=t((function(e,n,r){for(;;){var t=u(vt,Jr,e),o=t.a,a=t.b;if(0>T(ft(o),Jr))return u(bt,!0,{D:n,o:r,t:o});e=a,n=u(yr,lt(o),n),r+=1}})),wm=function(e){return e.b?f(Lm,e,z,0):it},Sm=r((function(e,n){return!u(sc,u(mo,fc,e),n)})),Nm=r((function(e,n){return f(Et,r((function(n,r){return e(n)?u(yr,n,r):r})),z,n)})),zm=r((function(e,n){var r=function(e){return e.a}(e),t=function(e){var n=e.a,t=e.b,o=e.c;return n>=0&&0>T(n,r)&&t>=0&&0>T(t,r)&&o>=0&&0>T(o,r)};return u(Sm,t,n)?{H:n,aA:e}:{H:u(Nm,t,n),aA:e}})),Dm=t((function(e,n,r){return{$:3,a:e,b:n,c:r}}))({d4:1,ed:3,eK:4}),$m=r((function(e,n){var r=n;return L(w(e.b2,e.b3,e.a3),w(r.b2,r.b3,r.a3))})),_m=r((function(e,n){e:for(;;){if(-2===n.$)return Er;var r=n.c,t=n.d,o=n.e;switch(u(yo,e,n.b)){case 0:e=e,n=t;continue e;case 1:return Br(r);default:e=e,n=o;continue e}}})),Am=f(ld,0,0,0),km=i((function(e,n,r,t,o,a){var i=a.a,c=a.b,l=a.c,f=u(_m,u($m,e,n),o);if(f.$){var s={s:Am,cv:im(n)},d={s:Am,cv:im(e)},v=l+1;return w(u(yr,w(r,l,v),u(yr,w(r,v,t),i)),u(yr,s,u(yr,d,c)),l+2)}return w(u(yr,w(r,f.a,t),i),c,l)})),Fm=a((function(e,n,r,t,o){for(;;){if(!r.b)return L(o.a,Kr(o.b));var a=r.a,i=a.a,c=a.b,l=r.b,u=e(a.c),f=e(c),s=e(i),d=t+2,m=t+1,p=e,b=n,g=l,h=t+3,x=v(km,u,s,d,t,n,v(km,f,u,m,d,n,v(km,s,f,t,m,n,o)));e=p,n=b,r=g,t=h,o=x}})),Vm=a((function(e,n,r,t,o){for(;;){if(!n.b)return w(t,o,r);var a=n.a,i=a.a,c=a.b,l=n.b,s=e(a.c),d=e(c),v=e(i),m=r+2,p=r+1,b=r,g=f(wo,u($m,v,s),m,f(wo,u($m,s,d),p,f(wo,u($m,d,v),b,o)));e=e,n=l,r+=3,t=u(yr,w(b,p,m),t),o=g}})),Rm=t((function(e,n,r){var o,a=u(Fo,(function(e){var n=e.a,r=e.b,a=e.c;return s(hm,t((function(e,n,r){return w(e,n,r)})),u(ym,n,o),u(ym,r,o),u(ym,a,o))}),gm(o=r)),i=f(Et,bm(n),z,a),c=d(Vm,n,a,0,z,xo),l=d(Fm,n,c.b,a,0,w(c.a,z,c.c)),v=l.a,m=l.b,p=m.b?N(i,m):i;return f(pm,e,u(zm,wm(p),v),u(Dm,p,v))})),Bm=function(e){return{H:u(It,(function(e){return w(3*e,3*e+1,3*e+2)}),u(Yr,0,Wr(e)-1)),aA:wm(qs(u(It,(function(e){return _([e.a,e.b,e.c])}),e)))}},Em=function(e){switch(e.$){case 0:return mm;case 1:case 2:return f(Rm,e.a,$t,Bm(u(It,tm,e.b)));case 3:return f(Rm,e.a,$t,e.b);case 4:case 5:case 6:case 7:return f(Rm,e.a,(function(e){return e.cv}),e.b);case 8:case 9:default:return mm}},Im=Em(vm),jm={$:0},Hm=jm,Um=r((function(e,n){return{$:1,a:e,b:n}})),Om={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void main () {\n            gl_FragColor = texture2D(colorTexture, interpolatedUv);\n        }\n    ",attributes:{},uniforms:{colorTexture:"cc"}},Wm=function(e){return{$:5,a:e}},Gm=Wm(1029),qm=Wm(1028),Ym=t((function(e,n,r){return 1===n?u(yr,e?Gm:qm,r):r})),Xm={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute mediump vec2 uv;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedUv = uv;\n        }\n    ",attributes:{position:"cv",uv:"R"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},Zm=o((function(e,n,r,t){return u(Um,n,l((function(n,o,a,i,c,l,u,s){return d(Td,f(Ym,i,t,s),Xm,Om,r,{cc:e,c:a,d:o,e:l,f:n,g:c})})))})),Km={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        \n        void main () {\n            gl_FragColor = vec4(constantColor, 1.0);\n        }\n    ",attributes:{},uniforms:{constantColor:"aQ"}},Qm={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{position:"cv"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},Jm=o((function(e,n,r,t){return u(Um,n,l((function(n,o,a,i,c,l,u,s){return d(Td,f(Ym,i,t,s),Qm,Km,r,{aQ:e,c:a,d:o,e:l,f:n,g:c})})))})),ep=r((function(e,n){return{$:3,a:e,b:n}})),np={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(constantColor, alpha);\n        }\n    ",attributes:{},uniforms:{constantColor:"aQ",pointRadius:"cu",sceneProperties:"f"}},rp={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform lowp float pointRadius;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            float supersampling = sceneProperties[3][0];\n            gl_PointSize = 2.0 * pointRadius * supersampling + 2.0;\n        }\n    ",attributes:{position:"cv"},uniforms:{modelMatrix:"c",modelScale:"d",pointRadius:"cu",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},tp=o((function(e,n,r,t){return u(ep,r,l((function(r,o,a,i,c,l,u,f){return d(Td,f,rp,np,t,{aQ:e,c:a,d:o,cu:n,e:l,f:r,g:c})})))})),op={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"a7",sceneProperties:"f"}},ap=Mr,ip=a((function(e,n,r,t,o){return u(Um,r,l((function(r,a,i,c,l,s,v,m){return d(Td,f(Ym,c,o,m),Qm,op,t,{a7:u(ap,n,e),c:i,d:a,e:s,f:r,g:l})})))})),cp={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            vec4 color = toSrgb(emissiveColor, sceneProperties);\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(color.rgb, alpha);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"a7",pointRadius:"cu",sceneProperties:"f"}},lp=a((function(e,n,r,t,o){return u(ep,t,l((function(t,a,i,c,l,f,s,v){return d(Td,v,rp,cp,o,{a7:u(ap,n,e),c:i,d:a,cu:r,e:f,f:t,g:l})})))})),up={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 materialColor;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"X",lights12:"bI",lights34:"ck",lights56:"cl",lights78:"cm",materialColor:"da",sceneProperties:"f",viewMatrix:"g"}},fp={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{normal:"s",position:"cv"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},sp=o((function(e,n,r,t){return u(Um,n,l((function(n,o,a,i,c,l,u,s){var v=u.a,m=u.b;return d(Td,f(Ym,i,t,s),fp,up,r,{X:m,bI:v.bI,ck:v.ck,cl:v.cl,cm:v.cm,da:e,c:a,d:o,e:l,f:n,g:c})})))})),dp={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D materialColorTexture;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n            vec3 materialColor = fromSrgb(texture2D(materialColorTexture, interpolatedUv).rgb);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"X",lights12:"bI",lights34:"ck",lights56:"cl",lights78:"cm",materialColorTexture:"db",normalMapTexture:"bf",sceneProperties:"f",useNormalMap:"bo",viewMatrix:"g"}},vp={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        attribute mediump vec2 uv;\n        attribute highp vec3 tangent;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getWorldTangent(vec3 modelTangent, vec4 modelScale, mat4 modelMatrix) {\n            return (modelMatrix * vec4(safeNormalize(modelScale.xyz * modelTangent), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = uv;\n            interpolatedTangent = getWorldTangent(tangent, modelScale, modelMatrix);\n        }\n    ",attributes:{normal:"s",position:"cv",tangent:"e3",uv:"R"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},mp=i((function(e,n,r,t,o,a){return u(Um,t,l((function(t,i,c,l,u,s,v,m){var p=v.a,b=v.b;return d(Td,f(Ym,l,a,m),vp,dp,o,{X:b,bI:p.bI,ck:p.ck,cl:p.cl,cm:p.cm,db:e,c:c,d:i,bf:n,e:s,f:t,bo:r,g:u})})))})),pp={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D baseColorTexture;\n        uniform lowp vec4 constantBaseColor;\n        uniform mediump sampler2D roughnessTexture;\n        uniform lowp vec2 constantRoughness;\n        uniform mediump sampler2D metallicTexture;\n        uniform lowp vec2 constantMetallic;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getFloatValue(sampler2D texture, vec2 uv, vec2 constantValue) {\n            if (constantValue.y == 1.0) {\n                return constantValue.x;\n            } else {\n                vec4 textureColor = texture2D(texture, uv);\n                return dot(textureColor, vec4(0.2126, 0.7152, 0.0722, 0.0));\n            }\n        }\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 baseColor = fromSrgb(texture2D(baseColorTexture, interpolatedUv).rgb) * (1.0 - constantBaseColor.w) + constantBaseColor.rgb * constantBaseColor.w;\n            float roughness = getFloatValue(roughnessTexture, interpolatedUv, constantRoughness);\n            float metallic = getFloatValue(metallicTexture, interpolatedUv, constantMetallic);\n        \n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColorTexture:"cM",constantBaseColor:"cR",constantMetallic:"cS",constantRoughness:"cT",enabledLights:"X",lights12:"bI",lights34:"ck",lights56:"cl",lights78:"cm",metallicTexture:"de",normalMapTexture:"bf",roughnessTexture:"dD",sceneProperties:"f",useNormalMap:"bo",viewMatrix:"g"}},bp={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 baseColor;\n        uniform lowp float roughness;\n        uniform lowp float metallic;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColor:"cL",enabledLights:"X",lights12:"bI",lights34:"ck",lights56:"cl",lights78:"cm",metallic:"dd",roughness:"dC",sceneProperties:"f",viewMatrix:"g"}},gp=i((function(e,n,r,t,o,a){return u(Um,t,l((function(t,i,c,l,u,s,v,m){var p=v.a,b=v.b;return d(Td,f(Ym,l,a,m),fp,bp,o,{cL:e,X:b,bI:p.bI,ck:p.ck,cl:p.cl,cm:p.cm,dd:r,c:c,d:i,e:s,dC:n,f:t,g:u})})))})),hp=r((function(e,n){return{$:1,a:e,b:n}})),xp=r((function(e,n){return n.$?L(n.a.G,1):L(e,0)})),Cp=s(td,0,0,0,0),Pp=r((function(e,n){var r;return n.$?L(n.a.G,Cp):L(e,s(td,av(r=n.a),iv(r),cv(r),1))})),Mp=r((function(e,n){var r,t=L(e,n);return t.a.$?u(hp,L(r=t.a.a.G,Cp),u(xp,r,n)):t.b.$?u(hp,u(Pp,r=t.b.a.G,e),u(xp,r,n)):{$:0,a:t.a.a}})),Tp=t((function(e,n,r){return{$:0,a:e,b:n,c:r}})),yp=o((function(e,n,r,t){return{$:1,a:e,b:n,c:r,d:t}})),Lp=o((function(e,n,r,t){return{$:0,a:e,b:n,c:r,d:t}})),wp=u(wd,0,0),Sp=r((function(e,n){return n.$?L(n.a.G,wp):L(e,u(wd,n.a,1))})),Np=o((function(e,n,r,t){var o,a=s(Lp,e,n,r,t);return a.a.$?s(yp,L(o=a.a.a.G,Cp),u(Sp,o,n),u(Sp,o,r),u(xp,o,t)):a.b.$?s(yp,u(Pp,o=a.b.a.G,e),L(o,wp),u(Sp,o,r),u(xp,o,t)):a.c.$?s(yp,u(Pp,o=a.c.a.G,e),u(Sp,o,n),L(o,wp),u(xp,o,t)):a.d.$?s(yp,u(Pp,o=a.d.a.G,e),u(Sp,o,n),u(Sp,o,r),L(o,1)):f(Tp,a.a.a,a.b.a,a.c.a)})),zp={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        uniform mediump float backlight;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            vec3 emissiveColor = fromSrgb(texture2D(colorTexture, interpolatedUv).rgb) * backlight;\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{backlight:"cH",colorTexture:"cc",sceneProperties:"f"}},Dp=a((function(e,n,r,t,o){return u(Um,r,l((function(r,a,i,c,l,u,s,v){return d(Td,f(Ym,c,o,v),Xm,zp,t,{cH:n,cc:e,c:i,d:a,e:u,f:r,g:l})})))})),$p={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        attribute mediump vec2 uv;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = uv;\n            interpolatedTangent = vec3(0.0, 0.0, 0.0);\n        }\n    ",attributes:{normal:"s",position:"cv",uv:"R"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},_p=o((function(e,n,r,t){return u(Um,n,l((function(n,o,a,i,c,l,u,s){var v=u.a,m=u.b;return d(Td,f(Ym,i,t,s),$p,dp,r,{X:m,bI:v.bI,ck:v.ck,cl:v.cl,cm:v.cm,db:e,c:a,d:o,bf:e,e:l,f:n,bo:0,g:c})})))})),Ap=function(e){return n(9,e,(function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){return e(n,r,t,o,a,i,c,l,u)}}}}}}}}}))}((function(e,n,r,t,o,a,i,c,s){return u(Um,i,l((function(i,l,u,v,m,p,b,g){var h=b.a,x=b.b;return d(Td,f(Ym,v,s,g),$p,pp,c,{cM:e,cR:n,cS:a,cT:t,X:x,bI:h.bI,ck:h.ck,cl:h.cl,cm:h.cm,de:o,c:u,d:l,bf:e,e:p,dD:r,f:i,bo:0,g:m})})))})),kp=t((function(e,n,r){return r>.5?n+(1-r)*(e-n):e+r*(n-e)})),Fp=function(e){return f(dm,function(e){return f(kp,e.eG,e.eD,.5)}(e),function(e){return f(kp,e.eH,e.eE,.5)}(e),function(e){return f(kp,e.eI,e.eF,.5)}(e))},Vp=function(e){var n=Gd(e),r=n.a,t=n.b,o=n.c;return{fm:Fp(e),fE:r/2,fF:t/2,fG:o/2}},Rp=r((function(e,n){switch(e.$){case 0:if(e.b.$){var r=e.b.a.G;switch(n.$){case 0:case 1:case 2:case 3:case 4:return Hm;case 5:case 6:case 7:return o=n.c,a=n.d,s(Zm,r,Vp(F=n.a),o,a);case 8:case 9:default:return Hm}}else{var t=e.b.a;switch(n.$){case 0:return Hm;case 1:var o=n.c,a=n.d;return s(Jm,t,Vp(F=n.a),o,a);case 2:case 3:case 4:return o=n.c,a=n.d,s(Jm,t,Vp(F=n.a),o,a);case 5:case 6:case 7:return o=n.c,a=n.d,s(Jm,t,Vp(F=n.a),o,a);case 8:case 9:return o=n.c,s(Jm,t,Vp(F=n.a),o,0);default:return o=n.d,s(tp,t,n.b,Vp(F=n.a),o)}}case 1:if(e.b.$)switch(r=e.b.a.G,c=e.c,n.$){case 0:case 1:case 2:case 3:case 4:return Hm;case 5:case 6:case 7:return o=n.c,a=n.d,d(Dp,r,c,Vp(F=n.a),o,a);case 8:case 9:default:return Hm}else{var i=e.b.a,c=e.c;switch(n.$){case 0:return Hm;case 1:case 2:case 3:case 4:case 5:case 6:case 7:return o=n.c,a=n.d,d(ip,i,c,Vp(F=n.a),o,a);case 8:case 9:return o=n.c,d(ip,i,c,Vp(F=n.a),o,0);default:return o=n.d,d(lp,i,c,n.b,Vp(F=n.a),o)}}case 2:var m=u(Mp,e.b,e.c);if(m.$){var p=m.a.a,b=m.b,g=b.a,h=b.b;switch(n.$){case 0:case 1:case 2:case 3:case 4:case 5:return Hm;case 6:return o=n.c,C=n.d,s(_p,p,Vp(F=n.a),o,C);case 7:return o=n.c,C=n.d,v(mp,p,g,h,Vp(F=n.a),o,C);case 8:case 9:default:return Hm}}else{var x=m.a;switch(n.$){case 0:case 1:return Hm;case 2:o=n.c;var C=n.d;return s(sp,x,Vp(F=n.a),o,C);case 3:return Hm;case 4:return o=n.c,C=n.d,s(sp,x,Vp(F=n.a),o,C);case 5:return Hm;case 6:case 7:return o=n.c,C=n.d,s(sp,x,Vp(F=n.a),o,C);case 8:case 9:default:return Hm}}default:var P=s(Np,e.b,e.c,e.d,e.e);if(P.$){var M=P.a,T=M.a,y=M.b,L=P.b,w=L.a,S=L.b,N=P.c,z=N.a,D=N.b,$=P.d;switch(g=$.a,h=$.b,n.$){case 0:case 1:case 2:case 3:case 4:case 5:return Hm;case 6:return o=n.c,a=n.d,function(e,n,r,t,o,a,i,c,l,u){return 9===e.a?e.f(n,r,t,o,a,i,c,l,u):e(n)(r)(t)(o)(a)(i)(c)(l)(u)}(Ap,T,y,w,S,z,D,Vp(F=n.a),o,a);case 7:return F=n.a,o=n.c,a=n.d,function(e){return function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(s){return function(v){return function(m){return u(Um,s,l((function(l,u,s,p,b,g,h,x){var C=h.a,P=h.b;return d(Td,f(Ym,p,m,x),vp,pp,v,{cM:e,cR:n,cS:a,cT:t,X:P,bI:C.bI,ck:C.ck,cl:C.cl,cm:C.cm,de:o,c:s,d:u,bf:i,e:g,dD:r,f:l,bo:c,g:b})})))}}}}}}}}}}}(T)(y)(w)(S)(z)(D)(g)(h)(Vp(F))(o)(a);case 8:case 9:default:return Hm}}else{var _=P.a,A=P.b,k=P.c;switch(n.$){case 0:case 1:return Hm;case 2:return o=n.c,a=n.d,v(gp,_,A,k,Vp(F=n.a),o,a);case 3:return Hm;case 4:return o=n.c,a=n.d,v(gp,_,A,k,Vp(F=n.a),o,a);case 5:return Hm;case 6:return o=n.c,a=n.d,v(gp,_,A,k,Vp(F=n.a),o,a);case 7:var F;return o=n.c,a=n.d,v(gp,_,A,k,Vp(F=n.a),o,a);case 8:case 9:default:return Hm}}}})),Bp=function(e){return e.b2},Ep=function(e){return e.b3},Ip=function(e){return e.a3},jp=function(e){var n=e,r=Ip(n.dV),t=Ep(n.dV),o=Bp(n.dV),a=Ip(n.dU),i=Ep(n.dU),c=Bp(n.dU),l=Ip(n.dT),u=Ep(n.dT),f=Bp(n.dT);return f*i*r+u*a*o+l*c*t-l*i*o-u*c*r-f*a*t>0},Hp=r((function(e,n){return{$:5,a:e,b:n}})),Up=r((function(e,n){var r=n;switch(r.$){case 0:return Hm;case 5:var t=r.b;return u(Hp,u(fd,r.a,e),t);case 1:case 3:case 2:default:return u(Hp,e,r)}})),Op=r((function(e,n){return u(Up,function(e){var n=$u(e),r=Eu(e),t=Gf(e),o=Wf(e);return{ee:jp(e),u:o.b2,v:o.b3,w:o.a3,x:t.b2,y:t.b3,z:t.a3,A:r.b2,B:r.b3,C:r.a3,N:n.b2,O:n.b3,P:n.a3,cz:1}}(e),n)})),Wp=function(e){return{$:2,a:e}},Gp=r((function(e,n){var r=e.a,t=e.b,o=e.c,a=n.fm;return{fm:{b2:r*a.b2,b3:t*a.b3,a3:o*a.a3},fE:r*n.fE,fF:t*n.fF,fG:o*n.fG}})),qp=function(e){return function(n){return function(r){return function(t){return function(o){return function(a){return function(i){return function(c){return function(l){return function(u){var f,s,d={b2:(s=t)[0],b3:s[1],a3:s[2],e8:s[3]},v=(f={e8:d.e8,b2:d.b2*e.a,b3:d.b3*e.b,a3:d.a3*e.c},new Float64Array([f.b2,f.b3,f.a3,f.e8]));return p(n,r,v,o,a,i,c,l,u)}}}}}}}}}},Yp=r((function(e,n){switch(n.$){case 0:return jm;case 5:return u(Hp,n.a,u(Yp,e,n.b));case 1:var r=n.b;return u(Um,u(Gp,e,n.a),u(qp,e,r));case 3:return n;case 2:return Wp(u(qp,e,r=n.a));default:var t=n.a;return lv(u(It,Yp(e),t))}})),Xp=r((function(e,n){return u(Yp,e,n)})),Zp={src:"\n        precision lowp float;\n        \n        void main () {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    ",attributes:{},uniforms:{}},Kp=f(Dd,{c9:0,dz:0,dS:15},{bz:kd,bU:Cd,b4:kd,b5:7683},{bz:kd,bU:Cd,b4:kd,b5:7682}),Qp=f(Dd,{c9:0,dz:0,dS:15},{bz:kd,bU:Cd,b4:kd,b5:7682},{bz:kd,bU:Cd,b4:kd,b5:7683}),Jp=r((function(e,n){return u(yr,e?Qp:Kp,n)})),eb={src:"\n        precision highp float;\n        \n        attribute highp vec3 position;\n        attribute highp vec3 normal;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{normal:"s",position:"cv"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",shadowLight:"cA",viewMatrix:"g"}},nb=function(e){var n=function(e){if(e.$){var n=e.c;return Br(l((function(e,r,t,o,a,i,c,l){return d(Td,u(Jp,o,l),eb,Zp,n,{c:t,d:r,e:i,f:e,cA:c,g:a})})))}return Er}(e);return n.$?Hm:Wp(n.a)},rb=o((function(e,n,r,t){var o,a=u(Rp,r,vm),i=(o=L(e,n)).a?o.b?fv(_([a,nb(Im)])):a:o.b?nb(Im):Hm,c=Of(t),l=c.a,f=c.b,s=c.c;return u(Op,Uf(t),u(Xp,w(l,f,s),i))})),tb=r((function(e,n){return s(rb,!0,!0,e,n)})),ob=function(e){return{$:0,a:e}},ab=r((function(e,n){return{$:0,a:e,b:n}})),ib=function(e){return Gu(e)},cb=r((function(e,n){var r=e.cv;return u(yr,{s:cm(e.s),cv:im(r)},n)})),lb=c((function(e,n,r,t,o,a,i){for(;;){if(!i.b)return rm({eD:n,eE:t,eF:a,eG:e,eH:r,eI:o});var c=i.a,l=i.b,f=cv(c.cv),s=iv(c.cv),d=av(c.cv);e=u(Qd,e,d),n=u(st,n,d),r=u(Qd,r,s),t=u(st,t,s),o=u(Qd,o,f),a=u(st,a,f),i=l}})),ub=r((function(e,n){var r=cv(e.cv),t=iv(e.cv),o=av(e.cv);return m(lb,o,o,t,t,r,r,n)})),fb=r((function(e,n){var r=e.dU,t=e.dT;return{b2:n.b2*t.b2+n.b3*r.b2,b3:n.b2*t.b3+n.b3*r.b3,a3:n.b2*t.a3+n.b3*r.a3}})),sb=function(e){return qu(e)},db=function(e){return 6.283185307179586*e},vb={di:du,dT:Pv,dU:Mv},mb=(Jo=u(Du,72,db(1)),ea=lf,na=ku,ta=f(dm,0,0,ra=u(Mu,.5,1)),aa=f(dm,0,0,oa=u(Mu,-.5,1)),Kv(function(e){var n=f(wr,cb,z,Tm(e));if(n.b){var r=n.a,t=n.b,o=u(Dm,n,gm(e));return s(Gv,u(ub,r,t),e,o,0)}return Qv}(Bm(qs(u(It,(function(e){var n=u(Mu,e,Jo),r=u(fb,vb,Yu(n)),t=u(Mu,ib(n),1),o=u(Mu,sb(n),1),a=f(dm,t,o,ra),i=f(dm,t,o,oa),c=u(Mu,u(ec,72,e+1),Jo),l=u(fb,vb,Yu(c)),s=u(Mu,ib(c),1),d=u(Mu,sb(c),1),v=f(dm,s,d,oa),m=f(dm,s,d,ra);return _([w({s:na,cv:aa},{s:na,cv:v},{s:na,cv:i}),w({s:r,cv:i},{s:l,cv:v},{s:l,cv:m}),w({s:r,cv:i},{s:l,cv:m},{s:r,cv:a}),w({s:ea,cv:ta},{s:ea,cv:a},{s:ea,cv:m})])}),u(Yr,0,71))))))),pb=Em(mb),bb=o((function(e,n,r,t){var o,a=function(e){var n=Pu(e),r=uu(n),t=r.a,o=r.b;return{di:Tu(e),dT:t,dU:o,dV:n}}(Ts(t)),i=u(Rp,r,mb),c=(o=L(e,n)).a?o.b?fv(_([i,nb(pb)])):i:o.b?nb(pb):Hm,l=ws(t),f=Ls(t);return u(Op,a,u(Xp,w(l,l,f),c))})),gb=r((function(e,n){return s(bb,!0,!0,e,n)})),hb={src:"\n        precision highp float;\n        \n        attribute lowp float triangleVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 triangleVertexPositions;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleVertex), triangleVertexPositions, position, normal);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{triangleVertex:"dK"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",triangleVertexPositions:"b_",viewMatrix:"g"}},xb={src:"\n        precision highp float;\n        \n        attribute lowp float triangleVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 triangleVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleVertex), triangleVertexPositions, position, normal);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{triangleVertex:"dK"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",triangleVertexPositions:"b_",viewMatrix:"g"}},Cb=function(e){var n=e.a,r=e.b,t=e.c;return sd({em:n.b2,en:r.b2,eo:t.b2,ep:0,eq:n.b3,er:r.b3,es:t.b3,et:0,eu:n.a3,ev:r.a3,ew:t.a3,ex:0,ey:0,ez:0,eA:0,eB:0})},Pb=sm(_([w({dK:0},{dK:1},{dK:2})])),Mb=r((function(e,n){var r=om(n),t=Vp(r);switch(e.$){case 0:if(e.b.$)return Hm;var o=e.b.a;return u(Um,t,l((function(e,r,t,a,i,c,l,u){return d(Td,f(Ym,a,0,u),hb,Km,Pb,{aQ:o,c:t,d:r,e:c,f:e,b_:Cb(n),g:i})})));case 1:if(e.b.$)return Hm;var a=e.b.a,i=e.c;return u(Um,t,l((function(e,r,t,o,c,l,s,v){return d(Td,f(Ym,o,0,v),hb,op,Pb,{a7:u(ap,i,a),c:t,d:r,e:l,f:e,b_:Cb(n),g:c})})));case 2:var c=u(Mp,e.b,e.c);if(c.$)return Hm;var v=c.a;return u(Um,t,l((function(e,r,t,o,a,i,c,l){var u=c.a,s=c.b;return d(Td,f(Ym,o,0,l),xb,up,Pb,{X:s,bI:u.bI,ck:u.ck,cl:u.cl,cm:u.cm,da:v,c:t,d:r,e:i,f:e,b_:Cb(n),g:a})})));default:var m=s(Np,e.b,e.c,e.d,e.e);if(m.$)return Hm;var p=m.a,b=m.b,g=m.c;return u(Um,t,l((function(e,r,t,o,a,i,c,l){var u=c.a,s=c.b;return d(Td,f(Ym,o,0,l),xb,bp,Pb,{cL:p,X:s,bI:u.bI,ck:u.ck,cl:u.cl,cm:u.cm,dd:g,c:t,d:r,e:i,dC:b,f:e,b_:Cb(n),g:a})})))}})),Tb=(ia=_([{bn:u(wd,0,1)},{bn:u(wd,1,1)},{bn:u(wd,2,1)},{bn:u(wd,0,-1)},{bn:u(wd,1,-1)},{bn:u(wd,2,-1)}]),ca=_([w(0,1,2),w(3,5,4),w(3,4,1),w(3,1,0),w(4,5,2),w(4,2,1),w(5,3,0),w(5,0,2)]),u(Dm,ia,ca)),yb={src:"\n        precision highp float;\n        \n        attribute highp vec2 triangleShadowVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        uniform highp mat4 triangleVertexPositions;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        void getTriangleVertex(int triangleVertexIndex, mat4 triangleVertexPositions, out vec3 position, out vec3 normal) {\n            vec3 p1 = triangleVertexPositions[0].xyz;\n            vec3 p2 = triangleVertexPositions[1].xyz;\n            vec3 p3 = triangleVertexPositions[2].xyz;\n            normal = normalize(cross(p2 - p1, p3 - p2));\n            float t1 = float(triangleVertexIndex == 0);\n            float t2 = float(triangleVertexIndex == 1);\n            float t3 = float(triangleVertexIndex == 2);\n            position = t1 * p1 + t2 * p2 + t3 * p3;\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            getTriangleVertex(int(triangleShadowVertex.x), triangleVertexPositions, position, normal);\n            normal *= triangleShadowVertex.y;\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{triangleShadowVertex:"bn"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",shadowLight:"cA",triangleVertexPositions:"b_",viewMatrix:"g"}},Lb=function(e){return Wp(l((function(n,r,t,o,a,i,c,l){return d(Td,u(Jp,o,l),yb,Zp,Tb,{c:t,d:r,e:i,f:n,cA:c,b_:Cb(e),g:a})})))},wb=o((function(e,n,r,t){var o=u(Mb,r,t),a=L(e,n);return a.a?a.b?fv(_([o,Lb(t)])):o:a.b?Lb(t):Hm})),Sb=r((function(e,n){return s(wb,!0,!0,e,n)})),Nb=r((function(e,n){var r=nf(n),t=nf(e),o=ef(n),a=ef(e),i=Qu(n),c=Qu(e);return{eD:u(Kd,c,i),eE:u(Kd,a,o),eF:u(Kd,t,r),eG:u(Jd,c,i),eH:u(Jd,a,o),eI:u(Jd,t,r)}})),zb={src:"\n        precision highp float;\n        \n        attribute lowp float lineSegmentVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp vec3 lineSegmentStartPoint;\n        uniform highp vec3 lineSegmentEndPoint;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = (1.0 - lineSegmentVertex) * lineSegmentStartPoint + lineSegmentVertex * lineSegmentEndPoint;\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{lineSegmentVertex:"el"},uniforms:{lineSegmentEndPoint:"ej",lineSegmentStartPoint:"ek",modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",viewMatrix:"g"}},Db=r((function(e,n){return{$:1,a:e,b:n}}))({d4:2,ed:0,eK:1})(_([L({el:0},{el:1})])),$b=r((function(e,n){var r,t=u(Nb,(r=n).a,r.b),o=Vp(t),a=n.a,i=n.b;switch(e.$){case 0:if(e.b.$)return Hm;var c=e.b.a;return u(Um,o,l((function(e,n,r,t,o,l,u,f){return d(Td,f,zb,Km,Db,{aQ:c,ej:im(i),ek:im(a),c:r,d:n,e:l,f:e,g:o})})));case 1:if(e.b.$)return Hm;c=e.b.a;var f=e.c;return u(Um,o,l((function(e,n,r,t,o,l,s,v){return d(Td,v,zb,op,Db,{a7:u(ap,f,c),ej:im(i),ek:im(a),c:r,d:n,e:l,f:e,g:o})})));case 2:default:return Hm}})),_b=r((function(e,n){return u($b,e,n)})),Ab=t((function(e,n,r){return{$:2,a:e,b:n,c:r}})),kb=function(e){return f(_v,0,1,e>.04045?u($i,(e+.055)/1.055,2.4):e/12.92)},Fb=function(e){return f(Ab,0,ob(function(e){var n=tc(e),r=n.cZ,t=n.cN;return f(ld,kb(n.dy),kb(r),kb(t))}(e)),ob(0))},Vb=r((function(e,n){return e/n})),Rb=a((function(e,n,r,t,o){for(;;){var a=t(n/r),i=u(yr,a,o);if(P(n,e))return i;e=e,n-=1,r=r,t=t,o=i}})),Bb=r((function(e,n){return 1>e?z:d(Rb,0,e,e,n,z)})),Eb=r((function(e,n){var r=e.cv,t=e.R,o=t.a,a=t.b;return u(yr,{s:cm(e.s),cv:im(r),R:u(wd,o,a)},n)})),Ib=r((function(e,n){var r=e,t=n,o=Gu(t);return{b2:o*Gu(r),b3:o*qu(r),a3:qu(t)}})),jb=(la=u(Yr,0,71),ua=u(Bb,72,u(kp,0,db(1))),fa=rt(36),sa=u(Yr,0,fa-1),da=u(Bb,fa,u(kp,Zl(90),Zl(-90))),va=wm(qs(u(It,(function(e){return u(It,(function(n){return{s:u(Ib,e,n),cv:f(dm,u(Mu,ib(n)*ib(e),1),u(Mu,ib(n)*sb(e),1),u(Mu,sb(n),1)),R:L(u(Vb,e,db(1)),u(Vb,u(nv,Zl(90),n),Zl(180)))}}),da)}),ua))),ma=r((function(e,n){return e*(fa+1)+n})),pa=qs(u(It,(function(e){return qs(u(It,(function(n){var r=u(ma,e+1,n),t=u(ma,e,n),o=u(ma,e+1,n+1),a=u(ma,e,n+1);return _([w(a,o,r),w(a,r,t)])}),sa))}),la)),Kv(function(e){var n=f(wr,Eb,z,Tm(e));if(n.b){var r=n.a,t=n.b,o=u(Dm,n,gm(e));return s(qv,u(ub,r,t),e,o,0)}return Qv}(u(zm,va,pa)))),Hb=r((function(e,n){for(;;){var r=u(ec,144,2*e+3),t=u(ec,144,2*e+2),o=2*e+1,a=2*e,i=u(yr,w(144,a,t),u(yr,w(a,r,t),u(yr,w(a,o,r),u(yr,w(o,145,r),n))));if(!e)return i;e-=1,n=i}})),Ub=t((function(e,n,r){return r>.5?n+(1-r)*(e-n):e+r*(n-e)})),Ob=(ba=u(r((function(e,n){for(;;){var r=f(Ub,0,6.283185307179586,e/72),t=u(yr,{b7:r,cr:0,cy:1},u(yr,{b7:r,cr:1,cy:1},n));if(!e)return t;e-=1,n=t}})),71,_([{b7:0,cr:0,cy:0},{b7:0,cr:1,cy:0}])),u(Dm,ba,u(Hb,71,z))),Wb={src:"\n        precision highp float;\n        \n        attribute highp float angle;\n        attribute highp float offsetScale;\n        attribute highp float radiusScale;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const lowp float kPerspectiveProjection = 0.0;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec3 perpendicularTo(vec3 d) {\n            float absX = abs(d.x);\n            float absY = abs(d.y);\n            float absZ = abs(d.z);\n            if (absX <= absY) {\n                if (absX <= absZ) {\n                    float scale = 1.0 / length(d.zy);\n                    return vec3(0.0, -d.z * scale, d.y * scale);\n                } else {\n                    float scale = 1.0 / length(d.xy);\n                    return vec3(-d.y * scale, d.x * scale, 0.0);\n                }\n            } else {\n                if (absY <= absZ) {\n                    float scale = 1.0 / length(d.xz);\n                    return vec3(d.z * scale, 0.0, -d.x * scale);\n                } else {\n                    float scale = 1.0 / length(d.xy);\n                    return vec3(-d.y * scale, d.x * scale, 0.0);\n                }\n            }\n        }\n        \n        void main () {\n            vec4 worldCenter = getWorldPosition(vec3(0.0, 0.0, 0.0), modelScale, modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 zDirection = getDirectionToLight(worldCenter.xyz, xyz_type, rgb_parameter);\n            vec3 xDirection = perpendicularTo(zDirection);\n            vec3 yDirection = cross(zDirection, xDirection);\n            float r = modelScale.x;\n            float adjustedRadius = r;\n            float zOffset = 0.0;\n            if (xyz_type.w == kPointLight) {\n                float distanceToLight = length(xyz_type.xyz - worldCenter.xyz);\n                float rSquared = r * r;\n                zOffset = rSquared / distanceToLight;\n                float zSquared = zOffset * zOffset;\n                adjustedRadius = sqrt(rSquared - zSquared) * radiusScale;\n            }\n            vec3 worldPosition =\n                worldCenter.xyz\n                    + zDirection * zOffset\n                    + xDirection * adjustedRadius * cos(angle)\n                    + yDirection * adjustedRadius * sin(angle);\n            vec3 directionToLight = getDirectionToLight(worldPosition, xyz_type, rgb_parameter);\n            float sceneDiameter = sceneProperties[3][1];\n            vec3 offset = -sceneDiameter * offsetScale * directionToLight;\n            vec4 offsetPosition = vec4(worldPosition + offset, 1.0);\n            gl_Position = projectionMatrix * (viewMatrix * offsetPosition);\n        }\n    ",attributes:{angle:"b7",offsetScale:"cr",radiusScale:"cy"},uniforms:{modelMatrix:"c",modelScale:"d",projectionMatrix:"e",sceneProperties:"f",shadowLight:"cA",viewMatrix:"g"}},Gb=function(){return Wp(l((function(e,n,r,t,o,a,i,c){return d(Td,u(Jp,!0,c),Wb,Zp,Ob,{aQ:f(ld,0,0,1),c:r,d:n,e:a,f:e,cA:i,g:o})})))},qb=r((function(e,n){return u(Up,function(e){return{ee:!0,u:1,v:0,w:0,x:0,y:1,z:0,A:0,B:0,C:1,N:e.b2,O:e.b3,P:e.a3,cz:1}}(e),n)})),Yb=o((function(e,n,r,t){var o,a=u(Rp,r,jb),i=(o=L(e,n)).a?o.b?fv(_([a,Gb()])):a:o.b?Gb():Hm,c=es(t);return u(qb,u(nu,du,Jf(t)),u(Xp,w(c,c,c),i))})),Xb=r((function(e,n){return s(Yb,!0,!0,e,n)})),Zb=function(e){switch(e.$){case 0:var n=e.b;return _([u(tb,Fb(e.a),n)]);case 1:var r=e.b;return _([u(Sb,Fb(e.a),r)]);case 3:var t=e.b;return _([u(Xb,Fb(e.a),t)]);case 2:var o=e.b;return _([u(gb,Fb(e.a),o)]);case 4:var a=e.b;return _([u(_b,(i=e.a,u(ab,0,ob(function(e){var n=tc(e);return f(ld,n.dy,n.cZ,n.cN)}(i)))),a)]);default:return u(Ys,Zb,e.a)}var i},Kb=r((function(e,n){return function(e){var n,r=u(zv,e.gb,{cO:Fv,fs:e.gi,c$:8e4}),t=$v({cO:kv,c$:2e4,gn:e.gn}),o=$v({cO:Nv,c$:15e3,gn:Bu(e.gn)}),a=f(Uv,r,t,o);return function(e){return u(Sv,{fa:e.fa,dY:e.dY,fj:e.fj,d0:e.d0,d3:e.d3},_([{d7:e.d7,fy:e.fy,fU:e.fU,gl:e.gl,gs:e.gs}]))}({fa:(n=e.cV,{$:2,a:n}),dY:e.dY,fj:e.fj,d0:e.d0,d3:e.d3,d7:e.d7,fy:1.2*u($i,2,15),fU:a,gl:Dv,gs:Nv})}({dY:e.fe,fj:e.fj,d0:.005,cV:e.cV,d3:L(_i(e.ak.dR),_i(e.ak.c_)),d7:(r=n,u(Ys,Zb,r)),gb:!0,gi:u(Ib,e.gh,e.gj),gn:uf});var r})),Qb=r((function(e,n){return u(Kb,{fe:u(Ff,wf(n.l).ff,wf(n.l).bL),fj:gu(e),cV:e.cV,ak:e.ak,gh:Bl(225),gj:Bl(315)},_([Is(_([Is(z),u(js,e,n)]))]))})),Jb=u(Rc,_([u(Qc,"margin","10px"),Yc({$:2})]),_([el("Set selected color as background color")])),eg=nn("h2"),ng={$:5},rg={$:7},tg={$:4},og={$:3},ag={$:6},ig=function(e){var n=e;return 1+Wr(n.n)+Wr(n.F)},cg=function(e){return u(Bc,z,_([u(eg,z,_([el("Level Selection")])),u(ll,z,_([u(Rc,_([Yc(og)]),_([el("<")])),u(Dl,_([u(Qc,"margin","10px")]),_([el(Qs(_([jr((n=e.l,Wr(function(e){return e.n}(n))+1))," / ",jr(ig(e.l))])))])),u(Rc,_([Yc(tg)]),_([el(">")]))])),u(Bc,_([u(Qc,"margin-top","10px")]),_([u(Rc,_([Yc(ng)]),_([el("Add level")]))])),u(Bc,_([u(Qc,"margin-top","10px")]),_([u(Rc,_([Yc(ag)]),_([el("Remove current level")]))])),u(Bc,_([u(Qc,"margin-top","10px")]),_([u(Rc,_([Yc(rg)]),_([el("Move level one up")]))]))]));var n},lg=function(e){return{$:0,a:e}},ug=u(wt,(function(e){return e.l}),u(wt,wf,(function(e){return e.bL}))),fg=function(e){switch(e){case"Inferno":return 0;case"Magma":return 1;case"Parula":return 2;case"Plasma":return 3;case"Viridis":return 4;default:return 0}},sg=function(e){switch(e){case 0:return"Inferno";case 1:return"Magma";case 2:return"Parula";case 3:return"Plasma";default:return"Viridis"}},dg=function(e){return u(Xc,_([rl(sg(e))]),_([el(sg(e))]))},vg=function(e){return u(Bc,_([u(Qc,"margin","5px")]),_([el("Choose a palette:"),u(Zc,_([qc(u(wt,fg,lg)),rl(sg(ug(e)))]),u(It,dg,_([2,0,1,3,4])))]))},mg=r((function(e,n){var t=n.a,o=n.b,a=r((function(n,r){return u(e,n+1,r)}));return u(Sf,u(e,0,t),u(Xr,a,o))})),pg=function(e){var n=wf(e.l),t=r((function(n,r){var t,o=13*(n/20|0),a=13*u(ec,20,n),i=P(e.av,n)?L(2,9):L(0,13),c=i.a,l=i.b;return u(Bc,_([u(Qc,"position","absolute"),u(Qc,"width",vc(l)+"px"),u(Qc,"height",vc(l)+"px"),u(Qc,"background-color",Js(r)),u(Qc,"transform","translate("+vc(a)+"px,"+vc(o)+"px)"),Yc((t=n,{$:1,a:t})),u(Qc,"border","solid white "+vc(c)+"px")]),z)}));return u(Bc,_([u(Qc,"position","relative"),u(Qc,"overflow","scroll"),u(Qc,"height","210px")]),function(e){return u(yr,e.a,e.b)}(u(mg,t,Af(n.bL))))};ga={Main:{init:v(Al,Qb,hf,El,(function(){return{l:(e=kl,{F:z,n:z,r:e}),bd:{cC:0,cF:0},av:0};var e}),r((function(e,n){return u(Bc,_([u(Qc,"margin-left","20px"),u(Qc,"height","100%"),u(Qc,"overflow","scroll")]),_([u(eg,z,_([el("Editing the selected level")])),u(Bc,z,_([el("Press mouse to add trixel")])),u(Bc,z,_([el("Hold shift and press mouse to remove trixel")])),u(bl,z,z),u(eg,z,_([el("Color Palette")])),u(Bc,z,_([vg(n)])),u(Bc,z,_([Jb])),u(Bc,z,_([el(jr(n.av))])),u(Bc,z,_([pg(n)])),u(bl,z,z),cg(n),u(bl,z,z),u(eg,z,_([el("What More?")]))]))})),Lf)(u(Ct,(function(e){return zt({cV:e})}),u(Pt,"devicePixelRatio",Mt)))(0)}},e.Elm?function e(n,r){for(var t in r)t in n?"init"==t?C(6):e(n[t],r[t]):n[t]=r[t]}(e.Elm,ga):e.Elm=ga}(e);const n=e.Elm.Main.init({node:document.getElementById("elm-node"),flags:{devicePixelRatio:window.devicePixelRatio}});function r(e){const n=[];for(let r=0;r<e.length;r++)n.push({identifier:e[r].identifier,pageX:e[r].pageX,pageY:e[r].pageY});return n}window.addEventListener("touchstart",(e=>{n.ports.touchStart.send(r(e.changedTouches))})),window.addEventListener("touchmove",(e=>{n.ports.touchMove.send(r(e.changedTouches))})),window.addEventListener("touchend",(e=>{n.ports.touchEnd.send(r(e.changedTouches))})),window.addEventListener("touchcancel",(e=>{n.ports.touchCancel.send(r(e.changedTouches))}))}();
//# sourceMappingURL=index.03224498.js.map

{"mappings":"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","sources":["./games/celtic-knots/src/Main.elm","./games/celtic-knots/index.js"],"sourcesContent":["module Main exposing (main)\n\nimport Browser\nimport Browser.Events\nimport Circle2d\nimport Dict exposing (Dict)\nimport Geometry.Svg as Svg\nimport Html exposing (Html)\nimport Html.Attributes\nimport Json.Decode as Decode\nimport LineSegment2d\nimport Pixels exposing (pixels)\nimport Point2d exposing (Point2d)\nimport QuadraticSpline2d\nimport String exposing (fromInt)\nimport Svg exposing (Svg)\nimport Svg.Attributes as Attributes exposing (..)\n\n\n\n-- constants\n\n\nncols =\n    9\n\n\nnrows =\n    7\n\n\nncolors =\n    10\n\n\ngridSize =\n    20\n\n\nmargin =\n    20\n\n\ncolorNames =\n    [ \"#008097\"\n    , \"#59b8d0\"\n    , \"#fa9137\"\n    , \"#8b4119\"\n    , \"#42833f\"\n    , \"#96b0b7\"\n    , \"#d09e7a\"\n    ]\n\n\nlineStyleBlack =\n    [ Attributes.stroke \"black\"\n    , Attributes.strokeWidth \"16\"\n    , Attributes.strokeLinecap \"round\"\n    , Attributes.fill \"none\"\n    ]\n\n\nlineStyleGeneric =\n    [ Attributes.strokeWidth \"16\"\n    , Attributes.strokeLinecap \"round\"\n    , Attributes.fill \"none\"\n    ]\n\n\nlineStyleWhite =\n    [ Attributes.stroke \"white\"\n    , Attributes.strokeWidth \"25\"\n    , Attributes.fill \"none\"\n    ]\n\n\ndotStyle =\n    [ Attributes.fill \"#ffb400\"\n    , Attributes.stroke \"#dddddd\"\n    , Attributes.strokeWidth \"2\"\n    , Attributes.opacity \".8\"\n    ]\n\n\ninitialModel =\n    { edges = colorAllEdges (initiateEdges ())\n    , states = initiateStates ()\n    }\n\n\n\n-- type definitions\n\n\ntype alias Edge =\n    { from : ( Int, Int )\n    , to : ( Int, Int )\n    , color : Int\n    , layer : Bool\n    , belongsToCrossingPoint : Maybe ( Int, Int )\n    }\n\n\ntype alias Edges =\n    List Edge\n\n\ntype alias States =\n    Dict ( Int, Int ) Int\n\n\ntype alias Model =\n    { edges : Edges\n    , states : States\n    }\n\n\ntype alias Msg =\n    { x : Int\n    , y : Int\n    }\n\n\ntype Corner\n    = TopLeft\n    | TopRight\n    | BottomLeft\n    | BottomRight\n    | NoCorner\n\n\ntype Border\n    = Left\n    | Right\n    | Top\n    | Bottom\n    | NoBorder\n\n\ntype alias Flags =\n    ()\n\n\n\n-- functions\n\n\ninitiateStates : () -> States\ninitiateStates () =\n    let\n        a =\n            List.range 0 ((nrows + 1) * 2)\n                |> List.concatMap\n                    (\\i ->\n                        List.range 0 ((ncols + 1) * 2)\n                            |> List.map (\\j -> ( i, j ))\n                    )\n    in\n    let\n        crossing =\n            List.filter isCrossing a\n    in\n    Dict.fromList (List.map (\\( x, y ) -> ( ( x, y ), 2 )) crossing)\n\n\ninitiateEdges : () -> Edges\ninitiateEdges () =\n    let\n        a =\n            List.range 0 ((nrows + 1) * 2)\n                |> List.concatMap\n                    (\\i ->\n                        List.range 0 ((ncols + 1) * 2)\n                            |> List.map (\\j -> ( i, j ))\n                    )\n    in\n    let\n        crossing =\n            List.filter isCrossing a\n    in\n    List.map\n        (\\( x, y ) ->\n            { from = ( x + 1, y + 1 )\n            , to = ( x - 1, y - 1 )\n            , color = 1\n            , layer = False\n            , belongsToCrossingPoint = Just ( x, y )\n            }\n        )\n        crossing\n        ++ List.map\n            (\\( x, y ) ->\n                { from = ( x + 1, y - 1 )\n                , to = ( x - 1, y + 1 )\n                , color = 1\n                , layer = True\n                , belongsToCrossingPoint = Just ( x, y )\n                }\n            )\n            crossing\n        -- top border\n        ++ (List.range 0 (truncate (toFloat ncols / 2) - 2)\n                |> List.map\n                    (\\i ->\n                        { from = ( 1, 5 + 4 * i )\n                        , to = ( 1, 7 + 4 * i )\n                        , color = 1\n                        , layer = False\n                        , belongsToCrossingPoint = Nothing\n                        }\n                    )\n           )\n        -- bottom border\n        ++ (List.range 0 (truncate (toFloat ncols / 2) - 2)\n                |> List.map\n                    (\\i ->\n                        { from = ( nrows * 2 + 1, 5 + 4 * i )\n                        , to = ( nrows * 2 + 1, 7 + 4 * i )\n                        , color = 1\n                        , layer = False\n                        , belongsToCrossingPoint = Nothing\n                        }\n                    )\n           )\n        -- left border\n        ++ (List.range 0 (truncate (toFloat nrows / 2) - 2)\n                |> List.map\n                    (\\i ->\n                        { from = ( 5 + 4 * i, 1 )\n                        , to = ( 7 + 4 * i, 1 )\n                        , color = 1\n                        , layer = False\n                        , belongsToCrossingPoint = Nothing\n                        }\n                    )\n           )\n        -- right border\n        ++ (List.range 0 (truncate (toFloat nrows / 2) - 2)\n                |> List.map\n                    (\\i ->\n                        { from = ( 5 + 4 * i, ncols * 2 + 1 )\n                        , to = ( 7 + 4 * i, ncols * 2 + 1 )\n                        , color = 1\n                        , layer = False\n                        , belongsToCrossingPoint = Nothing\n                        }\n                    )\n           )\n        -- corners\n        ++ [ { from = ( 3, 1 )\n             , to = ( 1, 3 )\n             , color = 1\n             , layer = False\n             , belongsToCrossingPoint = Nothing\n             }\n           , { from = ( 1, ncols * 2 - 1 )\n             , to = ( 3, ncols * 2 + 1 )\n             , color = 1\n             , layer = False\n             , belongsToCrossingPoint = Nothing\n             }\n           , { from = ( nrows * 2 - 1, 1 )\n             , to = ( nrows * 2 + 1, 3 )\n             , color = 1\n             , layer = False\n             , belongsToCrossingPoint = Nothing\n             }\n           , { from = ( nrows * 2 - 1, ncols * 2 + 1 )\n             , to = ( nrows * 2 + 1, ncols * 2 - 1 )\n             , color = 1\n             , layer = False\n             , belongsToCrossingPoint = Nothing\n             }\n           ]\n\n\nisCrossing : ( Int, Int ) -> Bool\nisCrossing ( x, y ) =\n    if modBy 2 x == 1 then\n        False\n\n    else if modBy 2 y == 1 then\n        False\n\n    else if y == 0 || y == (ncols + 1) * 2 then\n        False\n\n    else if x == 0 || x == (nrows + 1) * 2 then\n        False\n\n    else if modBy 2 (truncate (toFloat x / 2)) == modBy 2 (truncate (toFloat y / 2)) then\n        False\n\n    else\n        True\n\n\nnearCrossing : Msg -> ( Int, Int )\nnearCrossing msg =\n    let\n        x_ =\n            (toFloat msg.x - margin) / gridSize\n\n        y_ =\n            (toFloat msg.y - margin) / gridSize\n    in\n    let\n        d =\n            1\n\n        -- squared distance\n        a =\n            List.range 0 ((nrows + 1) * 2)\n                |> List.concatMap\n                    (\\i ->\n                        List.range 0 ((ncols + 1) * 2)\n                            |> List.map (\\j -> ( i, j ))\n                    )\n    in\n    let\n        crossing =\n            List.filter isCrossing a\n    in\n    let\n        nextCrossing =\n            List.head (List.filter (isNear d ( x_, y_ )) crossing)\n    in\n    case nextCrossing of\n        Nothing ->\n            ( -10, -10 )\n\n        Just nextCrossing_ ->\n            nextCrossing_\n\n\nisNear : Float -> ( Float, Float ) -> ( Int, Int ) -> Bool\nisNear d ( x_, y_ ) ( x, y ) =\n    let\n        x__ =\n            toFloat x\n\n        y__ =\n            toFloat y\n    in\n    if (x__ - x_) * (x__ - x_) + (y__ - y_) * (y__ - y_) < d then\n        True\n\n    else\n        False\n\n\nupdate : Msg -> Model -> ( Model, Cmd Msg )\nupdate msg model =\n    let\n        ( x, y ) =\n            nearCrossing msg\n    in\n    let\n        state_ =\n            Dict.get ( x, y ) model.states\n    in\n    case state_ of\n        Just s ->\n            nextStateModel model s ( x, y )\n\n        Nothing ->\n            ( model, Cmd.none )\n\n\nnextStateModel : Model -> Int -> ( Int, Int ) -> ( Model, Cmd Msg )\nnextStateModel model s ( x, y ) =\n    let\n        nextState =\n            modBy 4 (s + 1)\n    in\n    let\n        newEdges_ =\n            addEdgesForNextState ( x, y ) nextState\n\n        --            _ = Debug.log \"\" (Debug.toString newEdges_)\n    in\n    let\n        states_ =\n            Dict.update ( x, y ) (\\_ -> Just nextState) model.states\n    in\n    let\n        edges_ =\n            List.filter (\\edge -> edge.belongsToCrossingPoint /= Just ( x, y )) model.edges\n    in\n    let\n        edges__ =\n            edges_\n                ++ [ { from = newEdges_.aFrom\n                     , to = newEdges_.aTo\n                     , color = 1\n                     , layer = False\n                     , belongsToCrossingPoint = Just ( x, y )\n                     }\n                   , { from = newEdges_.bFrom\n                     , to = newEdges_.bTo\n                     , color = 1\n                     , layer = True\n                     , belongsToCrossingPoint = Just ( x, y )\n                     }\n                   ]\n    in\n    ( { model | states = states_, edges = colorAllEdges edges__ }, Cmd.none )\n\n\ncolorAllEdges : Edges -> Edges\ncolorAllEdges edges =\n    let\n        edges_ =\n            List.map (\\e -> { e | color = -1 * e.color }) edges\n    in\n    colorEdges edges_ Nothing 0\n\n\ncolorEdges : Edges -> Maybe Edge -> Int -> Edges\ncolorEdges edges lastColoredEdge step =\n    let\n        newColor =\n            case lastColoredEdge of\n                Just edge ->\n                    edge.color\n\n                Nothing ->\n                    chooseGoodColor edges\n\n        --    _ = Debug.log \"newColor: \" (Debug.toString newColor)\n    in\n    let\n        nextEdge_oldcolor =\n            case lastColoredEdge of\n                Just edge ->\n                    chooseUncoloredEdge edges edge\n\n                Nothing ->\n                    List.head (getUncoloredEdges edges)\n\n        --      _ = Debug.log \"newEdge oldcolor: \" (Debug.toString nextEdge_oldcolor)\n    in\n    let\n        nextEdge_newcolor =\n            case nextEdge_oldcolor of\n                Nothing ->\n                    Nothing\n\n                Just nextEdge_oldcolor_ ->\n                    Just { nextEdge_oldcolor_ | color = newColor }\n\n        -- _ = Debug.log \"newEdge newcolor: \" (Debug.toString nextEdge_newcolor)\n    in\n    let\n        newEdges =\n            updateColor edges nextEdge_oldcolor newColor\n    in\n    let\n        colored =\n            getColoredEdges newEdges\n\n        --                _ = Debug.log \"colored are now: \" (Debug.toString colored)\n        --               _ = Debug.log \"step: \" (Debug.toString step)\n    in\n    if List.length colored == List.length edges then\n        newEdges\n\n    else if step == 1000 then\n        newEdges\n\n    else\n        colorEdges newEdges nextEdge_newcolor (step + 1)\n\n\nchooseUncoloredEdge : Edges -> Edge -> Maybe Edge\nchooseUncoloredEdge edges lastColoredEdge =\n    let\n        newEdge =\n            List.head\n                (List.filter\n                    (\\e ->\n                        (e.from\n                            == lastColoredEdge.from\n                            || e.from\n                            == lastColoredEdge.to\n                            || e.to\n                            == lastColoredEdge.from\n                            || e.to\n                            == lastColoredEdge.to\n                        )\n                            && (e.from\n                                    /= lastColoredEdge.from\n                                    || e.to\n                                    /= lastColoredEdge.to\n                               )\n                    )\n                    (getUncoloredEdges edges)\n                )\n    in\n    newEdge\n\n\nupdateColor : Edges -> Maybe Edge -> Int -> Edges\nupdateColor edges edge color =\n    case edge of\n        Just edge_ ->\n            List.filter\n                (\\e ->\n                    if (e.from == edge_.from && e.to == edge_.to) || (e.from == edge_.to && e.to == edge_.from) then\n                        False\n\n                    else\n                        True\n                )\n                edges\n                ++ [ { edge_ | color = color } ]\n\n        _ ->\n            edges\n\n\nchooseGoodColor : Edges -> Int\nchooseGoodColor edges =\n    let\n        colors =\n            getColoredEdges edges |> List.map (\\e -> e.color)\n    in\n    let\n        mincolor_ =\n            List.minimum\n                (List.range 1 ncolors\n                    |> List.map\n                        (\\i ->\n                            if List.member i colors then\n                                10\n\n                            else\n                                i\n                        )\n                )\n    in\n    let\n        mincolor =\n            case mincolor_ of\n                Nothing ->\n                    0\n\n                Just color ->\n                    color\n    in\n    mincolor\n\n\ngetColoredEdges : Edges -> Edges\ngetColoredEdges edges =\n    List.filter (\\e -> e.color > 0) edges\n\n\ngetUncoloredEdges : Edges -> Edges\ngetUncoloredEdges edges =\n    {- let _ = Debug.log \"we have uncolored edges: \" (Debug.toString (List.length (List.filter (\\e -> if e.color < 0 then True else False) edges)))\n       in\n    -}\n    List.filter (\\e -> e.color < 0) edges\n\n\naddEdgesForNextState :\n    ( Int, Int )\n    -> Int\n    ->\n        { aFrom : ( Int, Int )\n        , aTo : ( Int, Int )\n        , bFrom : ( Int, Int )\n        , bTo : ( Int, Int )\n        }\naddEdgesForNextState ( x, y ) s =\n    let\n        p1 =\n            ( x - 1, y - 1 )\n\n        p2 =\n            ( x - 1, y + 1 )\n\n        p3 =\n            ( x + 1, y + 1 )\n\n        p4 =\n            ( x + 1, y - 1 )\n    in\n    case s of\n        0 ->\n            { aFrom = p1\n            , aTo = p4\n            , bFrom = p2\n            , bTo = p3\n            }\n\n        1 ->\n            { aFrom = p1\n            , aTo = p2\n            , bFrom = p4\n            , bTo = p3\n            }\n\n        2 ->\n            { aFrom = p1\n            , aTo = p3\n            , bFrom = p2\n            , bTo = p4\n            }\n\n        _ ->\n            { aFrom = p2\n            , aTo = p4\n            , bFrom = p1\n            , bTo = p3\n            }\n\n\nsubscriptions : Model -> Sub Msg\nsubscriptions model =\n    Sub.batch\n        [ Browser.Events.onClick\n            (Decode.map2 Msg\n                (Decode.field \"pageX\" Decode.int)\n                (Decode.field \"pageY\" Decode.int)\n            )\n        ]\n\n\nview : Model -> Html Msg\nview model =\n    --Html.text (\"Len of edge list = \" ++ Debug.toString (List.length model.edges))\n    Html.div\n        [ Html.Attributes.style \"color\" \"#042931\"\n        , Html.Attributes.style \"width\" \"300px\"\n        , Html.Attributes.style \"font-size\" \"14px\"\n        , Html.Attributes.style \"font-family\" \"Helvetica\"\n        , Html.Attributes.style \"margin\" (String.fromInt margin ++ \"px\")\n        ]\n        [ drawKnot model\n        , statistics model\n        , Html.p [] [ Html.text \"Can you generate at least three intertwined knots by using not more than three bypasses (gaps) – such that any crossing is between two different knots?\" ]\n        , Html.p [] [ Html.text \"Can you generate one single knot with no crossings at all?\" ]\n        , Html.p [] [ Html.text \"Can you generate two intertwined knots with using one single gap?\" ]\n        , Html.p [] [ Html.text \"Can you generate one single knot such that all interior points are gaps?\" ]\n        , Html.p [] [ Html.text \"(Hard): What is the smallest number of gaps you have to insert to produce a link such that on every join – no matter if crossing or gap –, two different knots are meeting?\" ]\n        ]\n\n\nstatistics : Model -> Html Msg\nstatistics model =\n    let\n        nGaps =\n            List.length (List.filter (\\s -> s == 0 || s == 1) (Dict.values model.states))\n\n        nKnots_ =\n            List.maximum (List.map (\\e -> e.color) model.edges)\n    in\n    let\n        nKnots =\n            case nKnots_ of\n                Nothing ->\n                    0\n\n                Just n ->\n                    n\n    in\n    let\n        gaps =\n            if nGaps > 0 then\n                fromInt nGaps ++ \" gaps\"\n\n            else\n                \"no gap\"\n\n        knots =\n            if nKnots > 0 then\n                fromInt nKnots ++ \" knots\"\n\n            else\n                \"no knot\"\n    in\n    Html.p [ Html.Attributes.style \"color\" \"#008097\" ] [ Html.text (\"You have drawn: \" ++ gaps ++ \" and \" ++ knots) ]\n\n\ndrawKnot : Model -> Html Msg\ndrawKnot model =\n    let\n        a =\n            List.range 0 ((nrows + 1) * 2)\n                |> List.concatMap\n                    (\\i ->\n                        List.range 0 ((ncols + 1) * 2)\n                            |> List.map (\\j -> ( i, j ))\n                    )\n    in\n    let\n        crossing =\n            List.filter isCrossing a\n    in\n    let\n        svgSizex =\n            2 * (ncols + 1) * gridSize\n\n        svgSizey =\n            2 * (nrows + 1) * gridSize\n    in\n    Svg.svg\n        [ width (fromInt svgSizey)\n        , height (fromInt svgSizex)\n        , viewBox (\"0 0 \" ++ fromInt svgSizey ++ \" \" ++ fromInt svgSizex)\n        ]\n        -- draw bottom layer\n        ((List.filter\n            (\\e ->\n                if e.layer == True then\n                    True\n\n                else\n                    False\n            )\n            model.edges\n            |> List.map drawEdge\n         )\n            -- draw top layer\n            ++ (List.filter\n                    (\\e ->\n                        if e.layer == False then\n                            True\n\n                        else\n                            False\n                    )\n                    model.edges\n                    |> List.map drawEdge\n               )\n            -- crossing dots on top\n            ++ List.map drawDot crossing\n        )\n\n\ndrawDot : ( Int, Int ) -> Svg msg\ndrawDot ( x, y ) =\n    Svg.circle2d\n        dotStyle\n        (Circle2d.withRadius (pixels 4)\n            (Point2d.pixels\n                (toFloat (gridSize * x))\n                (toFloat (gridSize * y))\n            )\n        )\n\n\ndrawEdge : Edge -> Svg msg\ndrawEdge e =\n    let\n        corner =\n            isCorner e\n\n        border =\n            isBorder e\n    in\n    if corner /= NoCorner then\n        drawCorner e corner\n\n    else if border /= NoBorder then\n        drawBorder e border\n\n    else\n        drawConnection e\n\n\nisCorner : Edge -> Corner\nisCorner e =\n    let\n        x1 =\n            Tuple.first e.from\n\n        y1 =\n            Tuple.second e.from\n\n        x2 =\n            Tuple.first e.to\n\n        y2 =\n            Tuple.second e.to\n    in\n    let\n        minx =\n            Basics.min x1 x2\n\n        maxx =\n            Basics.max x1 x2\n\n        miny =\n            Basics.min y1 y2\n\n        maxy =\n            Basics.max y1 y2\n    in\n    if e.belongsToCrossingPoint /= Nothing then\n        NoCorner\n\n    else if minx == 1 && miny == 1 then\n        TopLeft\n\n    else if minx == 1 && maxy == ncols * 2 + 1 then\n        TopRight\n\n    else if maxx == nrows * 2 + 1 && miny == 1 then\n        BottomLeft\n\n    else if maxx == nrows * 2 + 1 && maxy == ncols * 2 + 1 then\n        BottomRight\n\n    else\n        NoCorner\n\n\nisBorder : Edge -> Border\nisBorder e =\n    let\n        x1 =\n            Tuple.first e.from\n\n        y1 =\n            Tuple.second e.from\n\n        x2 =\n            Tuple.first e.to\n\n        y2 =\n            Tuple.second e.to\n    in\n    if e.belongsToCrossingPoint /= Nothing then\n        NoBorder\n\n    else if x1 == 1 && x2 == 1 then\n        Top\n\n    else if y1 == 1 && y2 == 1 then\n        Left\n\n    else if y1 == 2 * (ncols + 1) - 1 && y2 == 2 * (ncols + 1) - 1 then\n        Right\n\n    else if x1 == 2 * (nrows + 1) - 1 && x2 == 2 * (nrows + 1) - 1 then\n        Bottom\n\n    else\n        NoBorder\n\n\ndrawCorner : Edge -> Corner -> Svg msg\ndrawCorner e corner =\n    let\n        x1 =\n            Tuple.first e.from\n\n        y1 =\n            Tuple.second e.from\n\n        x2 =\n            Tuple.first e.to\n\n        y2 =\n            Tuple.second e.to\n    in\n    let\n        pfrom =\n            Point2d.pixels (toFloat (gridSize * x1)) (toFloat (gridSize * y1))\n\n        pto =\n            Point2d.pixels (toFloat (gridSize * x2)) (toFloat (gridSize * y2))\n    in\n    let\n        pcontrol =\n            case corner of\n                TopLeft ->\n                    Point2d.pixels (gridSize * -0.5) (gridSize * -0.5)\n\n                TopRight ->\n                    Point2d.pixels (gridSize * -0.5) (gridSize * (2 * (ncols + 1) + 0.5))\n\n                BottomLeft ->\n                    Point2d.pixels (gridSize * (2 * (nrows + 1) + 0.5)) (gridSize * -0.5)\n\n                -- BottomRight\n                _ ->\n                    Point2d.pixels (gridSize * (2 * (nrows + 1) + 0.5)) (gridSize * (2 * (ncols + 1) + 0.5))\n    in\n    let\n        spline =\n            QuadraticSpline2d.fromControlPoints pfrom pcontrol pto\n    in\n    Svg.g []\n        [ Svg.quadraticSpline2d lineStyleWhite spline\n        , Svg.quadraticSpline2d (lineStyleGeneric ++ [ Attributes.stroke (getColor e.color) ]) spline\n        ]\n\n\ndrawBorder : Edge -> Border -> Svg msg\ndrawBorder e border =\n    let\n        x1 =\n            Tuple.first e.from\n\n        y1 =\n            Tuple.second e.from\n\n        x2 =\n            Tuple.first e.to\n\n        y2 =\n            Tuple.second e.to\n    in\n    let\n        pfrom =\n            Point2d.pixels (toFloat (gridSize * x1)) (toFloat (gridSize * y1))\n\n        pto =\n            Point2d.pixels (toFloat (gridSize * x2)) (toFloat (gridSize * y2))\n\n        xmin =\n            Basics.min x1 x2\n\n        ymin =\n            Basics.min y1 y2\n    in\n    let\n        pcontrol =\n            case border of\n                Top ->\n                    Point2d.pixels 0.0 (toFloat (ymin + 1) * gridSize)\n\n                Left ->\n                    Point2d.pixels (toFloat (xmin + 1) * gridSize) 0.0\n\n                Right ->\n                    Point2d.pixels (toFloat (xmin + 1) * gridSize) (gridSize * 2 * (toFloat ncols + 1))\n\n                -- Bottom\n                _ ->\n                    Point2d.pixels (gridSize * 2 * (toFloat nrows + 1)) (toFloat (ymin + 1) * gridSize)\n    in\n    let\n        spline =\n            QuadraticSpline2d.fromControlPoints pfrom pcontrol pto\n    in\n    Svg.g []\n        [ Svg.quadraticSpline2d lineStyleWhite spline\n        , Svg.quadraticSpline2d (lineStyleGeneric ++ [ Attributes.stroke (getColor e.color) ]) spline\n        ]\n\n\ndrawConnection : Edge -> Svg msg\ndrawConnection e =\n    let\n        ( x1, y1 ) =\n            e.from\n\n        ( x2, y2 ) =\n            e.to\n\n        ( x_, y_ ) =\n            case e.belongsToCrossingPoint of\n                Just ( a, b ) ->\n                    ( a, b )\n\n                Nothing ->\n                    ( -1, -1 )\n    in\n    let\n        pfrom =\n            Point2d.pixels (toFloat (gridSize * x1)) (toFloat (gridSize * y1))\n\n        pto =\n            Point2d.pixels (toFloat (gridSize * x2)) (toFloat (gridSize * y2))\n\n        pcontrol =\n            Point2d.pixels (toFloat (gridSize * x_)) (toFloat (gridSize * y_))\n\n        spline =\n            if (x1 == x2 || y1 == y2) && e.belongsToCrossingPoint /= Nothing then\n                Just (QuadraticSpline2d.fromControlPoints pfrom pcontrol pto)\n\n            else\n                Nothing\n    in\n    case spline of\n        Just spline_ ->\n            Svg.g []\n                [ Svg.quadraticSpline2d lineStyleWhite spline_\n                , Svg.quadraticSpline2d (lineStyleGeneric ++ [ Attributes.stroke (getColor e.color) ]) spline_\n                ]\n\n        Nothing ->\n            Svg.g []\n                [ Svg.lineSegment2d lineStyleWhite (LineSegment2d.from pfrom pto)\n                , Svg.lineSegment2d (lineStyleGeneric ++ [ Attributes.stroke (getColor e.color) ]) (LineSegment2d.from pfrom pto)\n                ]\n\n\ngetColor : Int -> String\ngetColor color =\n    let\n        s =\n            List.head (List.drop (color - 1) colorNames)\n    in\n    case s of\n        Nothing ->\n            \"black\"\n\n        Just s_ ->\n            s_\n\n\ninit : Flags -> ( Model, Cmd Msg )\ninit () =\n    ( initialModel, Cmd.none )\n\n\nmain : Program Flags Model Msg\nmain =\n    Browser.element\n        { init = init\n        , view = view\n        , update = update\n        , subscriptions = subscriptions\n        }\n","import { Elm } from \"./src/Main.elm\";\n\nconst app = Elm.Main.init({\n  node: document.getElementById(\"elm-node\"),\n  flags: { devicePixelRatio: window.devicePixelRatio },\n});\n\nwindow.addEventListener(\"touchstart\", (event) => {\n  app.ports.touchStart.send(getTouchEvents(event.changedTouches));\n});\n\nwindow.addEventListener(\"touchmove\", (event) => {\n  app.ports.touchMove.send(getTouchEvents(event.changedTouches));\n});\n\nwindow.addEventListener(\"touchend\", (event) => {\n  app.ports.touchEnd.send(getTouchEvents(event.changedTouches));\n});\n\nwindow.addEventListener(\"touchcancel\", (event) => {\n  app.ports.touchCancel.send(getTouchEvents(event.changedTouches));\n});\n\n// touch\nfunction getTouchEvents(touches) {\n  const a = [];\n  for (let i = 0; i < touches.length; i++) {\n    a.push({\n      identifier: touches[i].identifier,\n      pageX: touches[i].pageX,\n      pageY: touches[i].pageY,\n    });\n  }\n  return a;\n}\n"],"names":["n","r","t","a","f","e","u","i","o","c","v","b","l","g","pop","N","push","p","$","vr","h","ar","fr","ir","m","y","w","j","k","_","A","length","E","Array","J","Error","L","x","Math","ceil","C","floor","T","log","B","join","F","q","O","H","gr","isFinite","String","z","d","M","R","S","Y","I","P","D","G","Dr","br","dr","lr","hasOwnProperty","Ar","s","hr","sr","isArray","FileList","Ir","Q","W","Z","X","K","U","V","fn","nn","rn","tn","en","un","shift","an","on","cn","vn","bn","sn","dn","ln","gn","hn","$n","pn","mn","yn","document","wn","appendChild","kn","jn","Nn","_n","An","En","Jn","Ln","xn","createTextNode","elm_event_node_ref","Cn","createElementNS","createElement","Tn","qn","Bn","Fn","style","setAttribute","removeAttribute","setAttributeNS","removeAttributeNS","elmFs","removeEventListener","On","addEventListener","passive","Hr","window","Object","defineProperty","get","av","c_","stopPropagation","cQ","preventDefault","zn","Mn","Rn","Sn","In","Dn","Yn","Gn","Hn","Pn","Qn","Wn","childNodes","Zn","Xn","parentNode","replaceChild","replaceData","removeChild","insertBefore","createDocumentFragment","Kn","nodeType","textContent","attributes","name","value","tagName","toLowerCase","Un","flags","ports","eM","fb","e8","fe","node","Vn","cancelAnimationFrame","requestAnimationFrame","setTimeout","nr","rr","tr","er","ur","$r","pr","or","cr","mr","yr","wr","kr","jr","_r","Er","Jr","Nr","Lr","xr","Cr","Tr","Br","Fr","qr","Or","zr","Mr","Rr","Sr","Yr","Pr","Gr","Qr","Wr","Zr","Xr","Kr","Ur","Vr","nt","rt","tt","et","Task","ut","it","ft","at","ot","ct","vt","bt","st","dt","lt","gt","ht","$t","pt","mt","yt","wt","kt","jt","_t","At","Et","Jt","Nt","Lt","xt","aJ","a7","Ct","Tt","ei","ej","Bt","Ft","qt","Ot","zt","dY","d9","Mt","Rt","St","Yt","It","Dt","dh","$7","Pt","Gt","Ht","Qt","Wt","Zt","Xt","Ut","Vt","ne","re","te","ee","bb","bc","bf","bg","ue","ie","ae","oe","ce","ve","be","se","de","le","ge","he","$e","pe","me","ye","we","e0","es","ke","je","_e","Ae","Ee","Je","Ne","Le","xe","aZ","bx","bB","Ce","Te","Be","Fe","qe","Oe","ze","Me","Re","Se","Ye","De","Pe","Ge","He","Qe","We","Ze","Xe","Ke","Ue","Ve","nu","ru","tu","eu","uu","Main","init","Elm","$e1bab588035c92820a641bec8951ec7d$var$app","getElementById","devicePixelRatio","$e1bab588035c92820a641bec8951ec7d$var$getTouchEvents","touches","identifier","pageX","pageY","event","touchStart","send","changedTouches","touchMove","touchEnd","touchCancel"],"version":3,"file":"index.391d8d05.js.map"}